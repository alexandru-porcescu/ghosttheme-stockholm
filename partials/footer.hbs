<!-- start main-footer -->
	<footer class="main-footer">
				<!-- start first footer widget area -->
					{{> widget-recentpost}}
				<!-- end first footer widget area -->
				<!-- start second footer widget area -->

					{{#is "post"}}
						{{#is "page"}}
							{{> widget-authors}}
						{{else}}
							{{#post}}
								{{> widget-relatedpost}}
							{{/post}}
						{{/is}}
					{{else}}
						{{> widget-authors}}
					{{/is}}

				<!-- end second footer widget area -->
				<!-- start third footer widget area -->
					{{> widget-tagcloud}}
				<!-- end third footer widget area -->
	</footer>
	<!-- end main-footer -->


	<!-- scripts -->
	<script src="{{asset "/js/includes/highlight.pack.js"}}"></script>
	<script src="{{asset "/js/main.min.js"}}"></script>
	{{#has author="Matt Alhonte"}}<script src="{{asset "/js/includes/previews.js"}}"></script>{{/has}}
	<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/js/materialize.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/ghost-search@0.1.0/dist/ghost-search.min.js"></script>
	<script type="text/javascript">
    let ghostSearch = new GhostSearch({
        input:   '#my-custom-input',
        results: '#my-custom-results',
        options: {
						limit: 5,
            keys: [
                'title',
                'plaintext'
            ],
        },
        api: {
            resource: 'posts',
            parameters: {
                fields: ['title', 'slug', 'plaintext', 'image'],
                formats: 'plaintext',
								include: 'tags'
            },
        },
				template: function(result) {
					console.log(result);
					console.log(result.image);
						let tag = result.tags[0];
            let url = [location.protocol, '//', location.host].join('');
            return '<li> \n' +
						'<img src="' + result.feature_image + '"> \n ' +
						'<div><a href="' + result.url + '">' + result.title + '</a> \n' +
						'<span class="tag "> <span class="' + tag.slug + '"><i class="fas fa-tags"></i> ' + tag.name + '</span></span></div> \n '+
						'</li>';
        }
    })


			// DOM Element Variables
			const loginFormEl = document.getElementById("login");
			const loginEmailEl = document.getElementById("login-email");
			const loginPasswordEl = document.getElementById("login-password");
			const notificationEl = document.getElementById("info");
			const loggedInEl = document.getElementById("logged-in");
			const successEl = document.getElementById("success");
			const errorEl = document.getElementById("error");

			// Notification Functions
			function displayError(errorMessage) {
				clearNotifications();
				errorEl.innerText = errorMessage;
				$('#error').css('display', 'block');
				$('#info').css('display', 'block');
			}

			function displaySuccess(successMessage) {
				clearNotifications();
				$('#success').css('display', 'block');
				$('#info').css('display', 'block');
				successEl.innerText = successMessage
			}

			function clearNotifications() {
				[errorEl, successEl].forEach(el => el.innerText = "")
			}

			// Helper Functions
			function clearFields(fields) {
				fields.forEach(field => field.value = "")
			}

			function toggleHiddenElementById(id) {
				document.getElementById(id).classList.toggle("hidden");
			}

			// UI State Transitions
			function showRegistrationForm() {
				clearNotifications();
				resendConfirmationEl.hidden = true;
				registerFormEl.hidden = false;
				loggedInEl.hidden = true;
				postRegistrationEl.hidden = true;
			}

			function showLoginForm() {
				clearNotifications();
				resendConfirmationEl.hidden = true;
				loginFormEl.hidden = false;
				loggedInEl.hidden = true;
				postRegistrationEl.hidden = true;
			}

			function showControlPanel() {
				clearNotifications()
				resendConfirmationEl.hidden = true;
				loginFormEl.hidden = true;
				registerFormEl.hidden = true;
				loggedInEl.hidden = true;
				postRegistrationEl.hidden = true;
			}

			function showResendConfirmationForm() {
				clearNotifications()
				resendConfirmationEl.hidden = false;
				loginFormEl.hidden = true;
				registerFormEl.hidden = true;
				loggedInEl.hidden = true;
				postRegistrationEl.hidden = true;
			}

			function showLoggedInState() {
				clearFields([loginEmailEl, loginPasswordEl]);
				clearNotifications()
				resendConfirmationEl.hidden = true;
				loginFormEl.hidden = true;
				registerFormEl.hidden = true;
				loggedInEl.hidden = false;
				postRegistrationEl.hidden = true;
			}

			function showPostRegistrationState() {
				clearFields([registerEmailEl, registerPasswordEl]);
				resendConfirmationEl.hidden = true;
				loginFormEl.hidden = true;
				registerFormEl.hidden = true;
				loggedInEl.hidden = true;
				postRegistrationEl.hidden = false;
			}

			function setPostRegistrationState() {
				// Clear registration form inputs then hide the form
				clearFields([registerEmailEl, registerPasswordEl]);
				toggleHiddenElementById("create-a-user");
				return Promise.resolve()
			}



	$( document ).ready(function() {

		  $('#account').on('click', function(event) {
		    event.preventDefault();
		    $('.overlay').css('display', 'block');
		    $('.accountback').animate({
		      opacity: 1
		    }, 100, 'swing');

		    $('.menu-wrapper').animate({
		      opacity: 1
		    }, 100, 'swing');

		    $('.overlay').animate({
		      opacity: .3
		    }, 100, 'swing');

		    return false;

		  });

		  $('.overlay').on('click', function(event) {
		    $('.overlay').animate({
		      opacity: 0
		    }, 100, 'swing', function() {
		      $('.overlay').css('display', 'none');
		    });

		    $('.accountback').animate({
		      opacity: 0
		    }, 100, 'swing');

		    $('.menu-wrapper').animate({
		      opacity: 0
		    }, 100, 'swing');
		  });
		});


</script>



	{{ghost_foot}}
</body>
</html>
