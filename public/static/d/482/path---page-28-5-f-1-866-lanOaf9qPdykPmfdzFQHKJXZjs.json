{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673677","title":"Lynx Roundup, June 17th","slug":"lynx-roundup-june-17th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx48@2x.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/17/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/17/2018.","created_at_pretty":"15 June, 2018","published_at_pretty":"17 June, 2018","updated_at_pretty":"25 July, 2018","created_at":"2018-06-14T20:29:17.000-04:00","published_at":"2018-06-17T07:00:00.000-04:00","updated_at":"2018-07-24T22:06:03.000-04:00","meta_title":"Lynx Roundup, June 17th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/17/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/17/2018.","og_image":"https://hackersandslackers.com/content/images/lynx/lynx48@2x.jpg","og_title":"Lynx Roundup, June 17th","twitter_description":"Daily roundup of Data Science news around the industry, 6/17/2018.","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx48@2x.jpg","twitter_title":"Lynx Roundup, June 17th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},{"name":"Data Vis","slug":"datavis","description":"Visualize your data with charting tools like Matplotlib, Plotly, D3, Chart.js, Muze, Seaborn, and countless others. Primarily focused on programmatic visualization as opposed to Business Intelligence software.","feature_image":null,"meta_description":"Visualize your data with charting tools like Matplotlib, Plotly, D3, Chart.js, Muze, Seaborn, and countless others. Focused on programmatic visualization.","meta_title":"Data Visualization | Hackers and Slackers","visibility":"public"},{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"}],"plaintext":"http://hookedondata.org/Advice-for-Applying-to-Data-Science-Jobs/\n\nSUPER USEFUL, especially for those of us who learned the analytics part first\nand picked up coding second. \nhttps://drivendata.github.io/cookiecutter-data-science/\n\nwhoa. \nhttps://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication\n\nhttps://opensource.com/article/18/5/bash-tricks\n\nhttps://medium.com/@enjalot/the-trouble-with-d3-4a84f7de011f","html":"<p><a href=\"http://hookedondata.org/Advice-for-Applying-to-Data-Science-Jobs/\">http://hookedondata.org/Advice-for-Applying-to-Data-Science-Jobs/</a></p>\n<p>SUPER USEFUL, especially for those of us who learned the analytics part first and picked up coding second.  <a href=\"https://drivendata.github.io/cookiecutter-data-science/\">https://drivendata.github.io/cookiecutter-data-science/</a></p>\n<p>whoa. <a href=\"https://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication\">https://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication</a></p>\n<p><a href=\"https://opensource.com/article/18/5/bash-tricks\">https://opensource.com/article/18/5/bash-tricks</a></p>\n<p><a href=\"https://medium.com/@enjalot/the-trouble-with-d3-4a84f7de011f\">https://medium.com/@enjalot/the-trouble-with-d3-4a84f7de011f</a></p>\n","url":"https://hackersandslackers.com/lynx-roundup-june-17th/","uuid":"bafad7a8-9ae8-4c52-b36f-6dfe4c9247ad","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b23085df37f772d33bc1eaf"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673676","title":"Lynx Roundup, June 16th","slug":"lynx-roundup-june-16th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx47@2x.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/16/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/16/2018.","created_at_pretty":"15 June, 2018","published_at_pretty":"16 June, 2018","updated_at_pretty":"25 July, 2018","created_at":"2018-06-14T20:27:04.000-04:00","published_at":"2018-06-16T07:00:00.000-04:00","updated_at":"2018-07-24T22:06:03.000-04:00","meta_title":"Lynx Roundup, June 16th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/16/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/16/2018.","og_image":"https://hackersandslackers.com/content/images/lynx/lynx47@2x.jpg","og_title":"Lynx Roundup, June 16th","twitter_description":"Daily roundup of Data Science news around the industry, 6/16/2018.","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx47@2x.jpg","twitter_title":"Lynx Roundup, June 16th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.nextplatform.com/2018/05/14/chewing-a-billion-by-billion-matrix-crammed-into-gigabytes-of-memory/\n\nhttps://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/\n\nhttps://www.frontiersin.org/articles/10.3389/fnhum.2014.00020/full\n\nhttps://blog.trailofbits.com/2018/05/03/state-machine-testing-with-echidna/\n\nhttps://www.sciencedirect.com/science/article/pii/S0896627313011835","html":"<p><a href=\"https://www.nextplatform.com/2018/05/14/chewing-a-billion-by-billion-matrix-crammed-into-gigabytes-of-memory/\">https://www.nextplatform.com/2018/05/14/chewing-a-billion-by-billion-matrix-crammed-into-gigabytes-of-memory/</a></p>\n<p><a href=\"https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/\">https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/</a></p>\n<p><a href=\"https://www.frontiersin.org/articles/10.3389/fnhum.2014.00020/full\">https://www.frontiersin.org/articles/10.3389/fnhum.2014.00020/full</a></p>\n<p><a href=\"https://blog.trailofbits.com/2018/05/03/state-machine-testing-with-echidna/\">https://blog.trailofbits.com/2018/05/03/state-machine-testing-with-echidna/</a></p>\n<p><a href=\"https://www.sciencedirect.com/science/article/pii/S0896627313011835\">https://www.sciencedirect.com/science/article/pii/S0896627313011835</a></p>\n","url":"https://hackersandslackers.com/lynx-roundup-june-16th/","uuid":"cc6705f3-e4fc-4953-b094-8f9b0b9f0818","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b2307d8f37f772d33bc1eac"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673678","title":"Using PyMySQL: Python's MySQL Library","slug":"using-pymysql","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/pymysql-1.jpg","excerpt":"The lightweight Python library for interacting with MySQL.","custom_excerpt":"The lightweight Python library for interacting with MySQL.","created_at_pretty":"15 June, 2018","published_at_pretty":"15 June, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-06-14T20:32:21.000-04:00","published_at":"2018-06-15T16:48:12.000-04:00","updated_at":"2019-04-10T00:43:08.000-04:00","meta_title":"Using PyMySQL: Python's MySQL Library | Hackers and Slackers","meta_description":"Learn to work with PyMySQL: the lightweight Python library for interacting with MySQL.","og_description":"Learn to work with PyMySQL: the lightweight Python library for interacting with MySQL.","og_image":"https://hackersandslackers.com/content/images/2019/04/pymysql-1-2.jpg","og_title":"Using PyMySQL: Python's MySQL Library","twitter_description":"Learn to work with PyMySQL: the lightweight Python library for interacting with MySQL.","twitter_image":"https://hackersandslackers.com/content/images/2019/04/pymysql-1-1.jpg","twitter_title":"Using PyMySQL: Python's MySQL Library","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"SQL","slug":"sql","description":"Configure relational databases, brush up on your query language syntax, or find third-party services to interact with your data.","feature_image":"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/sql-tag.jpg","meta_description":"Configure relational databases, brush up on your query language syntax, or find third-party services to interact with your data.","meta_title":"Working with SQL | Hackers and Slackers","visibility":"public"},{"name":"MySQL","slug":"mysql","description":"Database configuration, building queries, and cloud hosting options for MySQL.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/mysqlrevamp_o.jpg","meta_description":"Database configuration, building queries, and cloud hosting options for MySQL.","meta_title":"Working with MySQL | Hackers and Slackers","visibility":"public"},{"name":"Data Engineering","slug":"dataengineering","description":"The systematic collection and transformation of data via the creation of tools and pipelines.","feature_image":null,"meta_description":null,"meta_title":"Data Engineering | Hackers and Slackers","visibility":"public"},{"name":"#Working with MySQL","slug":"working-with-mysql","description":"Learn about MySQL database configuration, the query language, and cloud hosted instances.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/mysql1_o-1.jpg","meta_description":"Learn about MySQL database configuration, the query language, and cloud hosted instances.","meta_title":"Working with MySQL","visibility":"internal"}],"plaintext":"It's almost Friday night, and the squad at H+S is ready to get cooking. Dim down\nthe lights and slip into something more comfortable as we take you on this 100%\norganic flavor extravaganza. Tonight's menu? A Python MySQL library: PyMySQL\n[https://github.com/PyMySQL/PyMySQL].\n\nPyMySQL is lightweight and perfect for fulfilling MySQL queries. If you want\nbells and whistles, you're probably barking up the wrong tree (and you probably\nshould’ve used a DB other than MySQL in the first place).\n\nWhy write tutorials for technologies we openly trash talk? Out of necessity, of\ncourse! There's nothing wrong with MySQL, most enterprises are married to it in\nsome way. Thus, A great use case for PyMySQL is for usage in AWS lambda when\nworking with large enterprise systems. We'll get to that, but for now let's cook\nup something good.\n\nHeat up the Stove\nTurn on the gas and prep the table to set with your favorite collection of\nplates! That's right, we're talking boilerplate. We knew this was coming; it\nseems like every time you want to do something tangibly cool, we need to get\ninto the business of managing connections and whatnot.\n\nTo ease the pain, I'll share with you a preferred method of handling opening\nconnections with PyMySQL. Here we set a function to separate basic connection\nlogic and error messaging from our app:\n\nimport sys\nimport pymysql\nimport logger\n\nconn = None\n\ndef openConnection():\n    global conn\n    try:\n        if(conn is None):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=5)\n        elif (not conn.open):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=5)    \n    except:\n        logger.error(\"ERROR: Unexpected error: Could not connect to MySql instance.\")\n        sys.exit()\n\n\n\nNothing fancy here: we set a global variable conn  to serve as our connection,\nand have some basic logic on how to interact with our database. Running \nopenConnection  will attempt to connect to a MySQL db with supplied credentials,\nor throw an error if something goes horribly wrong.\n\nNow we can keep this separate from the rest of our code. Out of sight, out of\nmind.\n\nMeat and Potatoes\nWith the boring stuff out of the way, let's dig into some goodness. We'll start\noff with a basic use case: selecting all rows from a table:\n\ndef getRecords():\n    try:\n        openConnection()\n        with conn.cursor() as cur:\n            sql = \"SELECT * FROM table\"\n            cur.execute(sql)\n            result = cur.fetchall()\n            print(result)\n            cur.close()\n            conn.close()\n    except Exception as e:\n        print(e)\n    finally:\n        print('Query Successful')\n        \ngetRecords() \n\n\nWe split our function into your standard try/except/finally  breakdown. What\nwe're trying is opening a connection using the function we created earlier, and\nrunning queries against it.\n\nThe preferred syntax in PyMySQL is to keep our query in a single string, as seen\nin our variable sql. With our query ready, we need to execute  the query, fetch \nthe resulting records and print the result. We're sure to close the connection\nonce we're done with executing queries... this is critical to ensure db\nconnections don't stay active.\n\nSimple so far, but we're about to kick it up a notch.\n\nSelecting rows\nYou may have noticed we used .fetchall()  to select all records. This is\nimportant to differentiate from .fetchone(), which simply selects the first\nrecord.\n\nWe can iterate over the rows resulting from .fetchall()  with a simple loop, as\nshown in the example below. Beware: attempting to print the result of \n.fetchall()  will simply result in a single integer, which represents the number\nof rows fetched. If there are instances where we know only one record should be\nreturned, .fetchone()  should be used instead.\n\ndef getRecords(table):\n    try:\n        openConnection()\n        with conn.cursor() as cur:\n            sql = \"SELECT * FROM %s\"\n            cur.execute(sql, table)\n            result = cur.fetchall()\n            for row in result:\n                record = {\n                        'id': row[0],\n                        'name': row[1],\n                        'email': row[2],\n                        'phone': row[3],\n\n                    }\n            cur.close()\n            conn.close()\n    except Exception as e:\n        print(e)\n    finally:\n        print('Query Successful')\n        \ngetRecords('table_name')       \n\n\nWhoa, what's with the %s? This is how we pass arguments into queries in PyMySQL.\nThe PyMySQL guys were kind enough to realize how obnoxious it is to constantly\nbreak strings to pass in variables - in the case of SQL queries, this beyond\nobnoxious and borderline unworkable. Remember that MySQL requires explicit\nquotations around passing string values, so queries such as these become a\nnonsensical jumble of escaped characters.\n\nPyMySQL supports backquotes: the distant cousin of the single quotation mark,\nAKA the diagonal quote thing above the tilde ~ button on your keyboard. You\nknow: `. If there comes a time to set a string within your query use this\nelusive quotation as such: sql = \"SELECT * FROM %s WHERE column_name =\n`somevalue`\"Updating Rows of Data\nArguments can be passed as anything inside a query: they simply appear in the\norder in which they are passed. In the below example, we pass table as an\nargument, as well values we want updated, and the identifier for target rows:\n\ndef getRecords(table, data):\n    try:\n        openConnection()\n        with conn.cursor() as cur:\n            sql = \"UPDATE %s SET date=%s, numsent=%s WHERE email = %s\"\n            cur.execute(sql, (table, data['date_sent'], data['status'], data['email']))\n            conn.commit()\n            cur.close()\n            conn.close()\n    except Exception as e:\n        print(e)\n    finally:\n        print('Query Successful')\n\ndata = {\n    'date_sent': '12/01/2018'\n    'email': 'fakeemail@example.com'\n    'status': 'Confirmed'\n}\ngetRecords('table_name', data)       \n\n\nHeads up:  Note the line conn.commit(). Don't forget that - this is what\nactually commits the update to the database. Forgetting this line and wasting\nhours debugging is somewhat of a rite of passage, but let's just skip all that.\n\nFor Dessert: Usage in AWS Lambda\nIt is my treat to share with you my world famous copy & paste recipe for AWS\nLambda. Here we store all of our db credentials in a separate file called \nrdsconfig.py. We also enable logging to take us through what is happening each\nstep of the way:\n\nimport sys\nimport logging\nimport rds_config\nimport pymysql\n\n#rds settings\nrds_host  = \"rdsName.dfsd834mire.us-west-3.rds.amazonaws.com\"\nname = rds_config.db_username\npassword = rds_config.db_password\ndb_name = rds_config.db_name\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\nconn = None\n\ndef openConnection():\n    global conn\n    try:\n        if(conn is None):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=10)\n        elif (not conn.open):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=10)\n    except:\n        logger.error(\"ERROR: Could not connect to MySql instance.\")\n        sys.exit()\n\n\nlogger.info(\"SUCCESS: Connection to RDS mysql instance succeeded\")\n\n\nWe thank you all for joining us in this adventure of tantalizing treats. May\nyour data be clean and your stomachs full.\n\nBon appétit.","html":"<p>It's almost Friday night, and the squad at H+S is ready to get cooking. Dim down the lights and slip into something more comfortable as we take you on this 100% organic flavor extravaganza. Tonight's menu? A Python MySQL library: <a href=\"https://github.com/PyMySQL/PyMySQL\">PyMySQL</a>.</p><p>PyMySQL is lightweight and perfect for fulfilling MySQL queries. If you want bells and whistles, you're probably barking up the wrong tree (and you probably should’ve used a DB other than MySQL in the first place).</p><p>Why write tutorials for technologies we openly trash talk? Out of necessity, of course! There's nothing wrong with MySQL, most enterprises are married to it in some way. Thus, A great use case for PyMySQL is for usage in AWS lambda when working with large enterprise systems. We'll get to that, but for now let's cook up something good.</p><h2 id=\"heat-up-the-stove\">Heat up the Stove</h2><p>Turn on the gas and prep the table to set with your favorite collection of plates! That's right, we're talking boilerplate. We knew this was coming; it seems like every time you want to do something tangibly cool, we need to get into the business of managing connections and whatnot.</p><p>To ease the pain, I'll share with you a preferred method of handling opening connections with PyMySQL. Here we set a function to separate basic connection logic and error messaging from our app:</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">import sys\nimport pymysql\nimport logger\n\nconn = None\n\ndef openConnection():\n    global conn\n    try:\n        if(conn is None):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=5)\n        elif (not conn.open):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=5)    \n    except:\n        logger.error(&quot;ERROR: Unexpected error: Could not connect to MySql instance.&quot;)\n        sys.exit()\n\n</code></pre>\n<!--kg-card-end: markdown--><p>Nothing fancy here: we set a global variable <em>conn</em> to serve as our connection, and have some basic logic on how to interact with our database. Running <em>openConnection</em> will attempt to connect to a MySQL db with supplied credentials, or throw an error if something goes horribly wrong.</p><p>Now we can keep this separate from the rest of our code. Out of sight, out of mind.</p><h2 id=\"meat-and-potatoes\">Meat and Potatoes</h2><p>With the boring stuff out of the way, let's dig into some goodness. We'll start off with a basic use case: selecting all rows from a table:</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">def getRecords():\n    try:\n        openConnection()\n        with conn.cursor() as cur:\n            sql = &quot;SELECT * FROM table&quot;\n            cur.execute(sql)\n            result = cur.fetchall()\n            print(result)\n            cur.close()\n            conn.close()\n    except Exception as e:\n        print(e)\n    finally:\n        print('Query Successful')\n        \ngetRecords() \n</code></pre>\n<!--kg-card-end: markdown--><p>We split our function into your standard <em>try/except/finally</em> breakdown. What we're trying is opening a connection using the function we created earlier, and running queries against it.</p><p>The preferred syntax in PyMySQL is to keep our query in a single string, as seen in our variable <em>sql</em>. With our query ready, we need to <em>execute</em> the query, <em>fetch</em> the resulting records and print the result. We're sure to close the connection once we're done with executing queries... this is critical to ensure db connections don't stay active.</p><p>Simple so far, but we're about to kick it up a notch.</p><h3 id=\"selecting-rows\">Selecting rows</h3><p>You may have noticed we used <em>.fetchall()</em> to select all records. This is important to differentiate from <em>.fetchone()</em>, which simply selects the first record.</p><p>We can iterate over the rows resulting from <em>.fetchall()</em> with a simple loop, as shown in the example below. Beware: attempting to print the result of <em>.fetchall()</em> will simply result in a single integer, which represents the number of rows fetched. If there are instances where we know only one record should be returned, <em>.fetchone()</em> should be used instead.</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">def getRecords(table):\n    try:\n        openConnection()\n        with conn.cursor() as cur:\n            sql = &quot;SELECT * FROM %s&quot;\n            cur.execute(sql, table)\n            result = cur.fetchall()\n            for row in result:\n                record = {\n                        'id': row[0],\n                        'name': row[1],\n                        'email': row[2],\n                        'phone': row[3],\n\n                    }\n            cur.close()\n            conn.close()\n    except Exception as e:\n        print(e)\n    finally:\n        print('Query Successful')\n        \ngetRecords('table_name')       \n</code></pre>\n<!--kg-card-end: markdown--><p>Whoa, what's with the <em><strong>%s</strong></em>? This is how we pass arguments into queries in PyMySQL. The PyMySQL guys were kind enough to realize how obnoxious it is to constantly break strings to pass in variables - in the case of SQL queries, this beyond obnoxious and borderline unworkable. Remember that MySQL requires explicit quotations around passing string values, so queries such as these become a nonsensical jumble of escaped characters.</p><!--kg-card-begin: html--><div class=\"protip\">\nPyMySQL supports backquotes: the distant cousin of the single quotation mark, AKA the diagonal quote thing above the tilde ~ button on your keyboard. You know: `. If there comes a time to set a string within your query use this elusive quotation as such: <code>sql = \"SELECT * FROM %s WHERE column_name = `somevalue`\"</code>\n</div><!--kg-card-end: html--><h3 id=\"updating-rows-of-data\">Updating Rows of Data</h3><p>Arguments can be passed as anything inside a query: they simply appear in the order in which they are passed. In the below example, we pass table as an argument, as well values we want updated, and the identifier for target rows:</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">def getRecords(table, data):\n    try:\n        openConnection()\n        with conn.cursor() as cur:\n            sql = &quot;UPDATE %s SET date=%s, numsent=%s WHERE email = %s&quot;\n            cur.execute(sql, (table, data['date_sent'], data['status'], data['email']))\n            conn.commit()\n            cur.close()\n            conn.close()\n    except Exception as e:\n        print(e)\n    finally:\n        print('Query Successful')\n\ndata = {\n    'date_sent': '12/01/2018'\n    'email': 'fakeemail@example.com'\n    'status': 'Confirmed'\n}\ngetRecords('table_name', data)       \n</code></pre>\n<!--kg-card-end: markdown--><p><strong>Heads up:</strong> Note the line <em>conn.commit()</em>. Don't forget that - this is what actually commits the update to the database. Forgetting this line and wasting hours debugging is somewhat of a rite of passage, but let's just skip all that.</p><h2 id=\"for-dessert-usage-in-aws-lambda\">For Dessert: Usage in AWS Lambda</h2><p>It is my treat to share with you my world famous copy &amp; paste recipe for AWS Lambda. Here we store all of our db credentials in a separate file called <em>rdsconfig.py</em>. We also enable logging to take us through what is happening each step of the way:</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">import sys\nimport logging\nimport rds_config\nimport pymysql\n\n#rds settings\nrds_host  = &quot;rdsName.dfsd834mire.us-west-3.rds.amazonaws.com&quot;\nname = rds_config.db_username\npassword = rds_config.db_password\ndb_name = rds_config.db_name\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\nconn = None\n\ndef openConnection():\n    global conn\n    try:\n        if(conn is None):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=10)\n        elif (not conn.open):\n            conn = pymysql.connect(rds_host, user=name, passwd=password, db=db_name, connect_timeout=10)\n    except:\n        logger.error(&quot;ERROR: Could not connect to MySql instance.&quot;)\n        sys.exit()\n\n\nlogger.info(&quot;SUCCESS: Connection to RDS mysql instance succeeded&quot;)\n</code></pre>\n<!--kg-card-end: markdown--><p>We thank you all for joining us in this adventure of tantalizing treats. May your data be clean and your stomachs full.</p><p>Bon appétit.</p>","url":"https://hackersandslackers.com/using-pymysql/","uuid":"cd6baf62-981c-4034-ba29-b67d257acbeb","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b230915f37f772d33bc1eb1"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673675","title":"Lynx Roundup, June 15th","slug":"lynx-roundup-june-15th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx50@2x.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/15/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/15/2018.","created_at_pretty":"15 June, 2018","published_at_pretty":"15 June, 2018","updated_at_pretty":"25 July, 2018","created_at":"2018-06-14T20:23:30.000-04:00","published_at":"2018-06-15T07:00:00.000-04:00","updated_at":"2018-07-24T22:06:03.000-04:00","meta_title":"Lynx Roundup, June 15th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/15/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/15/2018.","og_image":"https://hackersandslackers.com/content/images/lynx/lynx50@2x.jpg","og_title":"Lynx Roundup, June 15th","twitter_description":"Daily roundup of Data Science news around the industry, 6/15/2018.","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx50@2x.jpg","twitter_title":"Lynx Roundup, June 15th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"SQL","slug":"sql","description":"Configure relational databases, brush up on your query language syntax, or find third-party services to interact with your data.","feature_image":"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/sql-tag.jpg","meta_description":"Configure relational databases, brush up on your query language syntax, or find third-party services to interact with your data.","meta_title":"Working with SQL | Hackers and Slackers","visibility":"public"},{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"}],"plaintext":"Mom: \"Yes, it was actually me!\"\nMe: \"I know. I saw the code.\"\nMe: \"Quote: We are not quite sure what it's doing, but it's called daily and\nruns since 1985 without a change.\"\n\n— Rem0te (@grauhut) May 28, 2018\n[https://twitter.com/grauhut/status/1001020570664886273?ref_src=twsrc%5Etfw]\nhttps://towardsdatascience.com/embedding-machine-learning-models-to-web-apps-part-1-6ab7b55ee428\n\nhttps://www.manning.com/books/exploring-data-with-python\n\nhttps://www.citusdata.com/blog/2018/06/01/fun-with-sql-window-functions-in-postgresql/\n\nhttps://lispcast.com/avoid-naming-at-all-costs/","html":"<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Mom: &quot;Yes, it was actually me!&quot;<br>Me: &quot;I know. I saw the code.&quot;<br>Me: &quot;Quote: We are not quite sure what it&#39;s doing, but it&#39;s called daily and runs since 1985 without a change.&quot;</p>&mdash; Rem0te (@grauhut) <a href=\"https://twitter.com/grauhut/status/1001020570664886273?ref_src=twsrc%5Etfw\">May 28, 2018</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p><a href=\"https://towardsdatascience.com/embedding-machine-learning-models-to-web-apps-part-1-6ab7b55ee428\">https://towardsdatascience.com/embedding-machine-learning-models-to-web-apps-part-1-6ab7b55ee428</a></p>\n<p><a href=\"https://www.manning.com/books/exploring-data-with-python\">https://www.manning.com/books/exploring-data-with-python</a></p>\n<p><a href=\"https://www.citusdata.com/blog/2018/06/01/fun-with-sql-window-functions-in-postgresql/\">https://www.citusdata.com/blog/2018/06/01/fun-with-sql-window-functions-in-postgresql/</a></p>\n<p><a href=\"https://lispcast.com/avoid-naming-at-all-costs/\">https://lispcast.com/avoid-naming-at-all-costs/</a></p>\n","url":"https://hackersandslackers.com/lynx-roundup-june-15th/","uuid":"66b58582-09de-4b2f-b0d6-2cdac1c98e02","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b230702f37f772d33bc1ea5"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673674","title":"Lynx Roundup, June 14th","slug":"lynx-roundup-june-14th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx51@2x.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/15/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/15/2018.","created_at_pretty":"15 June, 2018","published_at_pretty":"15 June, 2018","updated_at_pretty":"25 July, 2018","created_at":"2018-06-14T20:19:27.000-04:00","published_at":"2018-06-14T20:23:16.000-04:00","updated_at":"2018-07-24T22:06:03.000-04:00","meta_title":"Lynx Roundup, June 14th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/15/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/15/2018.","og_image":"https://hackersandslackers.com/content/images/lynx/lynx51@2x.jpg","og_title":"Lynx Roundup, June 14th","twitter_description":"Daily roundup of Data Science news around the industry, 6/15/2018.","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx51@2x.jpg","twitter_title":"Lynx Roundup, June 14th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://github.com/diana-hep/histbook\n\nhttps://lifehacker.com/how-to-time-your-caffeine-consumption-and-maximize-aler-1826619383\n\nThere's a thingy called \"Belief Change Blindness\" - basically, once you've\nchanged your mind about something, you forget you ever thought differently.\nKinda applies to learning, too - once you learn something it can be hard to\n\"retrace your steps\" in order to figure out how to teach it to someone else, cuz\nunless you hold onto (or record) those memories, you're inclined to forget them.\nhttps://medium.com/tensorflow/ignorance-is-my-superpower-b8155e7cc59b\n\nhttps://www.datacamp.com/community/tutorials/converting-strings-datetime-objects\n\nhttps://www.popsci.com/honeybees-counting-neuroscience","html":"<p><a href=\"https://github.com/diana-hep/histbook\">https://github.com/diana-hep/histbook</a></p>\n<p><a href=\"https://lifehacker.com/how-to-time-your-caffeine-consumption-and-maximize-aler-1826619383\">https://lifehacker.com/how-to-time-your-caffeine-consumption-and-maximize-aler-1826619383</a></p>\n<p>There's a thingy called &quot;Belief Change Blindness&quot; - basically, once you've changed your mind about something, you forget you ever thought differently.  Kinda applies to learning, too - once you learn something it can be hard to &quot;retrace your steps&quot; in order to figure out how to teach it to someone else, cuz unless you hold onto (or record) those memories, you're inclined to forget them.<br>\n<a href=\"https://medium.com/tensorflow/ignorance-is-my-superpower-b8155e7cc59b\">https://medium.com/tensorflow/ignorance-is-my-superpower-b8155e7cc59b</a></p>\n<p><a href=\"https://www.datacamp.com/community/tutorials/converting-strings-datetime-objects\">https://www.datacamp.com/community/tutorials/converting-strings-datetime-objects</a></p>\n<p><a href=\"https://www.popsci.com/honeybees-counting-neuroscience\">https://www.popsci.com/honeybees-counting-neuroscience</a></p>\n","url":"https://hackersandslackers.com/lynx-roundup-june-14th/","uuid":"c73f667b-8e8d-4353-bba7-84c956b39814","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b23060ff37f772d33bc1ea2"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673672","title":"Lynx Roundup, June 13th","slug":"lynx-roundup-june-13th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx53@2x.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/13/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/13/2018.","created_at_pretty":"12 June, 2018","published_at_pretty":"13 June, 2018","updated_at_pretty":"25 July, 2018","created_at":"2018-06-11T21:48:16.000-04:00","published_at":"2018-06-13T07:00:00.000-04:00","updated_at":"2018-07-24T22:06:03.000-04:00","meta_title":"Lynx Roundup, June 13th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/13/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/13/2018.","og_image":"https://hackersandslackers.com/content/images/lynx/lynx53@2x.jpg","og_title":"Lynx Roundup, June 13th","twitter_description":"Daily roundup of Data Science news around the industry, 6/13/2018.","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx53@2x.jpg","twitter_title":"Lynx Roundup, June 13th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"Machine Learning","slug":"machine-learning","description":"The latest developments in machine learning tools and technology available to data scientists.","feature_image":null,"meta_description":"The latest developments in machine learning tools and technology available to data scientists.","meta_title":"Machine Learning | Hackers and Slackers","visibility":"public"},{"name":"Statistics","slug":"statistics","description":"Critical mathematical concepts needed to derive meaning and conclusions from data.","feature_image":null,"meta_description":"Critical mathematical concepts needed to derive meaning and conclusions from data.","meta_title":"Statistics | Hackers and Slackers","visibility":"public"}],"plaintext":"http://www.lateralmag.com/articles/maps-of-the-brain\n\nhttps://databricks.com/blog/2018/06/05/introducing-mlflow-an-open-source-machine-learning-platform.html\n\nhttps://machinelearningmastery.com/statistical-data-distributions/\n\nhttps://blog.nteract.io/designing-the-nteract-data-explorer-f4476d53f897\n\nhttp://bconnelly.net/working-with-csvs-on-the-command-line/","html":"<p><a href=\"http://www.lateralmag.com/articles/maps-of-the-brain\">http://www.lateralmag.com/articles/maps-of-the-brain</a></p>\n<p><a href=\"https://databricks.com/blog/2018/06/05/introducing-mlflow-an-open-source-machine-learning-platform.html\">https://databricks.com/blog/2018/06/05/introducing-mlflow-an-open-source-machine-learning-platform.html</a></p>\n<p><a href=\"https://machinelearningmastery.com/statistical-data-distributions/\">https://machinelearningmastery.com/statistical-data-distributions/</a></p>\n<p><a href=\"https://blog.nteract.io/designing-the-nteract-data-explorer-f4476d53f897\">https://blog.nteract.io/designing-the-nteract-data-explorer-f4476d53f897</a></p>\n<p><a href=\"http://bconnelly.net/working-with-csvs-on-the-command-line/\">http://bconnelly.net/working-with-csvs-on-the-command-line/</a></p>\n","url":"https://hackersandslackers.com/lynx-roundup-june-13th/","uuid":"526401ca-ad0e-4623-9e54-1345b05dced4","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b1f266045d23b542808c746"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673671","title":"Lynx Roundup, June 12th","slug":"lynx-roundup-june-12th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx52@2x.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/12/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/12/2018.","created_at_pretty":"12 June, 2018","published_at_pretty":"12 June, 2018","updated_at_pretty":"25 July, 2018","created_at":"2018-06-11T21:45:51.000-04:00","published_at":"2018-06-12T07:00:00.000-04:00","updated_at":"2018-07-24T22:06:03.000-04:00","meta_title":"Lynx Roundup, June 12th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/12/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/12/2018.","og_image":"https://hackersandslackers.com/content/images/lynx/lynx52@2x.jpg","og_title":"Lynx Roundup, June 12th","twitter_description":"Daily roundup of Data Science news around the industry, 6/12/2018.","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx52@2x.jpg","twitter_title":"Lynx Roundup, June 12th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"}],"plaintext":"https://medium.com/@rovai/physical-computing-using-jupyter-notebook-fb9e83e16760\n\nhttps://realpython.com/python-data-types/\n\nhttps://x-team.com/blog/quantum-computation-python-javascript/\n\nhttp://blog.adnansiddiqi.me/getting-started-with-elasticsearch-in-python/\n\nhttps://www.bernat.tech/the-state-of-type-hints-in-python/","html":"<p><a href=\"https://medium.com/@rovai/physical-computing-using-jupyter-notebook-fb9e83e16760\">https://medium.com/@rovai/physical-computing-using-jupyter-notebook-fb9e83e16760</a></p>\n<p><a href=\"https://realpython.com/python-data-types/\">https://realpython.com/python-data-types/</a></p>\n<p><a href=\"https://x-team.com/blog/quantum-computation-python-javascript/\">https://x-team.com/blog/quantum-computation-python-javascript/</a></p>\n<p><a href=\"http://blog.adnansiddiqi.me/getting-started-with-elasticsearch-in-python/\">http://blog.adnansiddiqi.me/getting-started-with-elasticsearch-in-python/</a></p>\n<p><a href=\"https://www.bernat.tech/the-state-of-type-hints-in-python/\">https://www.bernat.tech/the-state-of-type-hints-in-python/</a></p>\n","url":"https://hackersandslackers.com/lynx-roundup-june-12th/","uuid":"c346f2e7-dffb-4620-845e-853b97f796c9","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b1f25cf45d23b542808c742"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867366e","title":"Lynx Roundup, June 11th","slug":"lynx-roundup-june-11th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/lynx36.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/11/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/11/2018.","created_at_pretty":"06 June, 2018","published_at_pretty":"11 June, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-06-06T17:11:49.000-04:00","published_at":"2018-06-11T07:00:00.000-04:00","updated_at":"2019-04-10T03:29:48.000-04:00","meta_title":"Lynx Roundup, June 11th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/11/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/11/2018.","og_image":"https://hackersandslackers.com/content/images/2019/04/lynx36-2.jpg","og_title":"Lynx Roundup, June 11th","twitter_description":"Daily roundup of Data Science news around the industry, 6/11/2018.","twitter_image":"https://hackersandslackers.com/content/images/2019/04/lynx36-1.jpg","twitter_title":"Lynx Roundup, June 11th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.citylab.com/life/2018/05/the-tech-thats-changing-how-cities-help-the-homeless/561239/\n\nhttps://www.oreilly.com/ideas/lessons-learned-turning-machine-learning-models-into-real-products-and-services\n\nhttps://www.oreilly.com/ideas/steering-around-blockchain-hype\n\n\"Conversations Gone Awry: Detecting Early Signs of Conversational Failure\"\nhttps://arxiv.org/pdf/1805.05345.pdf","html":"<p><a href=\"https://www.citylab.com/life/2018/05/the-tech-thats-changing-how-cities-help-the-homeless/561239/\">https://www.citylab.com/life/2018/05/the-tech-thats-changing-how-cities-help-the-homeless/561239/</a></p><p><a href=\"https://www.oreilly.com/ideas/lessons-learned-turning-machine-learning-models-into-real-products-and-services\">https://www.oreilly.com/ideas/lessons-learned-turning-machine-learning-models-into-real-products-and-services</a></p><p><a href=\"https://www.oreilly.com/ideas/steering-around-blockchain-hype\">https://www.oreilly.com/ideas/steering-around-blockchain-hype</a></p><p>\"Conversations Gone Awry: Detecting Early Signs of Conversational Failure\"<br><a href=\"https://arxiv.org/pdf/1805.05345.pdf\">https://arxiv.org/pdf/1805.05345.pdf</a></p>","url":"https://hackersandslackers.com/lynx-roundup-june-11th/","uuid":"8bafa6b2-90ff-4f2f-bb01-3d1c41bd7c9a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b184e151e7fe93906b2e8f2"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673670","title":"Getting Iffy With it: Conditional Statements in Excel","slug":"getting-iffy-with-it-conditionals-in-excel","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/06/iffy@2x.jpg","excerpt":"Effectively utilize conditionals such as IF statements in your Excel workflow.","custom_excerpt":"Effectively utilize conditionals such as IF statements in your Excel workflow.","created_at_pretty":"10 June, 2018","published_at_pretty":"10 June, 2018","updated_at_pretty":"21 January, 2019","created_at":"2018-06-10T12:12:20.000-04:00","published_at":"2018-06-10T14:19:42.000-04:00","updated_at":"2019-01-21T13:44:06.000-05:00","meta_title":"Getting Iffy With it: Conditional Statements in Excel | Hackers and Slackers","meta_description":"Effectively utilize conditionals such as IF statements in your Excel workflow.","og_description":"Effectively utilize conditionals such as IF statements in your Excel workflow","og_image":"https://hackersandslackers.com/content/images/2018/06/iffy@2x.jpg","og_title":"Getting Iffy With it: Conditional Statements in Excel","twitter_description":"Effectively utilize conditionals such as IF statements in your Excel workflow","twitter_image":"https://hackersandslackers.com/content/images/2018/06/iffy@2x.jpg","twitter_title":"Getting Iffy With it: Conditional Statements in Excel","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"If you've been following along, we discussed in the last several posts of this\nseries how, if you're not working in a very \"tech forward\" organization (like my\ntwo compatriots on his site), but you have the same title, you're probably\nobtaining your data from another department (or it might be a sentient sponge,\nor a gang of squirrels with dreams of world domination, you'll actually have no\nidea) who you will have no contact with. As a side effect of this...rather\nstrange situation (ya know, like being a child and being abandoned briefly by\nyour mother in a laboratory into the care of a stranger in order to track your\nresponse...what, no other Bowlby heads out there?) you'll almost certainly get\nthis data in a form that is completely unusable until you, dear reader, get your\nhands on it.\n\nAs such, in this post, we'll begin to dive into the myriad ways in which you\nmight go about doing that, but first, I need to put you in the right frame of\nmind, I am a therapist, after all. Remember back to one of my first posts: when\nyou get down to it, all computer code boils down to a series of binary choices\n(generally represented as 1s and 0s) indicating that a specific gate on the\nactual hardware is \"on\" or \"off\", and by layering millions of these on top of\neach other is how every single piece of computer software you have comes into\nbeing. Think about other binary decisions you've made in your life: Yes, or no,\nOdd or Even, Coke or Pepsi (despite what RC cola would like you to think), and\nperhaps the most bemoaned of all for everyone who has ever been a student: True\nor False.\n\nInterestingly, this true/false dichotomy is the very essence of how all of the\nchopping and screwing you'll be doing on your messy data (and in fact, the\nmajority of all computer programming) begins; by simply asking Excel if  what\nyou typed in is true...or false.\n\nNow that you've been successfully induced, we can jump into the the technical\nstuff. As you may have garnered from my post about formulae, Excel actually has,\nDEEP within it's bowels, a fairly robust programming language underpinning it:\nVisual Basic for Applications (VBA). Now, there are two general ways to tap into\nit:\n\n 1. The way that the majority of wizards do it: through the function bar (that\n    is, typing an \"=\" and letting it rip), and...\n 2. The way that the particularly adept wizards engage in it: through the\n    command line, which I'm not going to bother touching here, because if you're\n    writing entire Excel spreadsheets in VBA, why are you still using Excel?\n    Move onto Python or R and continue feeling smugly superior!\n\nSo, with that being said, how does one tap into this unlimited wellspring of\npotential using nothing but the features on the Excel mainpage? Well, I already\ntold you, simply ask Excel =If()!\nAll flowery language and allegory aside, the majority of computer programming\nlanguages (the one underneath Excel included) hinge on this \"If\" statement, the\nonly difference is how the particular language wants you to write these\nstatements.\n\nIn the Excel parlance, when one types in =If(  you'll be asked for three things\nseparated by commas (that Excel could really make a bit clearer), they are:\n\n 1. The logical argument (AKA, what do you want Excel to check as being true or\n    false?) A good example would be say \"Does the value in Cell A1 equal the\n    value of the Cell in B1?\" which would be written as =if(A1=B1 (Protip!, \n    unlike other programming languages, the way you write \"does not equal\" in\n    Excel is <>)\n 2. The value you want to grab if the value is true (leaving this blank will\n    just write \"true\") but in this case, let's make it say \"Yes\". This will be\n    written as =if(A1=B1,\"Yes\".(Protip!,  within Excel, if ever you want to\n    return something other than a number  you always need to surround it in\n    quotation marks.)\n 3. The value that you want to return if the value is false (leaving this blank\n    will just write \"false\") in this case, let's make it say \"No\". This will be\n    written as =if(A1=B1,\"Yes\",\"No\").\n\nAfter completing this formula with the three elements followed by a closing\nparenthesis, you'll get a cell that either says \"Yes\" or \"No\" depending on if A1\nand B1 contain the same values. The powerful thing here is what comes next: by\ndouble clicking the lower right hand corner of the cell with the formula, it'll\nautomatically populate all of the rows which are adjacent to information with Ax\n= Bx (where x equals the row number) allowing you to check each row to see if\nthe two columns match!\n\nTo add an extra wrinkle, let's say you want to check to see if each cell in a\ncolumn is equal to the values in a specific cell, you'd do that as follows:\n=if(A1 = $B$1,\"Yes\",\"No\"). If you then double click the cell as you did before,\nthat will check every value in column A against ONLY the value in B1. By adding\nthe dollar sign to the location of the cell, You've identified the \"Absolute\nReference\" as opposed to the \"Relative Reference\". Feel free to disregard these\nnames immediately, and start referring to it as \"dollar sign\". You can even\nmanipulate it by only using the Absolute reference on the row (A$1) OR the\ncolumn ($A1) if you're populating , vertically, horizontally, or both (yes,\ntechnically putting B$1 in the above example would have gotten you the same\nanswers).\n\nIn summation, in this post we've learned:\n\n 1. Excel is actually built on top of a \"real\" programming language called VBA.\n 2. You can write tiny programs in Excel through the function bar (or big\n    programs through the command line...showoff).\n 3. All \"programming\" really is, is the manipulation of true/false statements\n    underpinning the binary code even further beneath all computational tasks.\n 4. How to write your own \"If\" statement in Excel and how to \"phrase\" the\n    returning of numbers vs. anything else using quotation marks.\n 5. How to utilize the absolute reference (AKA the \"Dollar Sign\") to change what\n    gets included in the statements in each line of your spreadsheet.\n\nNext time, we'll get more grammatically complex, leveraging Ands and Ors in our\nIfs. We might even get crazy and throw some Ifs in our Ifs...so you can drive\nwhile you drive.\n\nEver Upward,\n\n-Snacks","html":"<p>If you've been following along, we discussed in the last several posts of this series how, if you're not working in a very \"tech forward\" organization (like my two compatriots on his site), but you have the same title, you're probably obtaining your data from another department (or it might be a sentient sponge, or a gang of squirrels with dreams of world domination, you'll actually have no idea) who you will have no contact with. As a side effect of this...rather strange situation (ya know, like being a child and being abandoned briefly by your mother in a laboratory into the care of a stranger in order to track your response...what, no other Bowlby heads out there?) you'll almost certainly get this data in a form that is completely unusable until <strong>you</strong>, dear reader, get your hands on it.</p><p>As such, in this post, we'll begin to dive into the myriad ways in which you might go about doing that, but first, I need to put you in the right frame of mind, I am a therapist, after all. Remember back to one of my first posts: when you get down to it, all computer code boils down to a series of binary choices (generally represented as 1s and 0s) indicating that a specific gate on the actual hardware is \"on\" or \"off\", and by layering millions of these on top of each other is how every single piece of computer software you have comes into being. Think about other binary decisions you've made in your life: Yes, or no, Odd or Even, Coke or Pepsi (despite what RC cola would like you to think), and perhaps the most bemoaned of all for everyone who has ever been a student: True or False.</p><p>Interestingly, this true/false dichotomy is the very essence of how all of the chopping and screwing you'll be doing on your messy data (and in fact, the majority of all computer programming) begins; by simply asking Excel <em><strong>if</strong></em> what you typed in is true...or false.</p><p>Now that you've been successfully induced, we can jump into the the technical stuff. As you may have garnered from my post about formulae, Excel actually has, DEEP within it's bowels, a fairly robust programming language underpinning it: Visual Basic for Applications (VBA). Now, there are two general ways to tap into it:</p><ol><li>The way that the majority of wizards do it: through the function bar (that is, typing an \"=\" and letting it rip), and...</li><li>The way that the particularly adept wizards engage in it: through the command line, which I'm not going to bother touching here, because if you're writing entire Excel spreadsheets in VBA, why are you still using Excel? Move onto Python or R and continue feeling smugly superior!</li></ol><p>So, with that being said, how does one tap into this unlimited wellspring of potential using nothing but the features on the Excel mainpage? Well, I already told you, simply ask Excel <strong>=If()</strong>!<br>All flowery language and allegory aside, the majority of computer programming languages (the one underneath Excel included) hinge on this \"If\" statement, the only difference is how the particular language wants you to write these statements.</p><p>In the Excel parlance, when one types in <strong>=If(</strong> you'll be asked for three things separated by commas (that Excel could really make a bit clearer), they are:</p><ol><li>The logical argument (AKA, what do you want Excel to check as being true or false?) A good example would be say \"Does the value in Cell A1 equal the value of the Cell in B1?\" which would be written as =if(A1=B1 (<strong>Protip!,</strong> unlike other programming languages, the way you write \"does not equal\" in Excel is <strong>&lt;&gt;</strong>)</li><li>The value you want to grab if the value is true (leaving this blank will just write \"true\") but in this case, let's make it say \"Yes\". This will be written as =if(A1=B1,\"Yes\".(<strong>Protip!,</strong> within Excel, if ever you want to return something <em>other than a number</em> you always need to surround it in quotation marks.)</li><li>The value that you want to return if the value is false (leaving this blank will just write \"false\") in this case, let's make it say \"No\". This will be written as =if(A1=B1,\"Yes\",\"No\").</li></ol><p>After completing this formula with the three elements followed by a closing parenthesis, you'll get a cell that either says \"Yes\" or \"No\" depending on if A1 and B1 contain the same values. The powerful thing here is what comes next: by double clicking the lower right hand corner of the cell with the formula, it'll automatically populate all of the rows which are adjacent to information with Ax = Bx (where x equals the row number) allowing you to check each row to see if the two columns match!</p><p>To add an extra wrinkle, let's say you want to check to see if each cell in a column is equal to the values in a specific cell, you'd do that as follows: =if(A1 = $B$1,\"Yes\",\"No\"). If you then double click the cell as you did before, that will check every value in column A against ONLY the value in B1. By adding the dollar sign to the location of the cell, You've identified the \"Absolute Reference\" as opposed to the \"Relative Reference\". Feel free to disregard these names immediately, and start referring to it as \"dollar sign\". You can even manipulate it by only using the Absolute reference on the row (A$1) OR the column ($A1) if you're populating , vertically, horizontally, or both (yes, technically putting B$1 in the above example would have gotten you the same answers).</p><p>In summation, in this post we've learned:</p><ol><li>Excel is actually built on top of a \"real\" programming language called VBA.</li><li>You can write tiny programs in Excel through the function bar (or big programs through the command line...showoff).</li><li>All \"programming\" really is, is the manipulation of true/false statements underpinning the binary code even further beneath all computational tasks.</li><li>How to write your own \"If\" statement in Excel and how to \"phrase\" the returning of numbers vs. anything else using quotation marks.</li><li>How to utilize the absolute reference (AKA the \"Dollar Sign\") to change what gets included in the statements in each line of your spreadsheet.</li></ol><p>Next time, we'll get more grammatically complex, leveraging Ands and Ors in our Ifs. We might even get crazy and throw some Ifs in our Ifs...so you can drive while you drive.</p><p>Ever Upward,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/getting-iffy-with-it-conditionals-in-excel/","uuid":"df65eee0-8935-4e9f-86d5-0c763c8baa08","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b1d4de445d23b542808c735"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867366d","title":"Lynx Roundup, June 10th","slug":"lynx-roundup-june-10th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/lynx43-1.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/10/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/10/2018.","created_at_pretty":"06 June, 2018","published_at_pretty":"10 June, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-06-06T17:08:57.000-04:00","published_at":"2018-06-10T07:00:00.000-04:00","updated_at":"2019-04-10T02:34:02.000-04:00","meta_title":"Lynx Roundup, June 10th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/10/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/10/2018.","og_image":"https://hackersandslackers.com/content/images/2019/04/lynx43.jpg","og_title":"Lynx Roundup, June 10th","twitter_description":"Daily roundup of Data Science news around the industry, 6/10/2018.","twitter_image":"https://hackersandslackers.com/content/images/2019/04/lynx43-1-1.jpg","twitter_title":"Lynx Roundup, June 10th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},{"name":"Machine Learning","slug":"machine-learning","description":"The latest developments in machine learning tools and technology available to data scientists.","feature_image":null,"meta_description":"The latest developments in machine learning tools and technology available to data scientists.","meta_title":"Machine Learning | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.quantamagazine.org/the-math-of-causation-puzzle-20180530/\n\nhttps://github.com/jacobeisenstein/gt-nlp-class\n\nMy friend wrote this one, just sayin' \nhttps://codeascraft.com/2018/06/05/deploying-to-google-kubernetes-engine/\n\nhttp://toddwschneider.com/posts/nyc-subway-data-analysis/","html":"<p><a href=\"https://www.quantamagazine.org/the-math-of-causation-puzzle-20180530/\">https://www.quantamagazine.org/the-math-of-causation-puzzle-20180530/</a></p><p><a href=\"https://github.com/jacobeisenstein/gt-nlp-class\">https://github.com/jacobeisenstein/gt-nlp-class</a></p><p>My friend wrote this one, just sayin' <a href=\"https://codeascraft.com/2018/06/05/deploying-to-google-kubernetes-engine/\">https://codeascraft.com/2018/06/05/deploying-to-google-kubernetes-engine/</a></p><p><a href=\"http://toddwschneider.com/posts/nyc-subway-data-analysis/\">http://toddwschneider.com/posts/nyc-subway-data-analysis/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-june-10th/","uuid":"0a352408-0c0c-4055-84a1-9cc53a913aec","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b184d691e7fe93906b2e8ee"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867366c","title":"Lynx Roundup, June 9th","slug":"lynx-roundup-june-9th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/lynx44-1.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/9/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/9/2018.","created_at_pretty":"06 June, 2018","published_at_pretty":"09 June, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-06-06T17:06:18.000-04:00","published_at":"2018-06-09T07:00:00.000-04:00","updated_at":"2019-04-10T02:34:41.000-04:00","meta_title":"Lynx Roundup, June 9th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/9/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/9/2018.","og_image":"https://hackersandslackers.com/content/images/2019/04/lynx44-1-2.jpg","og_title":"Lynx Roundup, June 9th","twitter_description":"Daily roundup of Data Science news around the industry, 6/9/2018.","twitter_image":"https://hackersandslackers.com/content/images/2019/04/lynx44-1-1.jpg","twitter_title":"Lynx Roundup, June 9th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"Machine Learning","slug":"machine-learning","description":"The latest developments in machine learning tools and technology available to data scientists.","feature_image":null,"meta_description":"The latest developments in machine learning tools and technology available to data scientists.","meta_title":"Machine Learning | Hackers and Slackers","visibility":"public"},{"name":"Graph Databases","slug":"graph-databases","description":null,"feature_image":null,"meta_description":null,"meta_title":"Graph Databases | Hackers and Slackers","visibility":"public"}],"plaintext":"https://spectrum.ieee.org/automaton/robotics/humanoids/the-importance-of-teaching-robots-to-hug\n\nhttps://alphaarchitect.com/2018/06/05/machine-learning-financial-market-prediction-time-series-prediction-sklearn-keras/\n\nhttps://neo4j.com/blog/roi-on-connected-data-how-connections-unlock-business-value/\n\nhttps://ai.googleblog.com/2018/06/improving-deep-learning-performance.html","html":"<p><a href=\"https://spectrum.ieee.org/automaton/robotics/humanoids/the-importance-of-teaching-robots-to-hug\">https://spectrum.ieee.org/automaton/robotics/humanoids/the-importance-of-teaching-robots-to-hug</a></p><p><a href=\"https://alphaarchitect.com/2018/06/05/machine-learning-financial-market-prediction-time-series-prediction-sklearn-keras/\">https://alphaarchitect.com/2018/06/05/machine-learning-financial-market-prediction-time-series-prediction-sklearn-keras/</a></p><p><a href=\"https://neo4j.com/blog/roi-on-connected-data-how-connections-unlock-business-value/\">https://neo4j.com/blog/roi-on-connected-data-how-connections-unlock-business-value/</a></p><p><a href=\"https://ai.googleblog.com/2018/06/improving-deep-learning-performance.html\">https://ai.googleblog.com/2018/06/improving-deep-learning-performance.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-june-9th/","uuid":"ead6758d-a09e-42f1-8320-df7ed99fd6fc","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b184cca1e7fe93906b2e8e8"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867366b","title":"Lynx Roundup, June 8th","slug":"lynx-roundup-june-8th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/lynx7-2-1.jpg","excerpt":"Daily roundup of Data Science news around the industry, 6/8/2018.","custom_excerpt":"Daily roundup of Data Science news around the industry, 6/8/2018.","created_at_pretty":"06 June, 2018","published_at_pretty":"08 June, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-06-06T17:04:15.000-04:00","published_at":"2018-06-08T07:00:00.000-04:00","updated_at":"2019-04-10T02:33:27.000-04:00","meta_title":"Lynx Roundup, June 8th | Hackers and Slackers","meta_description":"Daily roundup of Data Science news around the industry, 6/8/2018.","og_description":"Daily roundup of Data Science news around the industry, 6/8/2018.","og_image":"https://hackersandslackers.com/content/images/2019/04/lynx7-2.jpg","og_title":"Lynx Roundup, June 8th","twitter_description":"Daily roundup of Data Science news around the industry, 6/8/2018.","twitter_image":"https://hackersandslackers.com/content/images/2019/04/lynx7-2-2.jpg","twitter_title":"Lynx Roundup, June 8th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://spectrum.ieee.org/automaton/robotics/robotics-hardware/firefighting-robot-snake-flies-on-jets-of-water\n\nhttp://andrewgelman.com/2018/06/02/link-science-hype-not-always/\n\nhttps://flowingdata.com/2018/05/31/chart-shows-the-evolution-in-design-of-everyday-objects/\n\nhttp://martin.uy/blog/projects/reverse-engineering/","html":"<p><a href=\"https://spectrum.ieee.org/automaton/robotics/robotics-hardware/firefighting-robot-snake-flies-on-jets-of-water\">https://spectrum.ieee.org/automaton/robotics/robotics-hardware/firefighting-robot-snake-flies-on-jets-of-water</a></p><p><a href=\"http://andrewgelman.com/2018/06/02/link-science-hype-not-always/\">http://andrewgelman.com/2018/06/02/link-science-hype-not-always/</a></p><p><a href=\"https://flowingdata.com/2018/05/31/chart-shows-the-evolution-in-design-of-everyday-objects/\">https://flowingdata.com/2018/05/31/chart-shows-the-evolution-in-design-of-everyday-objects/</a></p><p><a href=\"http://martin.uy/blog/projects/reverse-engineering/\">http://martin.uy/blog/projects/reverse-engineering/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-june-8th/","uuid":"0e4c48d8-a026-4d21-9428-fb232a5770aa","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b184c4f1e7fe93906b2e8e3"}}]}},"pageContext":{"pageNumber":27,"humanPageNumber":28,"skip":324,"limit":12,"numberOfPages":33,"previousPagePath":"/page/27","nextPagePath":"/page/29"}}