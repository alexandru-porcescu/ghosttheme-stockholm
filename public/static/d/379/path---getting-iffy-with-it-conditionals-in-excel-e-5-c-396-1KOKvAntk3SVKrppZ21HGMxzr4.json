{"data":{"ghostPost":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673670","title":"Getting Iffy With it: Conditional Statements in Excel","slug":"getting-iffy-with-it-conditionals-in-excel","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/06/iffy@2x.jpg","excerpt":"Effectively utilize conditionals such as IF statements in your Excel workflow.","custom_excerpt":"Effectively utilize conditionals such as IF statements in your Excel workflow.","created_at_pretty":"10 June, 2018","published_at_pretty":"10 June, 2018","updated_at_pretty":"21 January, 2019","created_at":"2018-06-10T12:12:20.000-04:00","published_at":"2018-06-10T14:19:42.000-04:00","updated_at":"2019-01-21T13:44:06.000-05:00","meta_title":"Getting Iffy With it: Conditional Statements in Excel | Hackers and Slackers","meta_description":"Effectively utilize conditionals such as IF statements in your Excel workflow.","og_description":"Effectively utilize conditionals such as IF statements in your Excel workflow","og_image":"https://hackersandslackers.com/content/images/2018/06/iffy@2x.jpg","og_title":"Getting Iffy With it: Conditional Statements in Excel","twitter_description":"Effectively utilize conditionals such as IF statements in your Excel workflow","twitter_image":"https://hackersandslackers.com/content/images/2018/06/iffy@2x.jpg","twitter_title":"Getting Iffy With it: Conditional Statements in Excel","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"If you've been following along, we discussed in the last several posts of this\nseries how, if you're not working in a very \"tech forward\" organization (like my\ntwo compatriots on his site), but you have the same title, you're probably\nobtaining your data from another department (or it might be a sentient sponge,\nor a gang of squirrels with dreams of world domination, you'll actually have no\nidea) who you will have no contact with. As a side effect of this...rather\nstrange situation (ya know, like being a child and being abandoned briefly by\nyour mother in a laboratory into the care of a stranger in order to track your\nresponse...what, no other Bowlby heads out there?) you'll almost certainly get\nthis data in a form that is completely unusable until you, dear reader, get your\nhands on it.\n\nAs such, in this post, we'll begin to dive into the myriad ways in which you\nmight go about doing that, but first, I need to put you in the right frame of\nmind, I am a therapist, after all. Remember back to one of my first posts: when\nyou get down to it, all computer code boils down to a series of binary choices\n(generally represented as 1s and 0s) indicating that a specific gate on the\nactual hardware is \"on\" or \"off\", and by layering millions of these on top of\neach other is how every single piece of computer software you have comes into\nbeing. Think about other binary decisions you've made in your life: Yes, or no,\nOdd or Even, Coke or Pepsi (despite what RC cola would like you to think), and\nperhaps the most bemoaned of all for everyone who has ever been a student: True\nor False.\n\nInterestingly, this true/false dichotomy is the very essence of how all of the\nchopping and screwing you'll be doing on your messy data (and in fact, the\nmajority of all computer programming) begins; by simply asking Excel if  what\nyou typed in is true...or false.\n\nNow that you've been successfully induced, we can jump into the the technical\nstuff. As you may have garnered from my post about formulae, Excel actually has,\nDEEP within it's bowels, a fairly robust programming language underpinning it:\nVisual Basic for Applications (VBA). Now, there are two general ways to tap into\nit:\n\n 1. The way that the majority of wizards do it: through the function bar (that\n    is, typing an \"=\" and letting it rip), and...\n 2. The way that the particularly adept wizards engage in it: through the\n    command line, which I'm not going to bother touching here, because if you're\n    writing entire Excel spreadsheets in VBA, why are you still using Excel?\n    Move onto Python or R and continue feeling smugly superior!\n\nSo, with that being said, how does one tap into this unlimited wellspring of\npotential using nothing but the features on the Excel mainpage? Well, I already\ntold you, simply ask Excel =If()!\nAll flowery language and allegory aside, the majority of computer programming\nlanguages (the one underneath Excel included) hinge on this \"If\" statement, the\nonly difference is how the particular language wants you to write these\nstatements.\n\nIn the Excel parlance, when one types in =If(  you'll be asked for three things\nseparated by commas (that Excel could really make a bit clearer), they are:\n\n 1. The logical argument (AKA, what do you want Excel to check as being true or\n    false?) A good example would be say \"Does the value in Cell A1 equal the\n    value of the Cell in B1?\" which would be written as =if(A1=B1 (Protip!, \n    unlike other programming languages, the way you write \"does not equal\" in\n    Excel is <>)\n 2. The value you want to grab if the value is true (leaving this blank will\n    just write \"true\") but in this case, let's make it say \"Yes\". This will be\n    written as =if(A1=B1,\"Yes\".(Protip!,  within Excel, if ever you want to\n    return something other than a number  you always need to surround it in\n    quotation marks.)\n 3. The value that you want to return if the value is false (leaving this blank\n    will just write \"false\") in this case, let's make it say \"No\". This will be\n    written as =if(A1=B1,\"Yes\",\"No\").\n\nAfter completing this formula with the three elements followed by a closing\nparenthesis, you'll get a cell that either says \"Yes\" or \"No\" depending on if A1\nand B1 contain the same values. The powerful thing here is what comes next: by\ndouble clicking the lower right hand corner of the cell with the formula, it'll\nautomatically populate all of the rows which are adjacent to information with Ax\n= Bx (where x equals the row number) allowing you to check each row to see if\nthe two columns match!\n\nTo add an extra wrinkle, let's say you want to check to see if each cell in a\ncolumn is equal to the values in a specific cell, you'd do that as follows:\n=if(A1 = $B$1,\"Yes\",\"No\"). If you then double click the cell as you did before,\nthat will check every value in column A against ONLY the value in B1. By adding\nthe dollar sign to the location of the cell, You've identified the \"Absolute\nReference\" as opposed to the \"Relative Reference\". Feel free to disregard these\nnames immediately, and start referring to it as \"dollar sign\". You can even\nmanipulate it by only using the Absolute reference on the row (A$1) OR the\ncolumn ($A1) if you're populating , vertically, horizontally, or both (yes,\ntechnically putting B$1 in the above example would have gotten you the same\nanswers).\n\nIn summation, in this post we've learned:\n\n 1. Excel is actually built on top of a \"real\" programming language called VBA.\n 2. You can write tiny programs in Excel through the function bar (or big\n    programs through the command line...showoff).\n 3. All \"programming\" really is, is the manipulation of true/false statements\n    underpinning the binary code even further beneath all computational tasks.\n 4. How to write your own \"If\" statement in Excel and how to \"phrase\" the\n    returning of numbers vs. anything else using quotation marks.\n 5. How to utilize the absolute reference (AKA the \"Dollar Sign\") to change what\n    gets included in the statements in each line of your spreadsheet.\n\nNext time, we'll get more grammatically complex, leveraging Ands and Ors in our\nIfs. We might even get crazy and throw some Ifs in our Ifs...so you can drive\nwhile you drive.\n\nEver Upward,\n\n-Snacks","html":"<p>If you've been following along, we discussed in the last several posts of this series how, if you're not working in a very \"tech forward\" organization (like my two compatriots on his site), but you have the same title, you're probably obtaining your data from another department (or it might be a sentient sponge, or a gang of squirrels with dreams of world domination, you'll actually have no idea) who you will have no contact with. As a side effect of this...rather strange situation (ya know, like being a child and being abandoned briefly by your mother in a laboratory into the care of a stranger in order to track your response...what, no other Bowlby heads out there?) you'll almost certainly get this data in a form that is completely unusable until <strong>you</strong>, dear reader, get your hands on it.</p><p>As such, in this post, we'll begin to dive into the myriad ways in which you might go about doing that, but first, I need to put you in the right frame of mind, I am a therapist, after all. Remember back to one of my first posts: when you get down to it, all computer code boils down to a series of binary choices (generally represented as 1s and 0s) indicating that a specific gate on the actual hardware is \"on\" or \"off\", and by layering millions of these on top of each other is how every single piece of computer software you have comes into being. Think about other binary decisions you've made in your life: Yes, or no, Odd or Even, Coke or Pepsi (despite what RC cola would like you to think), and perhaps the most bemoaned of all for everyone who has ever been a student: True or False.</p><p>Interestingly, this true/false dichotomy is the very essence of how all of the chopping and screwing you'll be doing on your messy data (and in fact, the majority of all computer programming) begins; by simply asking Excel <em><strong>if</strong></em> what you typed in is true...or false.</p><p>Now that you've been successfully induced, we can jump into the the technical stuff. As you may have garnered from my post about formulae, Excel actually has, DEEP within it's bowels, a fairly robust programming language underpinning it: Visual Basic for Applications (VBA). Now, there are two general ways to tap into it:</p><ol><li>The way that the majority of wizards do it: through the function bar (that is, typing an \"=\" and letting it rip), and...</li><li>The way that the particularly adept wizards engage in it: through the command line, which I'm not going to bother touching here, because if you're writing entire Excel spreadsheets in VBA, why are you still using Excel? Move onto Python or R and continue feeling smugly superior!</li></ol><p>So, with that being said, how does one tap into this unlimited wellspring of potential using nothing but the features on the Excel mainpage? Well, I already told you, simply ask Excel <strong>=If()</strong>!<br>All flowery language and allegory aside, the majority of computer programming languages (the one underneath Excel included) hinge on this \"If\" statement, the only difference is how the particular language wants you to write these statements.</p><p>In the Excel parlance, when one types in <strong>=If(</strong> you'll be asked for three things separated by commas (that Excel could really make a bit clearer), they are:</p><ol><li>The logical argument (AKA, what do you want Excel to check as being true or false?) A good example would be say \"Does the value in Cell A1 equal the value of the Cell in B1?\" which would be written as =if(A1=B1 (<strong>Protip!,</strong> unlike other programming languages, the way you write \"does not equal\" in Excel is <strong>&lt;&gt;</strong>)</li><li>The value you want to grab if the value is true (leaving this blank will just write \"true\") but in this case, let's make it say \"Yes\". This will be written as =if(A1=B1,\"Yes\".(<strong>Protip!,</strong> within Excel, if ever you want to return something <em>other than a number</em> you always need to surround it in quotation marks.)</li><li>The value that you want to return if the value is false (leaving this blank will just write \"false\") in this case, let's make it say \"No\". This will be written as =if(A1=B1,\"Yes\",\"No\").</li></ol><p>After completing this formula with the three elements followed by a closing parenthesis, you'll get a cell that either says \"Yes\" or \"No\" depending on if A1 and B1 contain the same values. The powerful thing here is what comes next: by double clicking the lower right hand corner of the cell with the formula, it'll automatically populate all of the rows which are adjacent to information with Ax = Bx (where x equals the row number) allowing you to check each row to see if the two columns match!</p><p>To add an extra wrinkle, let's say you want to check to see if each cell in a column is equal to the values in a specific cell, you'd do that as follows: =if(A1 = $B$1,\"Yes\",\"No\"). If you then double click the cell as you did before, that will check every value in column A against ONLY the value in B1. By adding the dollar sign to the location of the cell, You've identified the \"Absolute Reference\" as opposed to the \"Relative Reference\". Feel free to disregard these names immediately, and start referring to it as \"dollar sign\". You can even manipulate it by only using the Absolute reference on the row (A$1) OR the column ($A1) if you're populating , vertically, horizontally, or both (yes, technically putting B$1 in the above example would have gotten you the same answers).</p><p>In summation, in this post we've learned:</p><ol><li>Excel is actually built on top of a \"real\" programming language called VBA.</li><li>You can write tiny programs in Excel through the function bar (or big programs through the command line...showoff).</li><li>All \"programming\" really is, is the manipulation of true/false statements underpinning the binary code even further beneath all computational tasks.</li><li>How to write your own \"If\" statement in Excel and how to \"phrase\" the returning of numbers vs. anything else using quotation marks.</li><li>How to utilize the absolute reference (AKA the \"Dollar Sign\") to change what gets included in the statements in each line of your spreadsheet.</li></ol><p>Next time, we'll get more grammatically complex, leveraging Ands and Ors in our Ifs. We might even get crazy and throw some Ifs in our Ifs...so you can drive while you drive.</p><p>Ever Upward,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/getting-iffy-with-it-conditionals-in-excel/","uuid":"df65eee0-8935-4e9f-86d5-0c763c8baa08","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b1d4de445d23b542808c735"}},"pageContext":{"slug":"getting-iffy-with-it-conditionals-in-excel"}}