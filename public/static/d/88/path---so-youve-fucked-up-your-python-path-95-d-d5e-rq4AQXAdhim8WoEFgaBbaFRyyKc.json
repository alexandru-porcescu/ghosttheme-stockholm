{"data":{"ghostPost":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736fe","title":"So You've Fucked up your Python Path","slug":"so-youve-fucked-up-your-python-path","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/09/pythonpath-3@2x.jpg","excerpt":"A timeless hazing ritual for new Python devs, and how to fix it.","custom_excerpt":"A timeless hazing ritual for new Python devs, and how to fix it.","created_at_pretty":"11 September, 2018","published_at_pretty":"12 September, 2018","updated_at_pretty":"02 February, 2019","created_at":"2018-09-11T07:56:57.000-04:00","published_at":"2018-09-12T08:04:00.000-04:00","updated_at":"2019-02-02T04:47:15.000-05:00","meta_title":"How to Recover from a Broken Python Path | Hackers and Slackers","meta_description":"Deleting your native system Python: a coming of age story. Learn how to fix your broken Python path without wiping your machine.","og_description":"Deleting your native system Python: a coming of age story. Learn how to fix your broken Python path without wiping your machine.","og_image":"https://hackersandslackers.com/content/images/2018/09/pythonpath-3@2x.jpg","og_title":"How to Recover from a Broken Python Path | Hackers and Slackers","twitter_description":"Deleting your native system Python: a coming of age story. Learn how to fix your broken Python path without wiping your machine.","twitter_image":"https://hackersandslackers.com/content/images/2018/09/pythonpath-3@2x.jpg","twitter_title":"How to Recover from a Broken Python Path | Hackers and Slackers","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"}],"plaintext":"I remember back to when I first learned Python. It was a strange decision for a\nhappily employed post-graduate to make, especially for a time when many were\nscreaming for the death of the language with Guido's (outrageous?) grand reveal\nof Python 3.  The Ruby on Rails guys seemed to be doing just fine. Those were\nthe days.\n\nAfter weeks of sweating over a keyboard in the basement of an illegal BedStuy\nhostel, I had finally set out what I had hoped to achieve. It was the greatest\ncredential any programmer could possibly strive for: yes ladies and gentlemen,\nnone other than yours truly became an officially recognized licensed\nprofessional: I had just completed the last Python course in Codecademy.\n\nCongrats! You know nothing.Armed with this new unfathomable knowledge, I was\nready to take on the world. I did have a few gaps in my knowledge, such as:\n\n * Experience with Linux\n * General idea of what a terminal is and why anybody would use one\n * Basic understanding of the internet\n * Motor skills needed to survive\n\nThat aside, I was determined. Nothing could stop me, which turns out to be a\nreally bad attitude when you're SSHed into a VPS with root access, and zero\nhesitation to wreak havoc upon any and all system files. You see where this is\ngoing.\n\nDear Stack Overflow: I Think I Deleted Python\nDisabling your system's native Python version, whether via deletion or a\nmisconfigured PATH, is a coming-of-age cliché as timeless as losing one's\nvirginity on prom night. Young developers flock to Stack Overflow pleading for\nhelp, while those senior enough to reply sigh a gasp of nostalgia before\nreassuring them that their efforts are pointless. \"Ah yes,\" they reminisce, \"I\nremember my first devastating life-altering failure. To be young again.\"\n\nIf you're lucky enough to be unaware, UNIX based systems depend on their\nnatively installed version of Python to run, well, almost everything. If Python\nis unavailable for just a moment, the developer loses the ability to use:\n\n * vi\n * vim\n * nano\n * grep\n * source\n * wait, SOURCE?\n\nYep, the command you'd normally use to relaunch a corrupted startup file (such\nas the one that holds your PATH  variable) is totally unusable. Not that it\nmatters, what are you going to do, edit it?  Oh right, you just ruined every\nbash text editor. I'd actually be more interested in seeing what DOES work\nwithout Python configuring on Mac/Linux, other than moving up and down your file\nstructure helplessly, trying to quantify the damage you just wrecked upon your\nwork, life, and career.\n\nSo, Should I Kill Myself?\nHow to destroy everything ever.Calm yourself and stick with me here; I have no\ninterest in writing long-winded posts without providing any sort of solution.\nThat said, I have no problem making you sit down and think about what you've\ndone while I bother getting to the point. Nobody else has fixed this for you\nyet, and I need to improve my site's metrics, so it seems like we need each\nother on this one.\n\nBesides, don't be so hard on yourself. Not even a week ago, I sat with a Senior\nDeveloper to review my development stack, and how that would fit into the\ncurrent ecosystem of the department. Naturally I explained that I prefer running\n Flask  on Python 3.7, as I adjusted my motorcycle jacket and sat forward to\ncasually   extinguish a cigarette on his desk. Even through my vision was\nobstructed by the timelessly classic aviators resting on my face, I could see\nthe letters roll across the terminal window before him as he typed. The poor\nbastard running a 4-year old Linux distribution had just checked if Python 3 was\ninstalled on his live production instance, when his fingertips unleashed the\nunmistakable export PATH=..., seconds away from linking CentOS' native Python\nfrom Python 2.7 to Python 3.7. My exact reaction was something along the lines\nof \"OH GOD NO DON'T DO THAT STOP HOLY MOTHER OF JESUS FUCK!\" \n\nHe stopped typing. The day was saved, and I was able to explain the importance\nof leaving native Python versions intact on the systems they come installed on.\nThen, I myself fucked up the Python path maybe an hour later. On production.\n\nWe all do dumb things sometimes. That doesn't mean you're dumb. Well, except in\nmy case, having done this countless times before. Some of us simply like to live\ndangerously. Fortune favors the bold, and so on.\n\nRetro meme outta nowhere!Getting out of this Mess\nNow that we've hit rock bottom, where do we go from here? Well, two things to\nkeep in mind:\n\n 1. Not everything  is broken without Python. Extreme foreshadowing.\n 2. Restarting a terminal will automatically run all startup scripts.\n\nBy now you know that .bash_profile  and .bashrc  are critically important to\nyour system, considering how badly you've fucked things up just now. These files\nset important variables for your system every time you open your terminal; more\nspecifically, .bash_profile  kicks in on any sort of user log in (such as SSH)\nwhere .bashrc  fires every time a new additional terminal window is opened. Even\nif your startup files are corrupted, the system will always love them and turn\nto them regardless of how horribly disfigured you left them. Talk about a spark\nof hope.\n\nOn Mac OSX\nI'll admit I'm a bit embarrassed at how long it took me to realize this: even\nthough you ruined every text editor known to man, there's one resilient enough\nto hold strong. The name? TextEdit.\n\nReveal hidden files in OSX easily.In your root directory, a combo ofShift + Cmd + .  displays all hidden files.\nCheck out bash_profile. Fix it, save it, reopen terminal. Cancel the suicide\nparty. Pop the Champagne.\n\nOn Linux\nNo GUI can save us now, but what can? Perhaps a command so stupid, so simple,\nthat it couldn't possibly need Python to work:\n\necho 'export PATH=\"/YOUR/ORIGINAL/PATH/2.7/bin:${PATH}\"' >> ~/.bash_profile\n\n\nThis appends the text you provide to the end of an existing file. .bash_profile \nand .bashrc  both only pay attention to the last exported PATH in the document,\nwhich means the rest of your file will work, and the only PATH which is\nrespected is the one which you've presumably entered correctly this time around.\nRestart your terminal. Get back in the game son: it ain't about how hard you\nhit, but how hard you can get hit and keep moving forward.\n\nSidenote\nWe're not exactly conducting rocket science here (data science is a close second\nperhaps? Just kidding. We barely know what's going on most of the time). I felt\ncompelled to write this post for two reasons: one being how common and\ndestructive this pitfall can be for most people, but more importantly, the\nknee-jerk reaction veterans have in response to this problem is \"good luck,\nyou're fucked.\" \n\nI'm not here to comment on the integrity of our fine anonymous internet\ncommunities, but the discrepancy between how devastating losing a server can be\ndoesn't seem to met with much urgency by anybody with insight. Nobody taught me\nhow to work around these issues. Had I listened to anonymous internet advice, I\nprobably wouldn't let entire servers of sensitive data for dead, including my\npersonal machines. I worked through it, and quite frankly, I'm kind of a fucking\nidiot [https://hackersandslackers.com/about/], as is our mission statement. If\nan idiot who majored in nonsense and learned a programming language before\nlearning Linux can work through this, I would expect the same of those with much\nmore intelligence than I to, at the very least, attempt the same.","html":"<p>I remember back to when I first learned Python. It was a strange decision for a happily employed post-graduate to make, especially for a time when many were screaming for the death of the language with Guido's (outrageous?) grand reveal of Python 3.  The Ruby on Rails guys seemed to be doing just fine. Those were the days.</p><p>After weeks of sweating over a keyboard in the basement of an illegal BedStuy hostel, I had finally set out what I had hoped to achieve. It was the greatest credential any programmer could possibly strive for: yes ladies and gentlemen, none other than yours truly became an <em>officially recognized licensed professional</em>: I had just completed the last Python course in Codecademy.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-5.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/python-codecademy-champion.png\" class=\"kg-image\"><figcaption>Congrats! You know nothing.</figcaption></figure><p>Armed with this new unfathomable knowledge, I was ready to take on the world. I did have a few gaps in my knowledge, such as:</p><ul><li>Experience with Linux</li><li>General idea of what a terminal is and why anybody would use one</li><li>Basic understanding of the internet</li><li>Motor skills needed to survive</li></ul><p>That aside, I was determined. Nothing could stop me, which turns out to be a really bad attitude when you're SSHed into a VPS with root access, and zero hesitation to wreak havoc upon any and all system files. You see where this is going.</p><h2 id=\"dear-stack-overflow-i-think-i-deleted-python\">Dear Stack Overflow: I Think I Deleted Python</h2><style>\n    iframe{\n    height: 423px !important;\n        margin-bottom: 20px;\n    }\n</style>  <script type=\"text/javascript\" src=\"https://ssl.gstatic.com/trends_nrtr/1709_RC01/embed_loader.js\"></script>\n  <script type=\"text/javascript\">\n    trends.embed.renderExploreWidget(\"TIMESERIES\", {\"comparisonItem\":[{\"keyword\":\"python path\",\"geo\":\"US\",\"time\":\"2004-01-01 2019-02-02\"}],\"category\":0,\"property\":\"\"}, {\"exploreQuery\":\"date=all&geo=US&q=python%20path\",\"guestPath\":\"https://trends.google.com:443/trends/embed/\"});\n  </script><p>Disabling your system's native Python version, whether via deletion or a misconfigured <code>PATH</code>, is a coming-of-age cliché as timeless as losing one's virginity on prom night. Young developers flock to Stack Overflow pleading for help, while those senior enough to reply sigh a gasp of nostalgia before reassuring them that their efforts are pointless. \"<em>Ah yes,\" </em>they reminisce, \"<em>I remember my first devastating life-altering failure. To be young again.\"</em></p><p>If you're lucky enough to be unaware, UNIX based systems depend on their natively installed version of Python to run, well, almost everything. If Python is unavailable for just a moment, the developer loses the ability to use:</p><ul><li>vi</li><li>vim</li><li>nano</li><li>grep</li><li>source</li><li>wait, <em>SOURCE?</em></li></ul><p>Yep, the command you'd normally use to relaunch a corrupted startup file (such as the one that holds your <code>PATH</code> variable) is totally unusable. Not that it matters, what are you going to do, <em>edit it?</em> Oh right, you just ruined <em>every bash text editor. </em>I'd actually be more interested in seeing what DOES work without Python configuring on Mac/Linux, other than moving up and down your file structure helplessly, trying to quantify the damage you just wrecked upon your work, life, and career.</p><h3 id=\"so-should-i-kill-myself\">So, Should I Kill Myself?</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/nRrH6Gn.gif\" class=\"kg-image\"><figcaption>How to destroy everything ever.</figcaption></figure><p>Calm yourself and stick with me here; I have no interest in writing long-winded posts without providing any sort of solution. That said, I have no problem making you sit down and think about what you've done while I bother getting to the point. Nobody else has fixed this for you yet, and I need to improve my site's metrics, so it seems like we need each other on this one.</p><p>Besides, don't be so hard on yourself. Not even a week ago, I sat with a Senior Developer to review my development stack, and how that would fit into the current ecosystem of the department. Naturally I explained that I prefer running <strong>Flask</strong> on <strong>Python 3.7</strong>, as I adjusted my motorcycle jacket and sat forward to casually   extinguish a cigarette on his desk. Even through my vision was obstructed by the timelessly classic aviators resting on my face, I could see the letters roll across the terminal window before him as he typed. The poor bastard running a 4-year old Linux distribution had just checked if Python 3 was installed <strong>on his live production instance</strong>, when his fingertips unleashed the unmistakable <code>export PATH=...</code>, seconds away from linking CentOS' native Python from Python 2.7 to Python 3.7. My exact reaction was something along the lines of \"OH GOD NO DON'T DO THAT STOP HOLY MOTHER OF JESUS FUCK!\" </p><p>He stopped typing. The day was saved, and I was able to explain the importance of leaving native Python versions intact on the systems they come installed on. Then, I myself fucked up the Python path maybe an hour later. On production.  </p><p>We all do dumb things sometimes. That doesn't mean you're dumb. Well, except in my case, having done this countless times before. Some of us simply like to live dangerously. Fortune favors the bold, and so on.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/arNjoZz.gif\" class=\"kg-image\"><figcaption>Retro meme outta nowhere!</figcaption></figure><h2 id=\"getting-out-of-this-mess\">Getting out of this Mess</h2><p>Now that we've hit rock bottom, where do we go from here? Well, two things to keep in mind:</p><ol><li>Not <em>everything</em> is broken without Python. Extreme foreshadowing.</li><li>Restarting a terminal will automatically run all startup scripts.</li></ol><p>By now you know that <code>.bash_profile</code> and <code>.bashrc</code> are critically important to your system, considering how badly you've fucked things up just now. These files set important variables for your system every time you open your terminal; more specifically, <code>.bash_profile</code> kicks in on any sort of user log in (such as SSH) where <code>.bashrc</code> fires every time a new additional terminal window is opened. Even if your startup files are corrupted, the system will always love them and turn to them regardless of how horribly disfigured you left them. Talk about a spark of hope.</p><h3 id=\"on-mac-osx\">On Mac OSX</h3><p>I'll admit I'm a bit embarrassed at how long it took me to realize this: even though you ruined every text editor known to man, there's one resilient enough to hold strong. The name? <strong>TextEdit.</strong></p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/ngA6gj0.gif\" class=\"kg-image\"><figcaption>Reveal hidden files in OSX easily.</figcaption></figure><p>In your root directory, a combo of  <code>Shift + Cmd + .</code> displays all hidden files. Check out bash_profile. Fix it, save it, reopen terminal. Cancel the suicide party. Pop the Champagne.</p><h3 id=\"on-linux\">On Linux</h3><p>No GUI can save us now, but what can? Perhaps a command so stupid, so simple, that it couldn't possibly need Python to work:</p><pre><code class=\"language-bash\">echo 'export PATH=&quot;/YOUR/ORIGINAL/PATH/2.7/bin:${PATH}&quot;' &gt;&gt; ~/.bash_profile\n</code></pre>\n<p>This <em>appends </em>the text you provide to the end of an existing file. <code>.bash_profile</code> and <code>.bashrc</code> both only pay attention to the last exported PATH in the document, which means the rest of your file will work, and the only PATH which is respected is the one which you've <em>presumably entered correctly this time around</em>. Restart your terminal. Get back in the game son: it ain't about how hard you hit, but how hard you can get hit and keep moving forward.</p><h2 id=\"sidenote\">Sidenote</h2><p>We're not exactly conducting rocket science here (data science is a close second perhaps? Just kidding. We barely know what's going on most of the time). I felt compelled to write this post for two reasons: one being how common and destructive this pitfall can be for most people, but more importantly, the knee-jerk reaction veterans have in response to this problem is \"good luck, you're fucked.\" </p><p>I'm not here to comment on the integrity of our fine anonymous internet communities, but the discrepancy between how devastating losing a server can be doesn't seem to met with much urgency by anybody with insight. Nobody taught me how to work around these issues. Had I listened to anonymous internet advice, I probably wouldn't let entire servers of sensitive data for dead, including my personal machines. I worked through it, and quite frankly, I'm <a href=\"https://hackersandslackers.com/about/\">kind of a <em>fucking idiot</em></a><em>, </em>as is our mission statement. If an idiot who majored in nonsense and learned a programming language before learning Linux can work through this, I would expect the same of those with much more intelligence than I to, at the very least, attempt the same.</p>","url":"https://hackersandslackers.com/so-youve-fucked-up-your-python-path/","uuid":"5de62a8f-94c9-4e70-8034-d46fb9369a73","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b97ad891fc1fc7d92b5c537"}},"pageContext":{"slug":"so-youve-fucked-up-your-python-path"}}