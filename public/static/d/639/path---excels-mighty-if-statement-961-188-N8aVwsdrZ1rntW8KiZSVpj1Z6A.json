{"data":{"ghostPost":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673681","title":"Yes...If(And)): Excel’s Mighty “IF” Statement","slug":"excels-mighty-if-statement","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/excelif-2.jpg","excerpt":"A deep dive into Excel’s implementation of IF statements and their significance.","custom_excerpt":"A deep dive into Excel’s implementation of IF statements and their significance.","created_at_pretty":"20 June, 2018","published_at_pretty":"20 June, 2018","updated_at_pretty":"28 February, 2019","created_at":"2018-06-19T20:17:09.000-04:00","published_at":"2018-06-20T07:30:00.000-04:00","updated_at":"2019-02-28T02:36:33.000-05:00","meta_title":"Yes...If(And)): Excel’s Mighty “IF” Statement | Hackers and Slackers","meta_description":"A deep dive into Excel’s implementation of IF statements and their significance.","og_description":"A deep dive into Excel’s implementation of IF statements and their significance","og_image":"https://hackersandslackers.com/content/images/2019/02/excelif-2.jpg","og_title":"Yes...If(And)): Excel’s Mighty “IF” Statement ","twitter_description":"A deep dive into Excel’s implementation of IF statements and their significance","twitter_image":"https://hackersandslackers.com/content/images/2019/02/excelif-2.jpg","twitter_title":"Yes...If(And)): Excel’s Mighty “IF” Statement ","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"If you've been following along on our proverbial Hogwarts for budding Excel\nwizardry, you would know that we recently crossed an important Rubicon upon\nwhich all Excel, and indeed all computer programming languages are built: The\nmighty IF statement. Remember, the IF statement allows the wielder to fork\nreality at their whim, to bend the code on a lark, to be the Franklin Richards\nof the spreadsheet just by asking the computer a simple true/false question.\nConsidering the gravity of this momentous revelation, I implore you to read the\nprevious statement in order to join us in enlightenment.\n\nAs we've already explored, all code, no matter how it's written, is built upon a\nfoundation of ones and zeros, sequenced an infinite number of ways to obtain an\ninfinite number of results, and the key to harnessing this power lies within the\nIF statement...kind of. Much like one can  write a sentence with two letters\n(GO!), or write an entire paragraph using the word \"buffalo\" doesn't necessarily\nmean that the next Nobel Prize in Literature is going to be won with the\ngroundbreaking poem GO BUFFALO! (or at least, I hope not). With that being said,\nwhile the IF statement is the foundation on which all code is built, it has\nfriends, in the form of OR and AND.\n\nTo put it simply, the IF statement checks to see if a given statement is true or\nfalse, but rarely do you want to merely check if one number is equal to another,\nsometimes you want to get a little bit more complex: enter the AND and OR\nstatements: the proverbial cherry and whip cream atop the Sunday.\n\nThe thing to always keep in mind is that everything always comes back to a\ntrue/false IF statement, the AND and OR statements only add more things to the\nmix for Excel to verify.\n\nLet's get one thing out of the way off the bat, while every programming language\ncontains IF, AND, and OR, the way you write out these statements (or perhaps,\nquestions?) in Excel's frontend (which is a fancy way to say \"the thing that you\nsee) is downright wacky. In the majority of programming languages, one would\nwrite an IF statement with an OR or an AND like you would a sentence:\n\n**IF the age of Jim > The age of Bob\nAND Bob is old\n(then)\n\"Print Jim is Old, older than Bob\"\n\nIn the vast majority of programming languages, you would write out that code\nalmost exactly as I wrote it (note that almost all programming languages imply\nthe \"then\"...including Excel). However, Excel likes to be different and forces\nyou to essentially write the same code in an ass backwards way, kind of like\nthis:\n\nIF(AND(Jim>Bob,Bob = old),\"Jim is old, older than bob\"\n\nYou'll notice right away that you'll need an AND before you write your IF\nstatement, which is kind of the opposite of how sentences (or even thinking in\ngeneral) works. On the plus side the way AND works in Excel is that it lets you\nkeep adding things to check after each comma, think of each comma within the AND\nstatement as adding another \"and\" to the sentence. In other words, you only need\nto write AND once for each IF you have.\n\nTo put things less esoterically, here are the nuts and bolts behind \"AND\":\n\nFirst you have the IF statement which checks to see if a given value is true or\nfalse. In the example above, its Jim's age. If you were checking Jim's age\nagainst Bob's age, and let's say Jim's age is written in cell A1 and Bob's age\nis written in cell B1, the IF would be written like this:\n\n**=IF(A1 > B1, \"Jim is old\", \"Jim is young\")\n\nBasically, you're seeing if Jim is older than Bob, and then you're given two\nchoices: If Jim is older than Bob, Jim is old, If Jim is not older than Bob, Jim\nis young. Naturally though, one's age is not measured in Bobs, and normally you\ncan't tell if any Jim off the street is old just by their proximity to a\nBob...so enter the AND.\n\nIn Excel, and is it's own formula (you can technically write =AND(1,2) and it'll\nreturn \"true\" because 1 and 2 are, in fact numbers) which checks to see if two\n(or more) arguments within it's parenthesis are true, and it'll return \"true\" if\nso. So, let's say You have Jim's age in cell A1, Bob's age in Cell B1, and the\nphrase \"this example is falling apart\" in cell C1, and Jim can only be\nconsidered \"old\" if this example is falling apart, you'd write it like this:\n\n**=IF(AND(A1>B1,C1= \"this example is falling apart\"),\"Jim is Old!\",\"Jim is not\nold!\")\n\nSo let's look at this from left to right in English: You're checking to see if\nJim is old (the IF statement), you know that Jim can only be considered old if\nhe is older than Bob (cell B1) AND  if this example is falling apart (C1), if\nall of these things are true, then Jim is, in fact, old, or else, he is not old.\n\nBefore we close out for the night, a quick PROTIP!: the ass-backwards way Excel\nforces you to write AND statements has an upside: you only need to write AND\nonce for each IF statement you include (and you better believe you can use more\nthan one...tune in next time!). In other words, you can keep adding things to\ncheck the truth of just by adding commas after the AND(. Think of each comma you\nwrite after the second parenthesis but before the 3rd as adding another AND to\nthe mix...just keep one thing in mind, if only one of those is false, the whole\nhouse of cards falls apart (which may be what you're trying to accomplish!)\n\nIn summary, in this lesson we went over:\n\n * The massive impact of the IF statement\n * How you can get jiggy with IFs by using AND\n * How to spice up your IFs with ANDs\n * How to tell if Jim is indeed old\n\nNext time, I'll push this ridiculous example to infinity and beyond when we make\nlike a bird and Nest.\n\n-Snacks","html":"<p>If you've been following along on our proverbial Hogwarts for budding Excel wizardry, you would know that we recently crossed an important Rubicon upon which all Excel, and indeed all computer programming languages are built: The mighty IF statement. Remember, the IF statement allows the wielder to fork reality at their whim, to bend the code on a lark, to be the Franklin Richards of the spreadsheet just by asking the computer a simple true/false question. Considering the gravity of this momentous revelation, I implore you to read the previous statement in order to join us in enlightenment.</p><p>As we've already explored, all code, no matter how it's written, is built upon a foundation of ones and zeros, sequenced an infinite number of ways to obtain an infinite number of results, and the key to harnessing this power lies within the IF statement...kind of. Much like one <em>can</em> write a sentence with two letters (GO!), or write an entire paragraph using the word \"buffalo\" doesn't necessarily mean that the next Nobel Prize in Literature is going to be won with the groundbreaking poem GO BUFFALO! (or at least, I hope not). With that being said, while the IF statement is the foundation on which all code is built, it has friends, in the form of OR and AND.</p><p>To put it simply, the IF statement checks to see if a given statement is true or false, but rarely do you want to merely check if one number is equal to another, sometimes you want to get a little bit more complex: enter the AND and OR statements: the proverbial cherry and whip cream atop the Sunday.</p><p>The thing to always keep in mind is that everything always comes back to a true/false IF statement, the AND and OR statements only add more things to the mix for Excel to verify.</p><p>Let's get one thing out of the way off the bat, while every programming language contains IF, AND, and OR, the way you write out these statements (or perhaps, questions?) in Excel's frontend (which is a fancy way to say \"the thing that you see) is downright wacky. In the majority of programming languages, one would write an IF statement with an OR or an AND like you would a sentence:</p><pre><code>**IF the age of Jim &gt; The age of Bob\nAND Bob is old\n(then)\n\"Print Jim is Old, older than Bob\"</code></pre><p>In the vast majority of programming languages, you would write out that code almost exactly as I wrote it (note that almost all programming languages imply the \"then\"...including Excel). However, Excel likes to be different and forces you to essentially write the same code in an ass backwards way, kind of like this:</p><p><strong>IF(AND(Jim&gt;Bob,Bob = old),\"Jim is old, older than bob\"</strong></p><p>You'll notice right away that you'll need an AND before you write your IF statement, which is kind of the opposite of how sentences (or even thinking in general) works. On the plus side the way AND works in Excel is that it lets you keep adding things to check after each comma, think of each comma within the AND statement as adding another \"and\" to the sentence. In other words, you only need to write AND once for each IF you have.</p><p>To put things less esoterically, here are the nuts and bolts behind \"AND\":</p><p>First you have the IF statement which checks to see if a given value is true or false. In the example above, its Jim's age. If you were checking Jim's age against Bob's age, and let's say Jim's age is written in cell A1 and Bob's age is written in cell B1, the IF would be written like this:</p><p><code>**=IF(A1 &gt; B1, \"Jim is old\", \"Jim is young\")</code></p><p>Basically, you're seeing if Jim is older than Bob, and then you're given two choices: If Jim is older than Bob, Jim is old, If Jim is not older than Bob, Jim is young. Naturally though, one's age is not measured in Bobs, and normally you can't tell if any Jim off the street is old just by their proximity to a Bob...so enter the AND.</p><p>In Excel, and is it's own formula (you can technically write =AND(1,2) and it'll return \"true\" because 1 and 2 are, in fact numbers) which checks to see if two (or more) arguments within it's parenthesis are true, and it'll return \"true\" if so. So, let's say You have Jim's age in cell A1, Bob's age in Cell B1, and the phrase \"this example is falling apart\" in cell C1, and Jim can only be considered \"old\" if this example is falling apart, you'd write it like this:</p><p><code>**=IF(AND(A1&gt;B1,C1= \"this example is falling apart\"),\"Jim is Old!\",\"Jim is not old!\")</code></p><p>So let's look at this from left to right in English: You're checking to see if Jim is old (the IF statement), you know that Jim can only be considered old if he is older than Bob (cell B1) <em>AND</em> if this example is falling apart (C1), if all of these things are true, then Jim is, in fact, old, or else, he is not old.</p><p>Before we close out for the night, a quick <strong>PROTIP!</strong>: the ass-backwards way Excel forces you to write AND statements has an upside: you only need to write AND once for each IF statement you include (and you better believe you can use more than one...tune in next time!). In other words, you can keep adding things to check the truth of just by adding commas after the AND(. Think of each comma you write after the second parenthesis but before the 3rd as adding another AND to the mix...just keep one thing in mind, if only one of those is false, the whole house of cards falls apart (which may be what you're trying to accomplish!)</p><p>In summary, in this lesson we went over:</p><ul><li>The massive impact of the IF statement</li><li>How you can get jiggy with IFs by using AND</li><li>How to spice up your IFs with ANDs</li><li>How to tell if Jim is indeed old</li></ul><p>Next time, I'll push this ridiculous example to infinity and beyond when we make like a bird and Nest.</p><p>-Snacks</p>","url":"https://hackersandslackers.com/excels-mighty-if-statement/","uuid":"53e33eb7-ca7d-4c24-97d5-ff9c9c2c91bd","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b299d05ded32f5af8fd6745"}},"pageContext":{"slug":"excels-mighty-if-statement"}}