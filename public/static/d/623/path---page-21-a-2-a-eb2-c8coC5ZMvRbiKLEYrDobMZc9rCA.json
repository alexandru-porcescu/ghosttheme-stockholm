{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736ce","title":"Lynx Roundup, August 14th","slug":"lynx-roundup-august-14th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/74-1-3@2x.jpg","excerpt":"Decision trees!  Fruit fly brains!  Card counting!","custom_excerpt":"Decision trees!  Fruit fly brains!  Card counting!","created_at_pretty":"10 August, 2018","published_at_pretty":"14 August, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-08-10T14:00:45.000-04:00","published_at":"2018-08-14T07:00:00.000-04:00","updated_at":"2019-02-14T05:22:30.000-05:00","meta_title":"Decision trees!  Fruit fly brains!  Card counting! | Hackers And Slackers","meta_description":"Decision trees!  Fruit fly brains!  Card counting!","og_description":"Decision trees!  Fruit fly brains!  Card counting!","og_image":"https://hackersandslackers.com/content/images/2019/02/74-1-3@2x.jpg","og_title":"Lynx Roundup, August 14th","twitter_description":"Decision trees!  Fruit fly brains!  Card counting!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/74-1-3@2x.jpg","twitter_title":"Lynx Roundup, August 14th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://internetofthingsagenda.techtarget.com/feature/With-AWS-Greengrass-IoT-apps-become-seamless-edge-to-cloud\n\n\n\nhttp://junkcharts.typepad.com/junk_charts/2018/07/some-tufte-basics-brought-to-you-by-your-favorite-birds.html\n\n\n\nhttps://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720/\n\n\n\nhttps://medium.freecodecamp.org/i-used-programming-to-figure-out-how-card-counting-really-works-7ecefdb1b8d4\n\n\n\nhttps://techxplore.com/news/2018-07-brain-atlas-deep-algorithms.html\n\n\n\nhttp://www.sci-news.com/othersciences/neuroscience/fruit-fly-brain-06227.html\n\n\n\nhttps://brohrer.github.io/how_decision_trees_work.html?utm_campaign=Data_Elixir&utm_medium=email&utm_source=Data_Elixir_192\n[https://brohrer.github.io/how_decision_trees_work.html?utm_campaign=Data_Elixir&utm_medium=email&utm_source=Data_Elixir_192]","html":"<p></p><p><a href=\"https://internetofthingsagenda.techtarget.com/feature/With-AWS-Greengrass-IoT-apps-become-seamless-edge-to-cloud\">https://internetofthingsagenda.techtarget.com/feature/With-AWS-Greengrass-IoT-apps-become-seamless-edge-to-cloud</a></p><p></p><p><a href=\"http://junkcharts.typepad.com/junk_charts/2018/07/some-tufte-basics-brought-to-you-by-your-favorite-birds.html\">http://junkcharts.typepad.com/junk_charts/2018/07/some-tufte-basics-brought-to-you-by-your-favorite-birds.html</a></p><p></p><p><a href=\"https://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720/\">https://www.quantamagazine.org/the-octonion-math-that-could-underpin-physics-20180720/</a></p><p></p><p><a href=\"https://medium.freecodecamp.org/i-used-programming-to-figure-out-how-card-counting-really-works-7ecefdb1b8d4\">https://medium.freecodecamp.org/i-used-programming-to-figure-out-how-card-counting-really-works-7ecefdb1b8d4</a></p><p></p><p><a href=\"https://techxplore.com/news/2018-07-brain-atlas-deep-algorithms.html\">https://techxplore.com/news/2018-07-brain-atlas-deep-algorithms.html</a></p><p></p><p><a href=\"http://www.sci-news.com/othersciences/neuroscience/fruit-fly-brain-06227.html\">http://www.sci-news.com/othersciences/neuroscience/fruit-fly-brain-06227.html</a></p><p></p><p><a href=\"https://brohrer.github.io/how_decision_trees_work.html?utm_campaign=Data_Elixir&amp;utm_medium=email&amp;utm_source=Data_Elixir_192\">https://brohrer.github.io/how_decision_trees_work.html?utm_campaign=Data_Elixir&amp;utm_medium=email&amp;utm_source=Data_Elixir_192</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-14th/","uuid":"c40ea8cf-91fb-471c-80e3-4c13f5e25162","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b6dd2cd65239d07358de4de"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736d3","title":"Importing Excel Datetimes Into Pandas, Part I","slug":"importing-excel-dates-times-into-pandas","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/excelpandaspart1-1.jpg","excerpt":"Pandas & Excel, Part 1.","custom_excerpt":"Pandas & Excel, Part 1.","created_at_pretty":"13 August, 2018","published_at_pretty":"13 August, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-08-12T20:21:40.000-04:00","published_at":"2018-08-13T07:30:00.000-04:00","updated_at":"2019-04-09T23:40:15.000-04:00","meta_title":"Pandas & Excel, Part 1 | Hackers And Slackers","meta_description":"Import dates & times from Excel .xlsx files into Pandas!","og_description":"Import dates & times from Excel .xlsx files into Pandas!","og_image":"https://hackersandslackers.com/content/images/2019/04/excelpandaspart1-1-2.jpg","og_title":"Importing Excel Datetimes Into Pandas","twitter_description":"Import dates & times from Excel .xlsx files into Pandas!","twitter_image":"https://hackersandslackers.com/content/images/2019/04/excelpandaspart1-1-1.jpg","twitter_title":"Importing Excel Datetimes Into Pandas","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Pandas","slug":"pandas","description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","feature_image":"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/pandasmerge.jpg","meta_description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","meta_title":"Pythons and Pandas | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Pandas","slug":"pandas","description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","feature_image":"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/pandasmerge.jpg","meta_description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","meta_title":"Pythons and Pandas | Hackers and Slackers","visibility":"public"},{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},{"name":"#Code Snippet Corner","slug":"code-snippet-corner","description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o_o.jpg","meta_description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","meta_title":"Python Code Snippet Corner","visibility":"internal"}],"plaintext":"Different file formats are different!  For all kinds of reasons!\n\nA few months back, I had to import some Excel files into a database. In this\nprocess I learned so much about the delightfully unique way Excel stores dates &\ntimes!\n\nThe basic datetime will be a decimal number, like 43324.909907407404.  The\nnumber before the decimal is the day, the number afterwards is the time.  So\nfar, so good - this is pretty common for computers.  The date is often the\nnumber of days past a certain date, and the time is the number of seconds.\n\nSo, let's load our excel sheet!  Pandas of course has a painless way of doing\nthis.\n\nimport pandas as pd\n\ndfRaw = pd.read_excel(\"hasDates.xlsx\", sheet_name=\"Sheet1\")\n\ndfRaw[\"dateTimes\"]\n\n\n0\n 0\n 43324.909907\n 1\n 43324.909919\n 2\n 43324.909931\n 3\n 43324.909942\n 4\n 43324.909954\n Sadly, we can't yet convert these.  Different Excel files start at different\ndates, and you'll get a very wrong result if you use the wrong one.  Luckily,\nthere are tools that'll go into the file and extract what we need!  Enter xlrd:\n\nimport xlrd\n\nbook = xlrd.open_workbook(\"hasDates.xlsx\")\ndatemode = book.datemode\n\n\nxlrd  also has a handy function for turning those dates into a datetime  tuple\nthat'll play nicely with Python.\n\ndfRaw[\"dateTimes\"].map(lambda x: \n          xlrd.xldate_as_tuple(x, datemode))\n\n\n0\n 0\n (2018, 8, 12, 21, 50, 16)\n 1\n (2018, 8, 12, 21, 50, 17)\n 2\n (2018, 8, 12, 21, 50, 18)\n 3\n (2018, 8, 12, 21, 50, 19)\n 4\n (2018, 8, 12, 21, 50, 20)\n And once we've got that, simple enough to convert to proper datetimes!\n\nimport datetime\n\ndfRaw[\"dateTimes\"].map(lambda x: \n          datetime.datetime(*xlrd.xldate_as_tuple(x, \n                                                  datemode)))\n\n\n0\n 0\n 2018-08-12 21:50:16\n 1\n 2018-08-12 21:50:17\n 2\n 2018-08-12 21:50:18\n 3\n 2018-08-12 21:50:19\n 4\n 2018-08-12 21:50:20\n Stick around for Part 2, where we look at some messier situations.","html":"<p>Different file formats are different!  For all kinds of reasons!</p><p>A few months back, I had to import some Excel files into a database. In this process I learned so much about the delightfully unique way Excel stores dates &amp; times!  </p><p>The basic datetime will be a decimal number, like <code>43324.909907407404</code>.  The number before the decimal is the day, the number afterwards is the time.  So far, so good - this is pretty common for computers.  The date is often the number of days past a certain date, and the time is the number of seconds.  </p><p>So, let's load our excel sheet!  Pandas of course has a painless way of doing this.</p><pre><code class=\"language-python\">import pandas as pd\n\ndfRaw = pd.read_excel(&quot;hasDates.xlsx&quot;, sheet_name=&quot;Sheet1&quot;)\n\ndfRaw[&quot;dateTimes&quot;]\n</code></pre>\n<div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>43324.909907</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>43324.909919</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>43324.909931</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>43324.909942</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>43324.909954</td>\n    </tr>\n  </tbody>\n</table>\n</div><p>Sadly, we can't yet convert these.  Different Excel files start at different dates, and you'll get a very wrong result if you use the wrong one.  Luckily, there are tools that'll go into the file and extract what we need!  Enter <code>xlrd</code>:</p><pre><code class=\"language-python\">import xlrd\n\nbook = xlrd.open_workbook(&quot;hasDates.xlsx&quot;)\ndatemode = book.datemode\n</code></pre>\n<p><code>xlrd</code> also has a handy function for turning those dates into a <code>datetime</code> tuple that'll play nicely with Python.</p><pre><code class=\"language-python\">dfRaw[&quot;dateTimes&quot;].map(lambda x: \n          xlrd.xldate_as_tuple(x, datemode))\n</code></pre>\n<div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>(2018, 8, 12, 21, 50, 16)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>(2018, 8, 12, 21, 50, 17)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>(2018, 8, 12, 21, 50, 18)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>(2018, 8, 12, 21, 50, 19)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>(2018, 8, 12, 21, 50, 20)</td>\n    </tr>\n  </tbody>\n</table>\n</div><p>And once we've got that, simple enough to convert to proper datetimes!</p><pre><code class=\"language-python\">import datetime\n\ndfRaw[&quot;dateTimes&quot;].map(lambda x: \n          datetime.datetime(*xlrd.xldate_as_tuple(x, \n                                                  datemode)))\n</code></pre>\n<div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2018-08-12 21:50:16</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2018-08-12 21:50:17</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2018-08-12 21:50:18</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2018-08-12 21:50:19</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2018-08-12 21:50:20</td>\n    </tr>\n  </tbody>\n</table>\n</div><p>Stick around for Part 2, where we look at some messier situations.</p>","url":"https://hackersandslackers.com/importing-excel-dates-times-into-pandas/","uuid":"727f6571-8ca4-4abc-b278-c7517cdaa29b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b70cf140230162100a1da9b"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736cd","title":"Lynx Roundup, August 13th","slug":"lynx-roundup-august-11th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx44@2x.jpg","excerpt":"Pre-commit checklists!  Pandas tips!  A tech tool for organizing tech workers!","custom_excerpt":"Pre-commit checklists!  Pandas tips!  A tech tool for organizing tech workers!","created_at_pretty":"10 August, 2018","published_at_pretty":"13 August, 2018","updated_at_pretty":"13 August, 2018","created_at":"2018-08-10T13:56:11.000-04:00","published_at":"2018-08-13T07:00:00.000-04:00","updated_at":"2018-08-13T07:00:00.000-04:00","meta_title":"Pre-commit checklists!  Pandas tips!  A tech tool for organizing tech workers! | Hackers And Slackers","meta_description":"Pre-commit checklists!  Pandas tips!  A tech tool for organizing tech workers!","og_description":"Pre-commit checklists!  Pandas tips!  A tech tool for organizing tech workers!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx44@2x.jpg","og_title":"Lynx Roundup, August 13th","twitter_description":"Pre-commit checklists!  Pandas tips!  A tech tool for organizing tech workers!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx44@2x.jpg","twitter_title":"Lynx Roundup, August 13th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://github.com/donnemartin/system-design-primer\n\n\n\nhttps://hackernoon.com/deep-learning-nerds-twitter-guide-7c2aa5c2cf18\n\n\n\nhttps://github.com/jxnblk/ok-mdx\n\n\n\nhttps://dev.to/vickylai/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials-14i7\n\n\n\nhttps://medium.freecodecamp.org/how-to-write-a-good-resume-in-2017-b8ea9dfdd3b9\n[https://medium.freecodecamp.org/how-to-write-a-good-resume-in-2017-b8ea9dfdd3b9?__s=wvtwtdzek6uqqfiffffi]\n\n\n\nhttps://realpython.com/fast-flexible-pandas/\n\n\n\nhttps://home.coworker.org/","html":"<p></p><p><a href=\"https://github.com/donnemartin/system-design-primer\">https://github.com/donnemartin/system-design-primer</a></p><p></p><p><a href=\"https://hackernoon.com/deep-learning-nerds-twitter-guide-7c2aa5c2cf18\">https://hackernoon.com/deep-learning-nerds-twitter-guide-7c2aa5c2cf18</a></p><p></p><p><a href=\"https://github.com/jxnblk/ok-mdx\">https://github.com/jxnblk/ok-mdx</a></p><p></p><p><a href=\"https://dev.to/vickylai/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials-14i7\">https://dev.to/vickylai/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials-14i7</a></p><p></p><p><a href=\"https://medium.freecodecamp.org/how-to-write-a-good-resume-in-2017-b8ea9dfdd3b9?__s=wvtwtdzek6uqqfiffffi\">https://medium.freecodecamp.org/how-to-write-a-good-resume-in-2017-b8ea9dfdd3b9</a></p><p></p><p><a href=\"https://realpython.com/fast-flexible-pandas/\">https://realpython.com/fast-flexible-pandas/</a></p><p></p><p><a href=\"https://home.coworker.org/\">https://home.coworker.org/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-11th/","uuid":"72b750d9-7c02-4579-8e79-5f9b8035df36","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b6dd1bb65239d07358de4db"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736cb","title":"Active-X Gonna Give it to Ya","slug":"excel-named-ranges-and-the-active-xs-who-love-them","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/08/dmx@2x.jpg","excerpt":"Excel Named Ranges and the Active Xs who Love Them.","custom_excerpt":"Excel Named Ranges and the Active Xs who Love Them.","created_at_pretty":"10 August, 2018","published_at_pretty":"10 August, 2018","updated_at_pretty":"02 February, 2019","created_at":"2018-08-10T11:25:48.000-04:00","published_at":"2018-08-10T14:19:22.000-04:00","updated_at":"2019-02-02T03:46:01.000-05:00","meta_title":"Excel Named Ranges and Active Xs | Hackers and Slackers","meta_description":"Excel offers the ability to \"name\" a particular range (or \"collection of cells\"). Learn Named Ranges and the Active Xs who Love Them.","og_description":"Excel offers the ability to \"name\" a particular range (or \"collection of cells\"). Learn Named Ranges and the Active Xs who Love Them.","og_image":"https://hackersandslackers.com/content/images/2018/08/dmx@2x.jpg","og_title":"Excel Named Ranges and the Active Xs who Love Them","twitter_description":"Excel offers the ability to \"name\" a particular range (or \"collection of cells\"). Learn Named Ranges and the Active Xs who Love Them.","twitter_image":"https://hackersandslackers.com/content/images/2018/08/dmx@2x.jpg","twitter_title":"Excel Named Ranges and the Active Xs who Love Them","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"Hi there dear reader, we've now reached a crossroads in your ability to use\nExcel as a means of data analysis. If you've been following along, you've\nlearned how to use basically every tool that an Excel analyst would need to have\nin the front of their minds. For those just joining us, these tools are as\nfollows: \n\n * Pivot Tables (both the report layout and the tabular layout)\n * Lookup Functions\n * IF + AND + OR statements \n * And the combination of these three tools (and if you're particularly\n   efficient, you may have dabbled in some VBA here and there)\n\nHowever, if you have functioning vision (and once you've generated 10,000 hours\nworth of pivot tables and lookups...you may not need to see anymore), you may\nnotice that Excel has about 20,000 more buttons that you've never interacted\nwith! Any reasonable individual would assume that you must be missing\nsomething...but we're not reasonable...we're ANALYSTS. \n\nTo solve this puzzle, I ask you to think back to our discussion on databases,\nand how they quickly grow unwieldy: deleting code will often cause significantly\nmore problems than just leaving the code in there and hoping no one wants to use\nit (have you ever glitched through a wall while playing a video-game only to see\na half designed level...that's something that the dev team didn't have time to\nfinish!)\n\nOne thing to remember is that the proto-version of Excel was one of the very\nfirst programs available on the personal computer (that would be VisiCalc for\nthe Apple II if you're the type of person who's into esoteric computer trivia)\nand it revolutionized the world...of accounting. After Windows overtook Apple in\nthe PC department, Excel soon followed, and because it was the only game in\ntown, it needed to do any calculation related task that the user-base (which at\nthis time didn't include everyone) came up with. \n\nIf you've ever taken a computer programming class, this may sound familiar, in\nthat it's the exact same design methodology as the programming language Java.\nJava was designed so that you could code ANYTHING on it and it would run on ANY\nplatform. However, the downside of this is that with the exception of a small\nset of things that Java does pretty well, coding in Java quickly gets miserable,\nit's slow as molasses, and in case you haven't noticed, your Java applet needs\nto update whenever anyone in the world thinks of a new idea (seriously, check\nthe lower right hand corner of your screen, an update is pending right now!)\n\nSo now that this entertaining history lesson is over, let's leverage a few of\nthose tools that our ancestors left us in order to make our (or more\nimportantly, an end-user's) life easier. \n\nThe first of these functions that I care to talk about is the \"naming of\nranges\". Back in the day, Excel wouldn't let you open up two workbooks at the\nsame time, making it difficult and annoying to lookup between worksheets\n(granted, I'd argue that best practice is that if you're planning on leaving\nthose formulas on your worksheet, that you paste the source data into a new\nworksheet in your workbook or risk the breaking of your links). In order to make\nboth inter and intra worksheet lookups and formulas easier, Excel offers the\nability to \"name\" a particular range (or \"collection of cells\"...the concept of\na range becomes much more important if you're coding VBA). For example, here I\nhave a list of random names: \n\nTotally Random NamesNow, if I were to write a formula that would involve these\nnames (such as finding out where DMX is hiding) I would probably just use the\nlocation of the range (A:A, or $A$2:$A$8 if you're an absolute kinda person).\nHOWEVER, I can also bless this column with a name.   \n\nTo do this, highlight the row or column, click formulas up top, and then go to\n\"Define Name\"\n\nNaming a RangeThe interface automatically takes the first cell and assumes that\nyou want it to be the name of the range (NO SPACES!) but I like to keep things\nto a single word, so let's call this \"Names\", and hit OK. \n\nWhat you've now done is transformed anything in column A on sheet 1 of this\nworkbook into a monolith known as \"Names\". While this sounds unimpressive on\nit's own (what is a name?) it comes in handy in two ways. \n\n1) If you're ever writing a formula that refers to column A, you can now just\ntype \"Names\" instead, no matter what sheet the formula starts in, as long as\nit's in the workbook (which saves you a ton of time, and makes it so that you\ndon't need to click back to sheet 1 to select column A or to type 'Sheet 1!'A:A\nwhich you'll almost certainly screw up (In fact, that's probably wrong). For\nexample, let's create a bunch of extra sheets to complicate things, and then try\nand find DMX. \n\nThe real question is...what IS he going to give you?The utility there is pretty\nevident, however, there's an even more useful reason for naming a range, and it\ninvolves another one of Excel's functions...the active-X controls. Plopping\nthese controls into a workbook allows someone who calls tech support when their\ncomputer crashes to read your data...and as such, represent an important albeit\nun-enjoyable part of the job. \n\nTo drop one of these into your worksheet, first go to developer (which, as a\nperson who's made it this far, I assume you've enabled), then insert (the cool\ninsert, not the one for pleebs), and then active-X control (I generally use the\ncombo box...and no, I don't know what it's a combination of). Check it out: \n\nIf your coworker doesn't have developer mode in their ribbon, RunYou'll then be\nasked to \"draw\" the box, generally you want it to be roughly the size of two or\nthree cells. Once that's done, it'll give you a seemingly normal drop-down box,\nbut now, let's click properties to see where the magic happens. \n\nSeen here: MagicNow, if you're interested, you can look up what all this stuff\nmeans, but for most people, the only things that matter are: List Fill Range,\nand  maybe linked cell.\n\nThe list fill range should be populated with what you want the drop-down to say,\nand because you already named a range...all you gotta do is type that in, and\nit'll gobble up anything you type into the range you defined. \n\nThe linked cell (above list fill range) is a cell that you want to export the\ndata from this cell into so that it can be interacted with by regular Excel\nstuff (like formulae), the cool kids will put that underneath the combo box so\nyou can't see it, but for the sake of clarity, I'll show you how this works (the\nlinked cell is G2):\n\nFirst X out of the properties window, then un-click \"design mode\"\n\nThe list fillThe linked cellAs an added bonus, you can type in the first few\nletters of one of those names, and it'll auto-populate. \n\nThe coup-de-grace is that you can now name cell G2 and you've essentially\ncreated a dynamic variable that someone can choose that can be shoved into\nformulae...and I hope you can see how this might be useful if you were building\nsay...a report that checks the values associated with a particular name or ID\n(and you want to gently nudge someone reading your data into selecting only the\nvalues you have data for). \n\nCongrats, you're now a step closer to sharing the fruit of your knowledge with\nthe populace...and by using these tools, you don't need to share that knowledge\nwith the very same populace (they won't be paying attention anyways), and that\nmy friend, is how the world goes round. \n\n-Snactive-X","html":"<p>Hi there dear reader, we've now reached a crossroads in your ability to use Excel as a means of data analysis. If you've been following along, you've learned how to use basically every tool that an Excel analyst would need to have in the front of their minds. For those just joining us, these tools are as follows: </p><ul><li>Pivot Tables (both the report layout and the tabular layout)</li><li>Lookup Functions</li><li>IF + AND + OR statements </li><li>And the combination of these three tools (and if you're particularly efficient, you may have dabbled in some VBA here and there)</li></ul><p>However, if you have functioning vision (and once you've generated 10,000 hours worth of pivot tables and lookups...you may not need to see anymore), you may notice that Excel has about 20,000 more buttons that you've never interacted with! Any reasonable individual would assume that you must be missing something...but we're not reasonable...we're ANALYSTS. </p><p>To solve this puzzle, I ask you to think back to our discussion on databases, and how they quickly grow unwieldy: deleting code will often cause significantly more problems than just leaving the code in there and hoping no one wants to use it (have you ever glitched through a wall while playing a video-game only to see a half designed level...that's something that the dev team didn't have time to finish!)</p><p>One thing to remember is that the proto-version of Excel was one of the very first programs available on the personal computer (that would be VisiCalc for the Apple II if you're the type of person who's into esoteric computer trivia) and it revolutionized the world...of accounting. After Windows overtook Apple in the PC department, Excel soon followed, and because it was the only game in town, it needed to do any calculation related task that the user-base (which at this time didn't include <em>everyone) </em>came up with. </p><p>If you've ever taken a computer programming class, this may sound familiar, in that it's the exact same design methodology as the programming language Java. Java was designed so that you could code ANYTHING on it and it would run on ANY platform. However, the downside of this is that with the exception of a small set of things that Java does pretty well, coding in Java quickly gets miserable, it's slow as molasses, and in case you haven't noticed, your Java applet needs to update whenever anyone in the world thinks of a new idea (seriously, check the lower right hand corner of your screen, an update is pending right now!)</p><p>So now that this entertaining history lesson is over, let's leverage a few of those tools that our ancestors left us in order to make our (or more importantly, an end-user's) life easier. </p><p>The first of these functions that I care to talk about is the \"naming of ranges\". Back in the day, Excel wouldn't let you open up two workbooks at the same time, making it difficult and annoying to lookup between worksheets (granted, I'd argue that best practice is that if you're planning on leaving those formulas on your worksheet, that you paste the source data into a new worksheet in your workbook or risk the breaking of your links). In order to make both inter and intra worksheet lookups and formulas easier, Excel offers the ability to \"name\" a particular range (or \"collection of cells\"...the concept of a range becomes much more important if you're coding VBA). For example, here I have a list of random names: </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-2.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image.png\" class=\"kg-image\"><figcaption>Totally Random Names</figcaption></figure><p>Now, if I were to write a formula that would involve these names (such as finding out where DMX is hiding) I would probably just use the location of the range (A:A, or $A$2:$A$8 if you're an absolute kinda person). HOWEVER, I can also bless this column with a name.   </p><p>To do this, highlight the row or column, click formulas up top, and then go to \"Define Name\"</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-1.png\" class=\"kg-image\"><figcaption>Naming a Range</figcaption></figure><p>The interface automatically takes the first cell and assumes that you want it to be the name of the range (NO SPACES!) but I like to keep things to a single word, so let's call this \"Names\", and hit OK. </p><p>What you've now done is transformed anything in column A on sheet 1 of this workbook into a monolith known as \"Names\". While this sounds unimpressive on it's own (what is a name?) it comes in handy in two ways. </p><p>1) If you're ever writing a formula that refers to column A, you can now just type \"Names\" instead, no matter what sheet the formula starts in, as long as it's in the workbook (which saves you a ton of time, and makes it so that you don't need to click back to sheet 1 to select column A or to type 'Sheet 1!'A:A which you'll almost certainly screw up (In fact, that's probably wrong). For example, let's create a bunch of extra sheets to complicate things, and then try and find DMX. </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-2.png\" class=\"kg-image\"><figcaption>The real question is...what IS he going to give you?</figcaption></figure><p>The utility there is pretty evident, however, there's an even more useful reason for naming a range, and it involves another one of Excel's functions...the active-X controls. Plopping these controls into a workbook allows someone who calls tech support when their computer crashes to read your data...and as such, represent an important albeit un-enjoyable part of the job. </p><p>To drop one of these into your worksheet, first go to developer (which, as a person who's made it this far, I assume you've enabled), then insert (the cool insert, not the one for pleebs), and then active-X control (I generally use the combo box...and no, I don't know what it's a combination of). Check it out: </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-2.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-3.png\" class=\"kg-image\"><figcaption>If your coworker doesn't have developer mode in their ribbon, Run</figcaption></figure><p>You'll then be asked to \"draw\" the box, generally you want it to be roughly the size of two or three cells. Once that's done, it'll give you a seemingly normal drop-down box, but now, let's click properties to see where the magic happens. </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-2.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-4.png\" class=\"kg-image\"><figcaption>Seen here: Magic</figcaption></figure><p>Now, if you're interested, you can look up what all this stuff means, but for most people, the only things that matter are: List Fill Range, and<em> maybe </em>linked cell.</p><p>The list fill range should be populated with what you want the drop-down to say, and because you already named a range...all you gotta do is type that in, and it'll gobble up anything you type into the range you defined. </p><p>The linked cell (above list fill range) is a cell that you want to export the data from this cell into so that it can be interacted with by regular Excel stuff (like formulae), the cool kids will put that underneath the combo box so you can't see it, but for the sake of clarity, I'll show you how this works (the linked cell is G2):</p><p>First X out of the properties window, then un-click \"design mode\"</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-5.png\" class=\"kg-image\"><figcaption>The list fill</figcaption></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://res-2.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-6.png\" class=\"kg-image\"><figcaption>The linked cell</figcaption></figure><p>As an added bonus, you can type in the first few letters of one of those names, and it'll auto-populate. </p><p>The coup-de-grace is that you can now name cell G2 and you've essentially created a dynamic variable that someone can choose that can be shoved into formulae...and I hope you can see how this might be useful if you were building say...a report that checks the values associated with a particular name or ID (and you want to gently nudge someone reading your data into selecting only the values you have data for). </p><p>Congrats, you're now a step closer to sharing the fruit of your knowledge with the populace...and by using these tools, you don't need to share that knowledge with the very same populace (they won't be paying attention anyways), and that my friend, is how the world goes round. </p><p>-Snactive-X</p>","url":"https://hackersandslackers.com/excel-named-ranges-and-the-active-xs-who-love-them/","uuid":"ae10b4ee-6e70-4086-8a65-1e06fc3555b0","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b6dae7c65239d07358de4d1"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736cc","title":"Lynx Roundup, August 10th","slug":"lynx-roundup-august-10th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx43@2x.jpg","excerpt":"Kinesis & Lambda!  ROC Curves!  And chainin' those blocks!","custom_excerpt":"Kinesis & Lambda!  ROC Curves!  And chainin' those blocks!","created_at_pretty":"10 August, 2018","published_at_pretty":"10 August, 2018","updated_at_pretty":"10 August, 2018","created_at":"2018-08-10T13:53:16.000-04:00","published_at":"2018-08-10T13:55:47.000-04:00","updated_at":"2018-08-10T13:55:47.000-04:00","meta_title":"Kinesis & Lambda!  ROC Curves!  And chainin' those blocks! | Hackers And Slackers","meta_description":"Kinesis & Lambda!  ROC Curves!  And chainin' those blocks!","og_description":"Kinesis & Lambda!  ROC Curves!  And chainin' those blocks!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx43@2x.jpg","og_title":"Lynx Roundup, August 10th","twitter_description":"Kinesis & Lambda!  ROC Curves!  And chainin' those blocks!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx43@2x.jpg","twitter_title":"Lynx Roundup, August 10th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://github.com/needmorecowbell/Hamburglar\n\n\n\nhttps://www.kdnuggets.com/2018/07/receiver-operating-characteristic-curves-demystified-python.html\n\n\n\nhttps://developers.soundcloud.com/blog/keeping-counts-in-sync\n\n\n\nhttps://medium.com/@mycoralhealth/why-blockchains-dont-suck-and-the-perils-of-distributed-databases-1a522cc7cfe1\n\n\n\nhttps://tech.trivago.com/2018/07/13/aws-kinesis-with-lambdas-lessons-learned/","html":"<p></p><p><a href=\"https://github.com/needmorecowbell/Hamburglar\">https://github.com/needmorecowbell/Hamburglar</a></p><p></p><p><a href=\"https://www.kdnuggets.com/2018/07/receiver-operating-characteristic-curves-demystified-python.html\">https://www.kdnuggets.com/2018/07/receiver-operating-characteristic-curves-demystified-python.html</a></p><p></p><p><a href=\"https://developers.soundcloud.com/blog/keeping-counts-in-sync\">https://developers.soundcloud.com/blog/keeping-counts-in-sync</a></p><p></p><p><a href=\"https://medium.com/@mycoralhealth/why-blockchains-dont-suck-and-the-perils-of-distributed-databases-1a522cc7cfe1\">https://medium.com/@mycoralhealth/why-blockchains-dont-suck-and-the-perils-of-distributed-databases-1a522cc7cfe1</a></p><p></p><p><a href=\"https://tech.trivago.com/2018/07/13/aws-kinesis-with-lambdas-lessons-learned/\">https://tech.trivago.com/2018/07/13/aws-kinesis-with-lambdas-lessons-learned/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-10th/","uuid":"e42165e7-15a4-4f6f-b6b4-940dc9123120","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b6dd10c65239d07358de4d7"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736ca","title":"PostgreSQL Cloud Database on Google Cloud","slug":"cloud-sql-postgres-on-gcp","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/postgres4.jpg","excerpt":"Deep Dive into Cloud SQL and its out-of-the-box API.","custom_excerpt":"Deep Dive into Cloud SQL and its out-of-the-box API.","created_at_pretty":"09 August, 2018","published_at_pretty":"10 August, 2018","updated_at_pretty":"28 February, 2019","created_at":"2018-08-09T12:49:05.000-04:00","published_at":"2018-08-10T05:52:00.000-04:00","updated_at":"2019-02-27T23:37:34.000-05:00","meta_title":"Cloud-Hosted Postgres on Google Cloud | Hackers and Slackers","meta_description":"A sexy relational database on the hottest cloud provider on the market is hard to resist. Especially when it comes with a REST API.","og_description":"A sexy relational database on the hottest cloud provider on the market is hard to resist. Especially when it comes with a REST API.\n\n#Postgres #GoogleCloud #Databases","og_image":"https://hackersandslackers.com/content/images/2019/02/postgres4.jpg","og_title":"Cloud SQL Postgres on GCP","twitter_description":"A sexy relational database on the hottest cloud provider on the market is hard to resist. Especially when it comes with a REST API.\n\n#Postgres #GoogleCloud #Databases\n\n","twitter_image":"https://hackersandslackers.com/content/images/2019/02/postgres4.jpg","twitter_title":"Cloud SQL Postgres on GCP","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"Google Cloud","slug":"googlecloud","description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/googleseries2.jpg","meta_description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","meta_title":"The Rise of Google Cloud | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Google Cloud","slug":"googlecloud","description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/googleseries2.jpg","meta_description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","meta_title":"The Rise of Google Cloud | Hackers and Slackers","visibility":"public"},{"name":"SQL","slug":"sql","description":"Configure relational databases, brush up on your query language syntax, or find third-party services to interact with your data.","feature_image":"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/sql-tag.jpg","meta_description":"Configure relational databases, brush up on your query language syntax, or find third-party services to interact with your data.","meta_title":"Working with SQL | Hackers and Slackers","visibility":"public"},{"name":"PostgreSQL","slug":"postgresql","description":"Our preferred relational database of choice which deserves more love. Learn the advantages that PostgreSQL provides over closed-source competitors.","feature_image":null,"meta_description":"Our preferred relational database of choice which deserves more love. Learn the advantages that PostgreSQL provides over closed-source competitors.","meta_title":"Working with PostgreSQL | Hackers and Slackers","visibility":"public"},{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"},{"name":"Architecture","slug":"architecture","description":"Advancements in software architecture, serverless and beyond. Examples include equivalents to Lambda functions, Docker containers, Google Cloud functions,  Kubernetes, Heroku, etc.","feature_image":null,"meta_description":"Advancements in software architecture, serverless and beyond. Examples include equivalents to cloud functions, Docker containers, Kubernetes, Heroku, etc.","meta_title":"Software Architecture | Hackers and Slackers","visibility":"public"},{"name":"#The Rise of Google Cloud","slug":"the-rise-of-google-cloud","description":"Build robust serverless architecture on Google Cloud Platform. Learn through tutorials, make comparisons, and hear opinions on GCP as a whole.","feature_image":"https://res-5.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/ADF7E324-9EAD-4F15-8670-AF205E6804EA.png","meta_description":"Build robust serverless architecture on Google Cloud Platform. Learn through tutorials, make comparisons, and hear opinions on GCP as a whole.","meta_title":"The Rise of Google Cloud","visibility":"internal"}],"plaintext":"Well folks, I have a confession to make. I've been maintaining an affair with\ntwo lovers. That's right; they're none other than PostgreSQL, and Google Cloud.\nWhile such polygamy may be shunned by the masses, I believe that somehow, some\nway, we can just make this ménage à trois work. What entices me about Cloud SQL\nis the existence of the Cloud SQL API\n[https://cloud.google.com/sql/docs/postgres/admin-api/]  , which generates\npredictable REST endpoints for presumably reading and writing to your database.\nPlease allow a moment of silence for the old workflow of API Gateways and Lambda\nfunctions. RIP.\n\nWe’ll get to APIs eventually, but for now we have one glaring obstacle: creating\nour DB, and connecting to it in a way vaguely resembles something secure*.\n\nNote: today may or may not be opposite day.Creating Our Cloud Database\nHit up the Cloud SQL [https://console.cloud.google.com/sql/]  section of your\nconsole to get this party started. Database creation on GCP is surprisingly\neasy.\n\nThat's pretty much it tbh.Databases Gone Wild: Postgres Exposed\nThere are plenty of correct ways to connect to your Postgres database correctly\nand securely. You can set up SSL for an IP\n[https://cloud.google.com/sql/docs/postgres/connect-admin-ip], connect using a\nproxy [https://cloud.google.com/sql/docs/postgres/connect-admin-proxy], or even\nvia internal cloud functions\n[https://cloud.google.com/sql/docs/postgres/connect-cloud-functions]. You may\nwant to consider doing one of those things. I'll be doing this a different way,\nbecause I'd rather get my useless data on a hackable public database than\nrewrite Google tutorials:\n\nDo as I say, not as I do.This is where you can feel free to go ahead and\npopulate data into your DB via whichever GUI you'd prefer. It'll be easier to\nsee which API calls work if there's actual data involved.\n\nPick whichever overpriced client suits you best!Enabling the API\nAs always with GCP, we need to explicitly activate the API for SQL; that way,\nthey can charge us money forever, long after we've forgotten this tutorial. We\ncan do this here\n[https://console.cloud.google.com/flows/enableapi?apiid=sqladmin]. Are you\nstarting to feel excited? I know I am; just think, all those API calls right\naround the corner, coming from a real SQL database. Wow. \n\nIn the overall process, we've made it here: the part where we run into OAuth2:\n\nRefresh tokens? Scopes? Uh oh.I'll admit it took me a good amount of time to\ndecrypt the information which failed to conveyed here. After clicking into every\nrelated link and failing at attempts to hit the API via Postman, the bad vibes\nstarted kicking in. What if this isn't the dream after all? To spare you the\nprocess, let me introduce you to a very useful GCP tool.\n\nGoogle API Explorer\nGoogle's API explorer is a GUI for playing with any API, connected to any of\nyour services. This is a cool way to preview what the exact scope of an API is\nbefore you sign up for it. Better yet, you can use placeholder User_IDs  and \nUser_Secrets  since this is basically just a sandbox.\n\nInteractive API learning tools beat reading documentation any day.After\nselecting an 'endpoint' and specifying some details like your project and\ndatabase instance, you can immediately see (theoretical) results of what the\nlive API can do. This is very useful, but I'm afraid this is where things get\ndark.\n\nHello Darkness My Old Friend\nYou may have noticed a lot of similar words or phrases popping up in these\nendpoints. Words such as \"admin\"  and \"list\", while lacking phrases such as \n\"show me my god damn data\". Google's Cloud SQL API  is NOT, in fact, an API to\ninteract with your data, but rather an admin API which enables you to do things\nprobably better suited for, you know, admin consoles.\n\nAs a big fan of GCP, this is but one of a number of growing pains I've\nexperienced with the platform so far. For instance, this entire blog along with\nits VPC has temporary deleted today, because apparently the phrases \"remove my\nproject from Firebase\"  and \"delete my project along with everything I love\" are\nsentimentally similar enough to leave that language vague and awkward.\n\nWhere Do We Go From Here?\nTo reiterate, the problem we were originally looking to solve was to find a\nservice which could (after what, 30 years?) make relational database reading and\nwriting trivial, especially in the case of apps which are simply themes without\na configurable backend, such as this blog.\n\nMongoDB Atlas  is an organizational mess which can't even describe their own\nproduct. Firebase  has yet to implement an import feature, so unless you feel\nlike writing loops to write to an experimental NoSQL database (I don't), we're\nstill kind of screwed. I know there are guys like Dreamfactory out there, but\nthese services are the sketchy ones who email you every day just for looking at\na trial. Also, anything related to Oracle or running on Oracle products (by\nchoice) sucks. There, I said it. Java developers will probably be too bust with\ngarbage collection and getting sued to argue with me anyway.\n\nAll that said, it feels like the \"Backend as a service\" thing is looming over\nthe horizon. There just doesn't seem to be anybody who's executed this\neffectively yet.\n\nUPDATE:  As it turns out, there is a service out there that accomplishes\neverything we hoped to achieve in Google cloud, and it is called Apisentris\n[https://apisentris.com/]. It's awesome, it's free, and the guy behind it is a\nchill dude.","html":"<p>Well folks, I have a confession to make. I've been maintaining an affair with two lovers. That's right; they're none other than PostgreSQL, and Google Cloud. While such polygamy may be shunned by the masses, I believe that somehow, some way, we can just make this ménage à trois work. What entices me about Cloud SQL is the existence of the <a href=\"https://cloud.google.com/sql/docs/postgres/admin-api/\">Cloud SQL API</a> , which generates predictable REST endpoints for presumably reading and writing to your database. Please allow a moment of silence for the old workflow of API Gateways and Lambda functions. RIP.</p><p>We’ll get to APIs eventually, but for now we have one glaring obstacle: creating our DB, and connecting to it in a way vaguely resembles something secure*.</p><span style=\"color: #669ab5; font-style: italic; font-size: 15px; float: right;\">Note: today may or may not be opposite day.</span><h2 id=\"creating-our-cloud-database\">Creating Our Cloud Database</h2><p>Hit up the <a href=\"https://console.cloud.google.com/sql/\">Cloud SQL</a> section of your console to get this party started. Database creation on GCP is surprisingly easy.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-5.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/setuppostgres.png\" class=\"kg-image\"><figcaption>That's pretty much it tbh.</figcaption></figure><h2 id=\"databases-gone-wild-postgres-exposed\">Databases Gone Wild: Postgres Exposed  </h2><p>There are plenty of <em>correct </em>ways to connect to your Postgres database correctly and securely. You can <a href=\"https://cloud.google.com/sql/docs/postgres/connect-admin-ip\">set up SSL for an IP</a>, connect <a href=\"https://cloud.google.com/sql/docs/postgres/connect-admin-proxy\">using a proxy</a>, or even via internal <a href=\"https://cloud.google.com/sql/docs/postgres/connect-cloud-functions\">cloud functions</a>. You may want to consider doing one of those things. I'll be doing this a different way, because I'd rather get my useless data on a hackable public database than rewrite Google tutorials:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/public.png\" class=\"kg-image\"><figcaption>Do as I say, not as I do.</figcaption></figure><p>This is where you can feel free to go ahead and populate data into your DB via whichever GUI you'd prefer. It'll be easier to see which API calls work if there's actual data involved.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/Screen-Shot-2018-08-10-at-4.15.22-AM.png\" class=\"kg-image\"><figcaption>Pick whichever overpriced client suits you best!</figcaption></figure><h2 id=\"enabling-the-api\">Enabling the API</h2><p>As always with GCP, we need to explicitly activate the API for SQL; that way, they can charge us money forever, long after we've forgotten this tutorial. We can do this <a href=\"https://console.cloud.google.com/flows/enableapi?apiid=sqladmin\">here</a>. Are you starting to feel excited? I know I am; just think, all those API calls right around the corner, coming from a real SQL database. Wow. </p><p>In the overall process, we've made it <em>here</em>: the part where we run into OAuth2:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-2.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/Screen-Shot-2018-08-10-at-4.21.55-AM.png\" class=\"kg-image\"><figcaption>Refresh tokens? Scopes? Uh oh.</figcaption></figure><p>I'll admit it took me a good amount of time to decrypt the information which failed to conveyed here. After clicking into every related link and failing at attempts to hit the API via Postman, the bad vibes started kicking in. What if this isn't the dream after all? To spare you the process, let me introduce you to a very useful GCP tool.</p><h2 id=\"google-api-explorer\">Google API Explorer</h2><p>Google's API explorer is a GUI for playing with any API, connected to any of your services. This is a cool way to preview what the exact scope of an API is before you sign up for it. Better yet, you can use placeholder <em>User_IDs</em> and <em>User_Secrets</em> since this is basically just a sandbox.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/sandbox.gif\" class=\"kg-image\"><figcaption>Interactive API learning tools beat reading documentation any day.</figcaption></figure><p>After selecting an 'endpoint' and specifying some details like your project and database instance, you can immediately see (theoretical) results of what the live API can do. This is very useful, but I'm afraid this is where things get dark.</p><h3 id=\"hello-darkness-my-old-friend\">Hello Darkness My Old Friend</h3><p>You may have noticed a lot of similar words or phrases popping up in these endpoints. Words such as <em>\"admin\"</em> and \"<em>list\"</em>, while lacking phrases such as <em>\"show me my god damn data\". </em>Google's <strong>Cloud SQL API</strong> is NOT, in fact, an API to interact with your data, but rather an <em>admin </em>API which enables you to do things probably better suited for, you know, admin consoles.</p><p>As a big fan of GCP, this is but one of a number of growing pains I've experienced with the platform so far. For instance, this entire blog along with its VPC has temporary deleted today, because apparently the phrases <em>\"remove my project from Firebase\"</em> and <em>\"delete my project along with everything I love\" </em>are sentimentally similar enough to leave that language vague and awkward.</p><h2 id=\"where-do-we-go-from-here\">Where Do We Go From Here?</h2><p>To reiterate, the problem we were originally looking to solve was to find a service which could (after what, 30 years?) make relational database reading and writing trivial, especially in the case of apps which are simply themes without a configurable backend, such as this blog.</p><p><em>MongoDB Atlas</em> is an organizational mess which can't even describe their own product. <em>Firebase</em> has yet to implement an import feature, so unless you feel like writing loops to write to an experimental NoSQL database (I don't), we're still kind of screwed. I know there are guys like <em>Dreamfactory </em>out there, but these services are the sketchy ones who email you every day just for looking at a trial. Also, anything related to Oracle or running on Oracle products (by choice) sucks. There, I said it. Java developers will probably be too bust with garbage collection and getting sued to argue with me anyway.</p><p>All that said, it feels like the \"Backend as a service\" thing is looming over the horizon. There just doesn't seem to be anybody who's executed this effectively yet.</p><p><strong>UPDATE:</strong> As it turns out, there is a service out there that accomplishes everything we hoped to achieve in Google cloud, and it is called <a href=\"https://apisentris.com/\">Apisentris</a>. It's awesome, it's free, and the guy behind it is a chill dude.</p>","url":"https://hackersandslackers.com/cloud-sql-postgres-on-gcp/","uuid":"76daacf1-55b4-4ede-b21d-29fd727e1d50","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b6c70819dcd9d3270b58635"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736c1","title":"Lynx Roundup, August 9th","slug":"lynx-roundup-august-9th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/lynx41-1@2x.jpg","excerpt":"Python Exception Handling!  AIs saving animals from medical testing!  Control Theory with Python & Plotly!","custom_excerpt":"Python Exception Handling!  AIs saving animals from medical testing!  Control Theory with Python & Plotly!","created_at_pretty":"21 July, 2018","published_at_pretty":"09 August, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-07-20T22:48:45.000-04:00","published_at":"2018-08-09T07:00:00.000-04:00","updated_at":"2019-02-14T05:25:00.000-05:00","meta_title":"Python Exception Handling!  AIs saving animals from medical testing!  Control Theory with Python & Plotly! | Hackers And Slackers","meta_description":"Python Exception Handling!  AIs saving animals from medical testing!  Control Theory with Python & Plotly!","og_description":"Python Exception Handling!  AIs saving animals from medical testing!  Control Theory with Python & Plotly!","og_image":"https://hackersandslackers.com/content/images/2019/02/lynx41-1@2x.jpg","og_title":"Lynx Roundup, August 9th","twitter_description":"Python Exception Handling!  AIs saving animals from medical testing!  Control Theory with Python & Plotly!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/lynx41-1@2x.jpg","twitter_title":"Lynx Roundup, August 9th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.pyimagesearch.com/2018/07/16/opencv-saliency-detection/\n\n\n\nhttps://www.pythonforthelab.com/blog/learning-not-to-handle-exceptions/\n\n\n\nhttps://plot.ly/ipython-notebooks/bicycle-control-design/\n\n\n\nhttps://qz.com/1326841/ai-is-getting-closer-to-replacing-animal-testing/\n\n\n\nhttps://medium.com/tensorflow/training-and-serving-a-realtime-mobile-object-detector-in-30-minutes-with-cloud-tpus-b78971cf1193\n\n\n\n\"Infrastructure as code\" should mean I get to write it from Jupyter and\nexperiment https://github.com/ansible/ansible-jupyter-kernel","html":"<p></p><p><a href=\"https://www.pyimagesearch.com/2018/07/16/opencv-saliency-detection/\">https://www.pyimagesearch.com/2018/07/16/opencv-saliency-detection/</a></p><p></p><p><a href=\"https://www.pythonforthelab.com/blog/learning-not-to-handle-exceptions/\">https://www.pythonforthelab.com/blog/learning-not-to-handle-exceptions/</a></p><p></p><p><a href=\"https://plot.ly/ipython-notebooks/bicycle-control-design/\">https://plot.ly/ipython-notebooks/bicycle-control-design/</a></p><p></p><p><a href=\"https://qz.com/1326841/ai-is-getting-closer-to-replacing-animal-testing/\">https://qz.com/1326841/ai-is-getting-closer-to-replacing-animal-testing/</a></p><p></p><p><a href=\"https://medium.com/tensorflow/training-and-serving-a-realtime-mobile-object-detector-in-30-minutes-with-cloud-tpus-b78971cf1193\">https://medium.com/tensorflow/training-and-serving-a-realtime-mobile-object-detector-in-30-minutes-with-cloud-tpus-b78971cf1193</a></p><p></p><p>\"Infrastructure as code\" should mean I get to write it from Jupyter and experiment <a href=\"https://github.com/ansible/ansible-jupyter-kernel\">https://github.com/ansible/ansible-jupyter-kernel</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-9th/","uuid":"fc1ac183-9356-49ea-a0e9-dc355c524880","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b529f0d529141018f9dad27"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736c0","title":"Lynx Roundup, August 8th","slug":"lynx-roundup-august-8th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx39@2x.jpg","excerpt":"Sorting and ML!  Remote sensing from NASA!  Applying good experiment design principles to ML!","custom_excerpt":"Sorting and ML!  Remote sensing from NASA!  Applying good experiment design principles to ML!","created_at_pretty":"21 July, 2018","published_at_pretty":"08 August, 2018","updated_at_pretty":"08 August, 2018","created_at":"2018-07-20T22:46:21.000-04:00","published_at":"2018-08-08T07:00:00.000-04:00","updated_at":"2018-08-08T07:00:00.000-04:00","meta_title":"Sorting and ML!  Remote sensing from NASA!  Applying good experiment design principles to ML! | Hackers And Slackers","meta_description":"Sorting and ML!  Remote sensing from NASA!  Applying good experiment design principles to ML!","og_description":"Sorting and ML!  Remote sensing from NASA!  Applying good experiment design principles to ML!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx39@2x.jpg","og_title":"Lynx Roundup, August 8th","twitter_description":"Sorting and ML!  Remote sensing from NASA!  Applying good experiment design principles to ML!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx39@2x.jpg","twitter_title":"Lynx Roundup, August 8th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://towardsdatascience.com/how-the-good-old-sorting-algorithm-helps-a-great-machine-learning-technique-9e744020254b\n\n\n\nhttps://software.nasa.gov/remotesensing/\n[https://software.nasa.gov/remotesensing/?utm_source=Newsletter&utm_medium=Email&utm_campaign=Remote%20Sensing%20Toolkit%20Launch&utm_content=RST%20Homepage]\n\n\n\nhttps://medium.com/rtl-tech/my-takeaways-from-netflixs-personalization-workshop-2018-f564a19437b6\n\n\n\nhttps://bloomberg.github.io/foml/\n\n\n\nhttps://machinelearningmastery.com/confounding-variables-in-machine-learning/\n[https://machinelearningmastery.com/confounding-variables-in-machine-learning/?__s=bdhbwhyixbffzpidq1p6]\n\n\n\nhttps://machinelearningmastery.com/difference-between-a-batch-and-an-epoch/\n[https://machinelearningmastery.com/difference-between-a-batch-and-an-epoch/?__s=bdhbwhyixbffzpidq1p6]","html":"<p></p><p><a href=\"https://towardsdatascience.com/how-the-good-old-sorting-algorithm-helps-a-great-machine-learning-technique-9e744020254b\">https://towardsdatascience.com/how-the-good-old-sorting-algorithm-helps-a-great-machine-learning-technique-9e744020254b</a></p><p></p><p><a href=\"https://software.nasa.gov/remotesensing/?utm_source=Newsletter&amp;utm_medium=Email&amp;utm_campaign=Remote%20Sensing%20Toolkit%20Launch&amp;utm_content=RST%20Homepage\">https://software.nasa.gov/remotesensing/</a></p><p></p><p><a href=\"https://medium.com/rtl-tech/my-takeaways-from-netflixs-personalization-workshop-2018-f564a19437b6\">https://medium.com/rtl-tech/my-takeaways-from-netflixs-personalization-workshop-2018-f564a19437b6</a></p><p></p><p><a href=\"https://bloomberg.github.io/foml/?utm_campaign=Artificial%2BIntelligence%2BWeekly&amp;utm_medium=email&amp;utm_source=Artificial_Intelligence_Weekly_81#lectures\">https://bloomberg.github.io/foml/</a></p><p></p><p><a href=\"https://machinelearningmastery.com/confounding-variables-in-machine-learning/?__s=bdhbwhyixbffzpidq1p6\">https://machinelearningmastery.com/confounding-variables-in-machine-learning/</a></p><p></p><p><a href=\"https://machinelearningmastery.com/difference-between-a-batch-and-an-epoch/?__s=bdhbwhyixbffzpidq1p6\">https://machinelearningmastery.com/difference-between-a-batch-and-an-epoch/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-8th/","uuid":"52d5434a-2742-434b-81f6-9986e10ad827","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b529e7d529141018f9dad24"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736bf","title":"Lynx Roundup, August 7th","slug":"lynx-roundup-august-7th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx35@2x.jpg","excerpt":"Tool for visualizing ML datasets!  Storing DB queries!  When to use CLI vs a UI!","custom_excerpt":"Tool for visualizing ML datasets!  Storing DB queries!  When to use CLI vs a UI!","created_at_pretty":"21 July, 2018","published_at_pretty":"07 August, 2018","updated_at_pretty":"07 August, 2018","created_at":"2018-07-20T22:43:13.000-04:00","published_at":"2018-08-07T07:00:00.000-04:00","updated_at":"2018-08-07T07:00:00.000-04:00","meta_title":"Tool for visualizing ML datasets!  Storing DB queries!  When to use CLI vs a UI! | Hackers And Slackers","meta_description":"Tool for visualizing ML datasets!  Storing DB queries!  When to use CLI vs a UI!","og_description":"Tool for visualizing ML datasets!  Storing DB queries!  When to use CLI vs a UI!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx35@2x.jpg","og_title":"Lynx Roundup, August 7th","twitter_description":"Tool for visualizing ML datasets!  Storing DB queries!  When to use CLI vs a UI!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx35@2x.jpg","twitter_title":"Lynx Roundup, August 7th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://medium.com/tensorflow/autograph-converts-python-into-tensorflow-graphs-b2a871f87ec7\n\n\n\n\"You are your Metadata: Identification and Obfuscation of Social Media Users\nusing Metadata Information\" https://www.ucl.ac.uk/~ucfamus/papers/icwsm18.pdf\n[https://www.ucl.ac.uk/~ucfamus/papers/icwsm18.pdf?utm_medium=email&utm_source=topic+optin&utm_campaign=awareness&utm_content=20180718+data+nl&mkt_tok=eyJpIjoiTkdKak16VTJORGt4WmpReiIsInQiOiJcL2VKNnZva3QzYVwvdE8zMHdkTUxvNnBYYjFSeXNaaVFxVTJQZ0owNmdMSnVoTytIK3lGNndNOHo5bVM4Q2VERWJXaGN5N1A4aTRnWFhFSExhUDdvU0J5d0psRTEzN0tkM3VKSVJ4dVdvOXMzRW1qdjZuek9ydXZ4Uk9oWXE1N0JtIn0%3D]\n\n\n\nhttps://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/\n[https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/?utm_medium=email&utm_source=topic+optin&utm_campaign=awareness&utm_content=20180718+data+nl&mkt_tok=eyJpIjoiTkdKak16VTJORGt4WmpReiIsInQiOiJcL2VKNnZva3QzYVwvdE8zMHdkTUxvNnBYYjFSeXNaaVFxVTJQZ0owNmdMSnVoTytIK3lGNndNOHo5bVM4Q2VERWJXaGN5N1A4aTRnWFhFSExhUDdvU0J5d0psRTEzN0tkM3VKSVJ4dVdvOXMzRW1qdjZuek9ydXZ4Uk9oWXE1N0JtIn0%3D]\n\n\n\nhttps://www.stitchdata.com/blog/a-primer-on-derived-tables-and-common-table-expressions/\n[https://www.stitchdata.com/blog/a-primer-on-derived-tables-and-common-table-expressions/?utm_medium=email&utm_source=topic+optin&utm_campaign=awareness&utm_content=20180718+data+nl&mkt_tok=eyJpIjoiTkdKak16VTJORGt4WmpReiIsInQiOiJcL2VKNnZva3QzYVwvdE8zMHdkTUxvNnBYYjFSeXNaaVFxVTJQZ0owNmdMSnVoTytIK3lGNndNOHo5bVM4Q2VERWJXaGN5N1A4aTRnWFhFSExhUDdvU0J5d0psRTEzN0tkM3VKSVJ4dVdvOXMzRW1qdjZuek9ydXZ4Uk9oWXE1N0JtIn0%3D]\n\n\n\nhttps://pair-code.github.io/facets/\n\n\n\nhttps://medium.com/design-ibm/real-developers-dont-use-uis-daea7404fb4e","html":"<p></p><p><a href=\"https://medium.com/tensorflow/autograph-converts-python-into-tensorflow-graphs-b2a871f87ec7\">https://medium.com/tensorflow/autograph-converts-python-into-tensorflow-graphs-b2a871f87ec7</a></p><p></p><p>\"You are your Metadata: Identification and Obfuscation of Social Media Users using Metadata Information\" <a href=\"https://www.ucl.ac.uk/~ucfamus/papers/icwsm18.pdf?utm_medium=email&amp;utm_source=topic+optin&amp;utm_campaign=awareness&amp;utm_content=20180718+data+nl&amp;mkt_tok=eyJpIjoiTkdKak16VTJORGt4WmpReiIsInQiOiJcL2VKNnZva3QzYVwvdE8zMHdkTUxvNnBYYjFSeXNaaVFxVTJQZ0owNmdMSnVoTytIK3lGNndNOHo5bVM4Q2VERWJXaGN5N1A4aTRnWFhFSExhUDdvU0J5d0psRTEzN0tkM3VKSVJ4dVdvOXMzRW1qdjZuek9ydXZ4Uk9oWXE1N0JtIn0%3D\">https://www.ucl.ac.uk/~ucfamus/papers/icwsm18.pdf</a></p><p></p><p><a href=\"https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/?utm_medium=email&amp;utm_source=topic+optin&amp;utm_campaign=awareness&amp;utm_content=20180718+data+nl&amp;mkt_tok=eyJpIjoiTkdKak16VTJORGt4WmpReiIsInQiOiJcL2VKNnZva3QzYVwvdE8zMHdkTUxvNnBYYjFSeXNaaVFxVTJQZ0owNmdMSnVoTytIK3lGNndNOHo5bVM4Q2VERWJXaGN5N1A4aTRnWFhFSExhUDdvU0J5d0psRTEzN0tkM3VKSVJ4dVdvOXMzRW1qdjZuek9ydXZ4Uk9oWXE1N0JtIn0%3D\">https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/</a></p><p></p><p><a href=\"https://www.stitchdata.com/blog/a-primer-on-derived-tables-and-common-table-expressions/?utm_medium=email&amp;utm_source=topic+optin&amp;utm_campaign=awareness&amp;utm_content=20180718+data+nl&amp;mkt_tok=eyJpIjoiTkdKak16VTJORGt4WmpReiIsInQiOiJcL2VKNnZva3QzYVwvdE8zMHdkTUxvNnBYYjFSeXNaaVFxVTJQZ0owNmdMSnVoTytIK3lGNndNOHo5bVM4Q2VERWJXaGN5N1A4aTRnWFhFSExhUDdvU0J5d0psRTEzN0tkM3VKSVJ4dVdvOXMzRW1qdjZuek9ydXZ4Uk9oWXE1N0JtIn0%3D\">https://www.stitchdata.com/blog/a-primer-on-derived-tables-and-common-table-expressions/</a></p><p></p><p><a href=\"https://pair-code.github.io/facets/\">https://pair-code.github.io/facets/</a></p><p></p><p><a href=\"https://medium.com/design-ibm/real-developers-dont-use-uis-daea7404fb4e\">https://medium.com/design-ibm/real-developers-dont-use-uis-daea7404fb4e</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-7th/","uuid":"ae6f44b0-a7aa-4ee1-b4d2-0ae518f5d091","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b529dc1529141018f9dad21"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736c8","title":"Lazy Pandas and Dask","slug":"cutting-a-file-down-to-size-with-dask","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/08/dask@2x.jpg","excerpt":"Increase the performance of Pandas with Dask.","custom_excerpt":"Increase the performance of Pandas with Dask.","created_at_pretty":"05 August, 2018","published_at_pretty":"06 August, 2018","updated_at_pretty":"19 February, 2019","created_at":"2018-08-05T17:09:51.000-04:00","published_at":"2018-08-06T07:30:00.000-04:00","updated_at":"2019-02-19T05:19:53.000-05:00","meta_title":"Picking Low-Hanging Fruit With Dask | Hackers And Slackers","meta_description":"Dask is library that seamlessly allows you to parallelize Pandas. Pandas by itself is pretty well-optimized, but it's designed to only work on one core. ","og_description":"Lazy Pandas and Dask","og_image":"https://hackersandslackers.com/content/images/2018/08/dask@2x.jpg","og_title":"Lazy Pandas and Dask","twitter_description":"Picking Low-Hanging Fruit With Dask","twitter_image":"https://hackersandslackers.com/content/images/2018/08/dask@2x.jpg","twitter_title":"Lazy Pandas and Dask","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Pandas","slug":"pandas","description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","feature_image":"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/pandasmerge.jpg","meta_description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","meta_title":"Pythons and Pandas | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Pandas","slug":"pandas","description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","feature_image":"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/pandasmerge.jpg","meta_description":"Analyze data with the Pandas data analysis library for Python. Start from the basics or see real-life examples of pros using Pandas to solve problems.","meta_title":"Pythons and Pandas | Hackers and Slackers","visibility":"public"},{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},{"name":"#Data Analysis with Pandas","slug":"data-analysis-pandas","description":"Analyze data with Python's Pandas. Start from the basics or see real-life examples of using Pandas to solve problems.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/pandasseries-1.jpg","meta_description":"Analyze data with Python's Pandas. Start from the basics or see real-life examples of using Pandas to solve problems.","meta_title":"Data Analysis with Pandas","visibility":"internal"}],"plaintext":"Ah, laziness.  You love it, I love it, everyone agrees it's just better.\n\nFlesh-and-blood are famously lazy.  Pandas the package, however, uses Eager\nEvaluation.  What's Eager Evaluation, you ask?  Is Pandas really judgey, hanging\nout on the street corner and being fierce to the style choices of people walking\nby?  Well, yes, but that's not the most relevant sense in which I mean it here.\n\nEager evaluation means that once you call pd.read_csv(), Pandas immediately\njumps to read the whole CSV into memory.\n\n\"Wait!\" I hear you ask.\"Isn't that what we want?  Why would I call the function\nif I didn't want it to happen?\"\n\nEventually, yes that is what you want.  But sometimes you want some time in\nbetween when you give the command and when the computer hops to it.  That's why\nit's Lazy and not Inactive - it will get to the job at some point, it'll just\nprocrastinate a bit.\n\nFor example, last week I was tasked with searching through the output of a\ngovernment API.  It had records since the 90s, and was about 300MB.  Now, this\nisn't actually outside the realm of what Pandas can handle - it's quite\noptimized, and as long as the file can fit into memory, Pandas can mess with.\n However, it won't necessarily be fast.  Furthermore, my laptop is old and I\ndidn't feel like offloading what I was doing to a remote machine.\n\nFurthermore, I knew I actually only needed a subset of the file.  Here's where\nLaziness comes in handy.  With Eager evaluation, Pandas would have to load the\nwhole thing into memory, then filter based on my criteria.\n\nEnter Dask:  Dask is a very cool little library that seamlessly allows you to\nparallelize Pandas. Pandas by itself is pretty well-optimized, but it's designed\nto only work on one core.  Dask, on the other hand, lets you split the work\nbetween different cores - both on a single machine, or on a distributed system.\n It doesn't implement every single thing you can do with Pandas, though, so only\nuse it when you have to.\n\n  I probably should have titled this post \"Parallel Pandas\", but hey, too late\nnow - plus \"Lazy Pandas\" more easily lends itself to a nice visual metaphor.\n Anyway, Laziness is  part of the process.  Because Dask is lazy by default\n(much like your humble narrator), we can define our fileout loading it, like so:\n\nimport dask.dataframe as dd\n\ndf = dd.read_csv(\"giantThing.csv\")\n\n\nPandas was taking a long time to parse the file.  What's more is that this file\nhad a few quirks - I'd figured out that it needed a special text encoding, and I\nwasn't sure if there was other weirdness going on.  Was my computer just taking\na long time to nom the file, or was I going to wait there for a few minutes to\nfind an error message?  It's a catch-22 - I needed to figure out how to cut the\nfile down to size, but in order to do that I would have needed to be able to\nload it into memory.  Dask to the rescue!\n\nThis file wasn't terribly well-documented - I had an inkling as to what column\nwould tell me which rows I wanted, but I wasn't sure.  So, first thing I did was\ncheck out the first few rows.  Remember, in order to see these first 5 rows in\nPandas, I'd have to load the whole thing into memory (which might or might not\neven work!).\n\ndf.head()\n\nWith that, I was able to do a simple spot-check and see if there were any weird\ncolumns that might get in the way of parsing.  Furthermore, I confirmed that the\nID columns I was looking at contained something vaguely like what I was looking\nfor.  Even MORE interestingly, I found that it was formatted slightly\nirregularly.  Even more use for laziness!  Let's load just that one column into\nmemory (you could do this with a loop, sure - but selecting a single column is a\nlot clumsier)\n\ndf[\"ORG_NAME\"].compute()\n\nNote the .compute()  method at the end.  That's necessary because of the Lazy\nEvaluation - just calling a column name doesn't make Dask think you necessarily\nwant the thing now.  I'm not sure why I didn't have to call it with df.head(),\nthough (that's the Hackers & Slackers Codeblogging vérité style!).\n\nSo, now that I've seen the formatting, I found out that I'm going to have to\nfilter it with a call of a str.contains()  method instead of an exact value.\n Let's poke around a teensy bit more.\n\norgDF = df[\"ORG_NAME\"]\norgFiltered = corp[corp.str.contains(\"baseName\", na=False)].compute().shape\n\n\nTurns out it was only about 800 rows!So, let's filter that and make a regular\nPandas Dataframe (and probably a new CSV for later!)\n\ndf = dd.read_csv(\"giantThing.csv\")\n\norgFiltered = df[df[\"ORG_NAME\"].str.contains(\"baseName\", na=False)].compute()\n\ndf2 = pd.DataFrame(orgFiltered)\ndf2.to_csv(\"filteredThing.csv\")\n\n\nNote that I actually could have done this with base Pandas, through use of the\niterator flag.  However, I didn't realize that it's only wind up being so few\nrows.  It also would have been slower - and the speed difference makes a huge\ndifference in terms of how fluidly you can explore.\n\nFor instance, the na=False  flag was something I discovered would be needed\nbecause of a quirk in the file - again, this sort of thing becomes a lot easier\ndo diagnose when you can iterate quickly, and you know you're not going to just\ntimeout from running out of memory.\n\nFor comparison's sake, here's the code for filtering on the fly and loading into\nPandas:\n\niter_csv = pd.read_csv(\"giantThing.csv\",\n                iterator=True, \n                       chunksize=1000)\n\ndf = pd.concat([chunk[chunk[\"ORG_NAME\"].str.contains(\"baseName\", na=False)] \n                for chunk in iter_csv])\n\n\nOn my computer, that took a little over 3 minutes.  While the Dask code took\nabout a minute.","html":"<p>Ah, laziness.  You love it, I love it, everyone agrees it's just better.</p><p>Flesh-and-blood are famously lazy.  Pandas the package, however, uses Eager Evaluation.  What's Eager Evaluation, you ask?  Is Pandas really judgey, hanging out on the street corner and being fierce to the style choices of people walking by?  Well, yes, but that's not the most relevant sense in which I mean it here.  </p><p>Eager evaluation means that once you call <code>pd.read_csv()</code>, Pandas immediately jumps to read the whole CSV into memory.</p><p><strong>\"Wait!\" </strong>I hear you ask.  <strong>\"Isn't that what we want?  Why would I call the function if I didn't want it to happen?\"</strong></p><p><em>Eventually</em>, yes that is what you want.  But sometimes you want some time in between when you give the command and when the computer hops to it.  That's why it's Lazy and not Inactive - it will get to the job at some point, it'll just procrastinate a bit.</p><p>For example, last week I was tasked with searching through the output of a government API.  It had records since the 90s, and was about 300MB.  Now, this isn't actually outside the realm of what Pandas can handle - it's quite optimized, and as long as the file can fit into memory, Pandas can mess with.  However, it won't necessarily be fast.  Furthermore, my laptop is old and I didn't feel like offloading what I was doing to a remote machine.  </p><p>Furthermore, I knew I actually only needed a subset of the file.  Here's where Laziness comes in handy.  With Eager evaluation, Pandas would have to load the whole thing into memory, then filter based on my criteria.</p><p>Enter Dask:  Dask is a very cool little library that seamlessly allows you to parallelize Pandas. Pandas by itself is pretty well-optimized, but it's designed to only work on one core.  Dask, on the other hand, lets you split the work between different cores - both on a single machine, or on a distributed system.  It doesn't implement every single thing you can do with Pandas, though, so only use it when you have to.</p><p> I probably should have titled this post \"Parallel Pandas\", but hey, too late now - plus \"Lazy Pandas\" more easily lends itself to a nice visual metaphor.  Anyway, Laziness <em>is</em> part of the process.  Because Dask is lazy by default (much like your humble narrator), we can define our fileout loading it, like so:</p><pre><code class=\"language-python\">import dask.dataframe as dd\n\ndf = dd.read_csv(&quot;giantThing.csv&quot;)\n</code></pre>\n<p>Pandas was taking a long time to parse the file.  What's more is that this file had a few quirks - I'd figured out that it needed a special text encoding, and I wasn't sure if there was other weirdness going on.  Was my computer just taking a long time to nom the file, or was I going to wait there for a few minutes to find an error message?  It's a catch-22 - I needed to figure out how to cut the file down to size, but in order to do that I would have needed to be able to load it into memory.  Dask to the rescue!</p><p>This file wasn't terribly well-documented - I had an inkling as to what column would tell me which rows I wanted, but I wasn't sure.  So, first thing I did was check out the first few rows.  Remember, in order to see these first 5 rows in Pandas, I'd have to load the whole thing into memory (which might or might not even work!).</p><p><code>df.head()</code></p><p>With that, I was able to do a simple spot-check and see if there were any weird columns that might get in the way of parsing.  Furthermore, I confirmed that the ID columns I was looking at contained something vaguely like what I was looking for.  Even MORE interestingly, I found that it was formatted slightly irregularly.  Even more use for laziness!  Let's load just that one column into memory (you could do this with a loop, sure - but selecting a single column is a lot clumsier)</p><p><code>df[\"ORG_NAME\"].compute()</code></p><p>Note the <code>.compute()</code> method at the end.  That's necessary because of the Lazy Evaluation - just calling a column name doesn't make Dask think you necessarily want the thing now.  I'm not sure why I didn't have to call it with <code>df.head()</code>, though (that's the Hackers &amp; Slackers Codeblogging vérité style!).</p><p>So, now that I've seen the formatting, I found out that I'm going to have to filter it with a call of a <code>str.contains()</code> method instead of an exact value.  Let's poke around a teensy bit more.</p><pre><code class=\"language-python\">orgDF = df[&quot;ORG_NAME&quot;]\norgFiltered = corp[corp.str.contains(&quot;baseName&quot;, na=False)].compute().shape\n</code></pre>\n<blockquote>Turns out it was only about 800 rows!</blockquote><p>So, let's filter that and make a regular Pandas Dataframe (and probably a new CSV for later!)</p><pre><code class=\"language-python\">df = dd.read_csv(&quot;giantThing.csv&quot;)\n\norgFiltered = df[df[&quot;ORG_NAME&quot;].str.contains(&quot;baseName&quot;, na=False)].compute()\n\ndf2 = pd.DataFrame(orgFiltered)\ndf2.to_csv(&quot;filteredThing.csv&quot;)\n</code></pre>\n<p>Note that I actually could have done this with base Pandas, through use of the iterator flag.  However, I didn't realize that it's only wind up being so few rows.  It also would have been slower - and the speed difference makes a huge difference in terms of how fluidly you can explore.</p><p>For instance, the <code>na=False</code> flag was something I discovered would be needed because of a quirk in the file - again, this sort of thing becomes a lot easier do diagnose when you can iterate quickly, and you know you're not going to just timeout from running out of memory.</p><p>For comparison's sake, here's the code for filtering on the fly and loading into Pandas:</p><pre><code class=\"language-python\">iter_csv = pd.read_csv(&quot;giantThing.csv&quot;,\n                iterator=True, \n                       chunksize=1000)\n\ndf = pd.concat([chunk[chunk[&quot;ORG_NAME&quot;].str.contains(&quot;baseName&quot;, na=False)] \n                for chunk in iter_csv])\n</code></pre>\n<p>On my computer, that took a little over 3 minutes.  While the Dask code took about a minute.</p>","url":"https://hackersandslackers.com/cutting-a-file-down-to-size-with-dask/","uuid":"d4270325-d03f-46fd-a0ae-1b3cbfe1b527","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b67679f17f6083e60a44c5d"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736be","title":"Lynx Roundup, August 6th","slug":"lynx-roundup-august-6th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx32@2x.jpg","excerpt":"Data viz tips!  Data ethics tips!  And a horrifying example of why we need data ethics!","custom_excerpt":"Data viz tips!  Data ethics tips!  And a horrifying example of why we need data ethics!","created_at_pretty":"21 July, 2018","published_at_pretty":"06 August, 2018","updated_at_pretty":"06 August, 2018","created_at":"2018-07-20T22:41:16.000-04:00","published_at":"2018-08-06T07:00:00.000-04:00","updated_at":"2018-08-06T07:00:00.000-04:00","meta_title":"Data viz tips!  Data ethics tips!  And a horrifying example of why we need data ethics! | Hackers And Slackers","meta_description":"Data viz tips!  Data ethics tips!  And a horrifying example of why we need data ethics!","og_description":"Data viz tips!  Data ethics tips!  And a horrifying example of why we need data ethics!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx32@2x.jpg","og_title":"Lynx Roundup, August 6th","twitter_description":"Data viz tips!  Data ethics tips!  And a horrifying example of why we need data ethics!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx32@2x.jpg","twitter_title":"Lynx Roundup, August 6th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.bloomberg.com/news/articles/2018-07-16/cfa-exam-adds-crypto-blockchain-topics-as-wall-street-dives-in\n\n\n\nhttps://www.data-to-viz.com/caveats.html\n[https://www.data-to-viz.com/caveats.html?utm_campaign=Data_Elixir&utm_medium=email&utm_source=Data_Elixir_191]\n\n\n\nhttps://medium.com/tensorflow/seedbank-discover-machine-learning-examples-2ff894542b57\n\n\n\nhttps://www.oreilly.com/ideas/of-oaths-and-checklists\n[https://www.oreilly.com/ideas/of-oaths-and-checklists?utm_campaign=Data_Elixir&utm_medium=email&utm_source=Data_Elixir_191]\n\n\n\nhttps://www.propublica.org/article/health-insurers-are-vacuuming-up-details-about-you-and-it-could-raise-your-rates\n\n\n\nhttps://medium.com/@bgweber/data-science-for-startups-model-services-2facf2dde81d","html":"<p></p><p><a href=\"https://www.bloomberg.com/news/articles/2018-07-16/cfa-exam-adds-crypto-blockchain-topics-as-wall-street-dives-in\">https://www.bloomberg.com/news/articles/2018-07-16/cfa-exam-adds-crypto-blockchain-topics-as-wall-street-dives-in</a></p><p></p><p><a href=\"https://www.data-to-viz.com/caveats.html?utm_campaign=Data_Elixir&amp;utm_medium=email&amp;utm_source=Data_Elixir_191\">https://www.data-to-viz.com/caveats.html</a></p><p></p><p><a href=\"https://medium.com/tensorflow/seedbank-discover-machine-learning-examples-2ff894542b57\">https://medium.com/tensorflow/seedbank-discover-machine-learning-examples-2ff894542b57</a></p><p></p><p><a href=\"https://www.oreilly.com/ideas/of-oaths-and-checklists?utm_campaign=Data_Elixir&amp;utm_medium=email&amp;utm_source=Data_Elixir_191\">https://www.oreilly.com/ideas/of-oaths-and-checklists</a></p><p></p><p><a href=\"https://www.propublica.org/article/health-insurers-are-vacuuming-up-details-about-you-and-it-could-raise-your-rates\">https://www.propublica.org/article/health-insurers-are-vacuuming-up-details-about-you-and-it-could-raise-your-rates</a></p><p></p><p><a href=\"https://medium.com/@bgweber/data-science-for-startups-model-services-2facf2dde81d\">https://medium.com/@bgweber/data-science-for-startups-model-services-2facf2dde81d</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-6th/","uuid":"ce5fc132-085a-4377-ab7c-449e88e1264a","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b529d4c529141018f9dad1e"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736bc","title":"Lynx Roundup, August 5th","slug":"lynx-roundup-august-5th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/lynx31@2x.jpg","excerpt":"Making the most of MOOCs!  Data team workflows!  And a way to play with UIs for people with 0 visual sense!","custom_excerpt":"Making the most of MOOCs!  Data team workflows!  And a way to play with UIs for people with 0 visual sense!","created_at_pretty":"21 July, 2018","published_at_pretty":"05 August, 2018","updated_at_pretty":"23 March, 2019","created_at":"2018-07-20T22:37:10.000-04:00","published_at":"2018-08-05T07:00:00.000-04:00","updated_at":"2019-03-22T23:56:06.000-04:00","meta_title":"Lynx Roundup, August 5th | Hackers And Slackers","meta_description":"Making the most of MOOCs!  Data team workflows!  And a way to play with UIs for people with 0 visual sense!","og_description":"Making the most of MOOCs!  Data team workflows!  And a way to play with UIs for people with 0 visual sense!","og_image":"https://hackersandslackers.com/content/images/2019/02/lynx31@2x.jpg","og_title":"Lynx Roundup, August 5th","twitter_description":"Making the most of MOOCs!  Data team workflows!  And a way to play with UIs for people with 0 visual sense!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/lynx31@2x.jpg","twitter_title":"Lynx Roundup, August 5th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://seekingalpha.com/article/4187332-talend-big-data-disruptor\n\n\n\nhttps://towardsdatascience.com/independent-component-analysis-via-gradient-ascent-in-numpy-and-tensorflow-with-interactive-code-98b9a73e5d19\n\n\n\nhttps://medium.freecodecamp.org/so-youve-signed-up-for-another-online-course-how-do-you-make-the-most-of-it-a8d8f28823cb\n\n\n\nhttps://towardsdatascience.com/what-does-a-data-team-really-do-12484482e683\n\n\n\nhttps://www.hillelwayne.com/post/formally-specifying-uis/\n\n\n\nhttp://www.hyperfiddle.net/","html":"<p></p><p><a href=\"https://seekingalpha.com/article/4187332-talend-big-data-disruptor\">https://seekingalpha.com/article/4187332-talend-big-data-disruptor</a></p><p></p><p><a href=\"https://towardsdatascience.com/independent-component-analysis-via-gradient-ascent-in-numpy-and-tensorflow-with-interactive-code-98b9a73e5d19\">https://towardsdatascience.com/independent-component-analysis-via-gradient-ascent-in-numpy-and-tensorflow-with-interactive-code-98b9a73e5d19</a></p><p></p><p><a href=\"https://medium.freecodecamp.org/so-youve-signed-up-for-another-online-course-how-do-you-make-the-most-of-it-a8d8f28823cb\">https://medium.freecodecamp.org/so-youve-signed-up-for-another-online-course-how-do-you-make-the-most-of-it-a8d8f28823cb</a></p><p></p><p><a href=\"https://towardsdatascience.com/what-does-a-data-team-really-do-12484482e683\">https://towardsdatascience.com/what-does-a-data-team-really-do-12484482e683</a></p><p></p><p><a href=\"https://www.hillelwayne.com/post/formally-specifying-uis/\">https://www.hillelwayne.com/post/formally-specifying-uis/</a></p><p></p><p><a href=\"http://www.hyperfiddle.net/\">http://www.hyperfiddle.net/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-5th/","uuid":"aa3ee62c-1115-4320-bd3c-7dc8fb776696","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b529c56529141018f9dad19"}}]}},"pageContext":{"pageNumber":20,"humanPageNumber":21,"skip":240,"limit":12,"numberOfPages":33,"previousPagePath":"/page/20","nextPagePath":"/page/22"}}