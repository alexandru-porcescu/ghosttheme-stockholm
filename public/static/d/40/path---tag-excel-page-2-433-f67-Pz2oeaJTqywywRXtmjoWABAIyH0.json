{"data":{"ghostTag":{"slug":"excel","name":"Excel","visibility":"public","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business."},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867365f","title":"Doing the Excel Data Dance","slug":"doing-the-excel-data-dance","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/05/maxexcel4@2x.jpg","excerpt":"Taking a step back to reflect on the problems Excel intends to solve.","custom_excerpt":"Taking a step back to reflect on the problems Excel intends to solve.","created_at_pretty":"29 May, 2018","published_at_pretty":"29 May, 2018","updated_at_pretty":"21 January, 2019","created_at":"2018-05-28T22:07:04.000-04:00","published_at":"2018-05-29T08:00:00.000-04:00","updated_at":"2019-01-21T14:27:30.000-05:00","meta_title":"Doing the Excel Data Dance | Hackers and Slackers","meta_description":"Taking a step back to reflect on the problems Excel intends to solve","og_description":"Taking a step back to reflect on the problems Excel intends to solve","og_image":"https://hackersandslackers.com/content/images/2018/05/maxexcel4@2x.jpg","og_title":"Doing the Excel Data Dance","twitter_description":"Taking a step back to reflect on the problems Excel intends to solve","twitter_image":"https://hackersandslackers.com/content/images/2018/05/maxexcel4@2x.jpg","twitter_title":"Doing the Excel Data Dance","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"If you've been reading along, over the last several posts you've learned the two\nmajor skills that any self-respecting Excel jockey counts as their go-tos: the\nability to lookup  (remember, I'm partial to index-match, but if you learned VH\nlookup, ride that until you crash your system) and the ability to pivot.\n\nNow here's something really interesting: until we pierce the veil on doing some\nVB macros, by truly mastering just those two skills, you can handle basically\nany job that Excel can actually handle, anything more advanced is just a matter\nof doing it faster (and faster, and faster). However, I've neglected to discuss\nwhat types of things you'll actually encounter out in the wild that requires\nsome fancy Excel footwork. Well, that's what this post is all about.\n\nThe first question: what is Excel actually for. Truth be told, if you separate\nthe VB elements and the pivot tables from Excel, it was really just a way for\naccountants to make small changes to tax forms and have them reflected later in\nthe form (something that had to be done by hand prior to the invention of\nExcel's progenitor...which had to have been horrible). With that in mind, one\nneeds to understand that everything else that Excel can do is built on top  of\nthis relatively rudimentary foundation, and interestingly enough, the vast\nmajority of software functions in the same way: for example, the reason why the\nlast dozen or so Bethesda games all have similar glitches and gameplay is\nbecause they're all built on a nearly decade old engine, and anyone who works at\na company that managed a database for a lengthy period of time knows that it's\nmuch easier to build on top of the garbage than to clean anything up (that's\nalso why there's all that cut content that still exists in games when you used a\ngame genie as a kid...it's too difficult to take that stuff out without harming\nthe juicy center!).\n\nThe pros of this model is that because Excel was made to handle accounting work,\nit handles relatively small datasets (and \"small\" here is under a million\nrows...I've managed to push excel to about 250k rows without it exploding...but\nnot much more than that) very quickly, and in a very user friendly and visual\nformat. In other words, Your boss uses Excel because it's pretty easy to\nunderstand what's going on (and you can see  the data). As such, you can think\nof Excel as the \"Lingua Franca\" (the language that two dignitaries of separate\nnations speak to conduct diplomacy...or perhaps, the Basic to your Star Wars\nUniverse) of the data world. To put this as simply as possible, unless you're\nworking for a company where EVERYONE has a background in computer/data science,\nyou're going to need to figure out a way to get your data into an Excel friendly\nformat somehow. The reason for this may have to do with self selection, people\nwho like getting into code go into heavy data, people like me who like to fix\nproblems tend to be intermediaries, and the people who actually make money for\nour companies (or at least are able to convince others that money is made)...are\nbusiness people.\n\nNow brace yourself, because this sounds completely insane: the daily workflow of\na Business Analyst (or a BA) at many companies is taking data that already\nexists in one form on one platform (generally either tableau, a business\nintelligence program, or some sort of database), exporting it to an Excel\nfriendly format, manipulating the data so it makes sense, drawing some sort of\nsalient conclusion from it (usually using a lookup, a pivot, or both),\npresenting it to management, and then putting it back into a format that the\nheavy data people can use to start this engine all over again.\n\nThe funny part is, the actual mechanics of doing this work isn't hard, if\neveryone is on the same page, you could probably take care of this whole\nworkflow in maybe half a day. Alas, blogs like this wouldn't need to be written\nif mechanics always worked the way they should, and another golden rule is that\nmultiple departments are never  on the same page. In other words, the data you\nget is going to be \"dirty\" and next time, I'm going to show you some common\ndirty data dilemmas, and how to polish it up with nothing but a few = signs, a\ncouple of commands, a pivot table or two, and a shitload of ingenuity.\n\nBut as always, a summary. In this post, we learned:\n\n * What Excel is good at\n * What Excel perhaps isn't so good at\n * Why you still need to deal with Excel\n * The day to day of someone who deals in both the data space and the management\n   space...and\n * That troubleshooting this step is what ultimately earns you your paycheck.\n\nFinally, a quick aside to placate my fellow authors and friends on this fine\nblog, your data being dirty on my end doesn't mean you did anything wrong, it's\nthat bouncing from one platform to another and back was never meant to be easy.","html":"<p>If you've been reading along, over the last several posts you've learned the two major skills that any self-respecting Excel jockey counts as their go-tos: the ability to <em>lookup</em> (remember, I'm partial to index-match, but if you learned VH lookup, ride that until you crash your system) and the ability to <em>pivot</em>.</p><p>Now here's something really interesting: until we pierce the veil on doing some VB macros, by truly mastering just those two skills, you can handle basically any job that Excel can actually handle, anything more advanced is just a matter of doing it faster (and faster, and faster). However, I've neglected to discuss what types of things you'll actually encounter out in the wild that requires some fancy Excel footwork. Well, that's what this post is all about.</p><p>The first question: what is Excel actually <em>for</em>. Truth be told, if you separate the VB elements and the pivot tables from Excel, it was really just a way for accountants to make small changes to tax forms and have them reflected later in the form (something that had to be done by hand prior to the invention of Excel's progenitor...which had to have been horrible). With that in mind, one needs to understand that everything else that Excel can do is built <strong>on top</strong> of this relatively rudimentary foundation, and interestingly enough, the vast majority of software functions in the same way: for example, the reason why the last dozen or so Bethesda games all have similar glitches and gameplay is because they're all built on a nearly decade old engine, and anyone who works at a company that managed a database for a lengthy period of time knows that it's much easier to build on top of the garbage than to clean anything up (that's also why there's all that cut content that still exists in games when you used a game genie as a kid...it's too difficult to take that stuff out without harming the juicy center!).</p><p>The pros of this model is that because Excel was made to handle accounting work, it handles relatively small datasets (and \"small\" here is under a million rows...I've managed to push excel to about 250k rows without it exploding...but not much more than that) very quickly, and in a very user friendly and visual format. In other words, Your boss uses Excel because it's pretty easy to understand what's going on (and you can <strong>see</strong> the data). As such, you can think of Excel as the \"Lingua Franca\" (the language that two dignitaries of separate nations speak to conduct diplomacy...or perhaps, the Basic to your Star Wars Universe) of the data world. To put this as <em>simply as possible</em>, unless you're working for a company where EVERYONE has a background in computer/data science, you're going to need to figure out a way to get your data into an Excel friendly format somehow. The reason for this may have to do with self selection, people who like getting into code go into heavy data, people like me who like to fix problems tend to be intermediaries, and the people who actually make money for our companies (or at least are able to convince others that money is made)...are business people.</p><p>Now brace yourself, because this sounds completely insane: the daily workflow of a Business Analyst (or a BA) at many companies is taking data that already exists in one form on one platform (generally either tableau, a business intelligence program, or some sort of database), exporting it to an Excel friendly format, manipulating the data so it makes sense, drawing some sort of salient conclusion from it (usually using a lookup, a pivot, or both), presenting it to management, and then putting it back into a format that the heavy data people can use to start this engine all over again.</p><p>The funny part is, the actual mechanics of doing this work isn't hard, if everyone is on the same page, you could probably take care of this whole workflow in maybe half a day. Alas, blogs like this wouldn't need to be written if mechanics always worked the way they should, and another golden rule is that multiple departments are <strong>never</strong> on the same page. In other words, the data you get is going to be \"dirty\" and next time, I'm going to show you some common dirty data dilemmas, and how to polish it up with nothing but a few = signs, a couple of commands, a pivot table or two, and a shitload of ingenuity.</p><p>But as always, a summary. In this post, we learned:</p><ul><li>What Excel is good at</li><li>What Excel perhaps isn't so good at</li><li>Why you still need to deal with Excel</li><li>The day to day of someone who deals in both the data space and the management space...and</li><li>That troubleshooting this step is what ultimately earns you your paycheck.</li></ul><p>Finally, a quick aside to placate my fellow authors and friends on this fine blog, your data being dirty on my end doesn't mean you did anything wrong, it's that bouncing from one platform to another and back was never meant to be easy.</p>","url":"https://hackersandslackers.com/doing-the-excel-data-dance/","uuid":"53af345c-d12b-4629-a339-8c03b7677c80","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b0cb5c848a62e1c7dcb0c54"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867365c","title":"Adventures in Excel: Power to the Pivot","slug":"powering-up-your-excel-pivot-tables","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/maxexcel3-3.jpg","excerpt":"Power up your Excel Pivot Tables with these pro moves.","custom_excerpt":"Power up your Excel Pivot Tables with these pro moves.","created_at_pretty":"23 May, 2018","published_at_pretty":"25 May, 2018","updated_at_pretty":"28 February, 2019","created_at":"2018-05-23T18:57:23.000-04:00","published_at":"2018-05-24T20:35:00.000-04:00","updated_at":"2019-02-28T02:37:16.000-05:00","meta_title":"Adventures in Excel: Power to the Pivot | Hackers and Slackers","meta_description":"Power up your Excel Pivot Tables with these pro moves.","og_description":"Power up your Excel Pivot Tables with these pro moves.","og_image":"https://hackersandslackers.com/content/images/2019/02/maxexcel3-3.jpg","og_title":"Adventures in Excel: Power to the Pivot","twitter_description":"Power up your Excel Pivot Tables with these pro moves.","twitter_image":"https://hackersandslackers.com/content/images/2019/02/maxexcel3-3.jpg","twitter_title":"Adventures in Excel: Power to the Pivot","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"During the last discussion, you've (hopefully) learned how to generate a pivot\ntable, and learned about the four \"buckets\" that can house your columns:\n\n * Filter\n * Row\n * Column\n * Value\n\nI'm also going to make the wild assumption that you've played around with your\nnewly birthed pivot table, taking your column headings from your \"raw\" data (in\nthe lingua franca of the numerically inclined, this means the data just as\nyou've received it, before you add formulae or engage in any other\nmanipulation.) Hopefully this gave you a feel of how a pivot table works, and if\nyour synapses are wired in a very specific way  you may even begin to feel out\nwhy pivot tables are such a game-changer. With this base in mind, in this post,\nwe're going to learn what each of those buckets actually do, and explore some\nreally cool ways that you can mess with your raw data within the pivot\nenvironment.\n\nBefore we go further, we must first understand some foundation facts about\nworking with Pivots that will save you heartache and frustration out of the\nprocess:\n\n 1.   Remember, any data within the pivot table does not affect the raw data,\n    this makes pivot tables the ideal way to look at your data through different\n    lenses. \n 2.   You can utilize a heading in your pivot table in multiple locations (or\n    even multiple times in the same location!) to view your data in different\n    ways. The exact way this works is difficult to explain, so try it yourself\n    and find out. \n 3.   Any changes to your raw data (especially if you didn't highlight the\n    entirety of your data) will not  be reflected in the pivot table UNLESS you\n    right click the table, and press \"refresh\", this will then take into account\n    any data changed in the raw data (assuming that the change took place within\n    the area you highlighted, if you add a column or row, you need to redo the\n    table) \n 4.   You can copy/paste any part of the pivot table, and contents that you\n    highlighted to copy will appear. HOWEVER, if you highlight all  visible\n    parts of the pivot table, you'll actually copy the whole pivot (which you\n    can continue modifying). This is very useful if you want to make a minor\n    change to a pivot table, and compare them side by side (we'll dive deeper\n    into this topic in a later post). \n 5.   This isn't exclusive to pivot tables, but remember the absolute golden\n    rule  of Excel: much like an obnoxiously large Leatherman (or a Swiss army\n    knife, depending on how over-prepared you want to be) while there are nearly\n    infinite tools or settings available, a hypermajority  of Excel users will\n    never touch even half of the options available, and are still strong in the\n    ways of magic (#wizard), so just because you can press all the buttons,\n    doesn't mean you should. \n\nWith all three of these rules in mind, let's dive into each of the buckets, what\nthey do, and how you can use this to really start to get wild with your data.\nLet's start with the most straightforward:\n\nFilters\nThe filter bucket allows you to place one (or more!) of your headings (AKA your\ncolumns in the raw data) in order to filter in or out those values out of the\nentire pivot table. For instance, If you have a column of people's names, and\nyou put names into the filter bucket, you can then choose the names that you\nwant to include the associated data. One great use for the filter bucket is if\nyou have a dataset with dates, you can filter out a specific Month/Day/Year and\nthe rest of your data will only display information from that particular time\nperiod.\n\nRows\nRows are the bread and butter of a pivot table (and as we discussed last time,\nthe thing that clicking on a heading defaults to). This is the main area where\nyour data will live. For example, if you have a dataset of Names, IDs, and\nBirthdays, and you click Names, the pivot table will show all of the DISTINCT \nnames in a column within the pivot. For example, if you have the dataset of\nnames:\n\nCOLUMN A COLUMN B Bob Sally Bob Jim Tom Larry Bob Your pivot table will display:\n\nCOLUMN A COLUMN B Bob Sally Jim Tom Larry In other words, it treats all Bobs the\nsame, and this functionality is *Muy importanté\n\nHowever, what if you want to see how many Bobs exist within your data? Well...\n\nValues\nThe values tab is perhaps the most flexible part of the pivot table. By putting\na heading within the value tab, it will default to showing you the Count, or the\nnumber of appearances that a particular value shows up within a column of your\ndataset. So for example, if you drag names into both the row and values buckets,\nyou'll wind up with this (a pivot table will always show a grand total (unless\nyou specifically tell the pivot not to, which is a possibility, however, because\nyou can copy and paste any part of the pivot, it's rarely necessary):\n\n             COLUMN ACOLUMN B        Bob3        Sally1        Bob1        Jim1\n       Tom1        **Total****7**\n\nNow, notice that above I said that by dragging a heading into the values bucket\nit'll default to a count (unless the column is all numbers, then it'll default\nto a sum), however, this is not the only possibility. By left clicking the\nheading within the value bucket and choosing \"value field settings), you can\nchoose from a mind-boggling array of possible mathematical operations, the ones\nthat you will generally use most often are probably going to be count  (the\nnumber of appearances of a given value within a dataset) and sum  (the combined\ntotal of all the numbers associated with each value in your row bucket). One\nimportant piece of advice though, you can not  sum text, Excel won't let you\n(even if the text looks like a number), so if you're using numbers, be sure to\ntell Excel that you're looking at numbers (this issue will happen more often\nthan you could possibly imagine!)\n\nOther useful operators are count distinct  (which you can only utilize if you\nchecked add to data model  when you built the table) and min or max (returning\nthe lowest or highest value associated with a particular value in your rows, and\nyou can only use this if you did not  click add to data model  when you built\nthe table). A good example of using Max or Min is when you have say names and\nsalaries, where you can show the highest and lowest salary for a particular\nname. Keep in mind that you can have more than one value operator (like min and\nmax) per heading, thus putting both the minimum and maximum value next to each\nother on the table. Which leads us to the generally least used bucket...\n\nColumns\nOne thing I intentionally left out was what a pivot table actually does  with\nyour data. A gross over-simplification of the functionality is that it\nconsolidates (picking out those distinct values), summarizes (shows totals, and\ngrand totals), and most importantly, it flips your columns and rows (hence the\nreason it's called a pivot  table.) Thus, the column bucket is generally just\nused as a place where your values go automatically when you populate the values\nbucket. The reason columns get kind of cumbersome is because it literally widens\nyour pivot by how many ever values exist in your dataset, thus, anything more\nthan say 20 values becomes almost impossible to read, let alone use in a\nmeaningful way.\n\nThere are some rare cases in which using a heading in the column bucket may make\nsense though, for instance, if you have birth months as one of your headings,\nand names for rows, you can put the months in the column bucket and then get a\ncount showing each how many people with a particular name land at a particular\nmonth in a grid or \"heat map\" (a fancy way to say a chart showing concentrations\nof something) fashion. Another use case (and one I use on the day to day) is\nfinding the numbers of providers who utilize a particular procedure for which\nthere is a known value (there are 12 that I look at). You have the procedure\nnames as the columns, and you have the providers who administer the procedures\nas the rows. You then put measure in the value bucket. This gives me a nice,\nconcise grid for which I can see which providers give how many of which of the\n12 procedures...which on it's own is sorta useful, but when combined with a\ntrick we already learned, some epic level spellcasting is afoot. Unfortunately,\nthat'll have to wait until next time.\n\nIn summary, we learned:\n\n * The purpose of the filter bucket within a pivot table\n * The purpose of the rows bucket within a pivot table and the fact that it\n   shows distinct values\n * The purpose of the values bucket within a pivot table, and how you can have\n   the column use different mathematical operators (such as count, sum, min, and\n   max) to find different information within a dataset... and\n * The purpose (or lack thereof) of the columns bucket within a pivot table, and\n   potential use case scenarios for this function.\n\nNext time, we start combining knowledge in order to get freaky with your data in\nways that the lord of Excel themselves did not consider.\n\nPivot till you puke,\n\n-Snacks","html":"<p>During the last discussion, you've (hopefully) learned how to generate a pivot table, and learned about the four \"buckets\" that can house your columns:</p><ul><li>Filter</li><li>Row</li><li>Column</li><li>Value</li></ul><p>I'm also going to make the wild assumption that you've played around with your newly birthed pivot table, taking your column headings from your \"raw\" data (in the lingua franca of the numerically inclined, this means the data just as you've received it, before you add formulae or engage in any other manipulation.) Hopefully this gave you a feel of how a pivot table works, and if your synapses are wired in a very specific way  you may even begin to feel out why pivot tables are such a game-changer. With this base in mind, in this post, we're going to learn what each of those buckets actually do, and explore some really cool ways that you can mess with your raw data within the pivot environment.</p><p>Before we go further, we must first understand some foundation facts about working with Pivots that will save you heartache and frustration out of the process:</p><ol><li> Remember, any data within the pivot table does not affect the raw data, this makes pivot tables the ideal way to look at your data through different lenses. </li><li> You can utilize a heading in your pivot table in multiple locations (or even multiple times in the same location!) to view your data in different ways. The exact way this works is difficult to explain, so try it yourself and find out. </li><li> Any changes to your raw data (especially if you didn't highlight the entirety of your data) <strong>will not</strong> be reflected in the pivot table UNLESS you right click the table, and press \"refresh\", this will then take into account any data changed in the raw data (assuming that the change took place within the area you highlighted, if you add a column or row, you need to redo the table) </li><li> You can copy/paste any part of the pivot table, and contents that you highlighted to copy will appear. HOWEVER, if you highlight <strong>all</strong> visible parts of the pivot table, you'll actually copy the whole pivot (which you can continue modifying). This is very useful if you want to make a minor change to a pivot table, and compare them side by side (we'll dive deeper into this topic in a later post). </li><li> This isn't exclusive to pivot tables, but remember the <strong>absolute golden rule</strong> of Excel: much like an obnoxiously large Leatherman (or a Swiss army knife, depending on how over-prepared you want to be) while there are nearly infinite tools or settings available, a <em>hypermajority</em> of Excel users will never touch even half of the options available, and are still strong in the ways of magic (#wizard), so just because you can press all the buttons, doesn't mean you should. </li></ol><p>With all three of these rules in mind, let's dive into each of the buckets, what they do, and how you can use this to really start to get wild with your data. Let's start with the most straightforward:</p><h3 id=\"filters\">Filters</h3><p>The filter bucket allows you to place one (or more!) of your headings (AKA your columns in the raw data) in order to filter in or out those values out of the entire pivot table. For instance, If you have a column of people's names, and you put names into the filter bucket, you can then choose the names that you want to include the associated data. One great use for the filter bucket is if you have a dataset with dates, you can filter out a specific Month/Day/Year and the rest of your data will only display information from that particular time period.</p><h3 id=\"rows\">Rows</h3><p>Rows are the bread and butter of a pivot table (and as we discussed last time, the thing that clicking on a heading defaults to). This is the main area where your data will live. For example, if you have a dataset of Names, IDs, and Birthdays, and you click Names, the pivot table will show all of the <em><strong>DISTINCT</strong></em> names in a column within the pivot. For example, if you have the dataset of names:</p><div class=\"tableContainer\">\n<table>\n  <thead>\n    <tr>\n      <th> COLUMN A </th>\n      <th> COLUMN B </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Sally </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Jim </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Tom </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Larry </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p>Your pivot table will display:</p><div class=\"tableContainer\">\n<table>\n  <thead>\n    <tr>\n      <th> COLUMN A </th>\n      <th> COLUMN B </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Sally </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Jim </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Tom </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Larry </td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n</div><p>In other words, it treats all Bobs the same, and this functionality is *<strong>Muy importanté</strong></p><p>However, what if you want to see how many Bobs exist within your data? Well...</p><h3 id=\"values-function values() { [native code] }1\">Values</h3><p>The values tab is perhaps the most flexible part of the pivot table. By putting a heading within the value tab, it will default to showing you the <em>Count</em>, or the number of appearances that a particular value shows up within a column of your dataset. So for example, if you drag names into both the row and values buckets, you'll wind up with this (a pivot table will always show a grand total (unless you specifically tell the pivot not to, which is a possibility, however, because you can copy and paste any part of the pivot, it's rarely necessary):</p><p>            COLUMN ACOLUMN B        Bob3        Sally1        Bob1        Jim1        Tom1        **Total****7**    </p><p>Now, notice that above I said that by dragging a heading into the values bucket it'll default to a count (unless the column is all numbers, then it'll default to a sum), however, this is not the only possibility. By left clicking the heading within the value bucket and choosing \"value field settings), you can choose from a mind-boggling array of possible mathematical operations, the ones that you will generally use most often are probably going to be <em>count</em> (the number of appearances of a given value within a dataset) and <em>sum</em> (the combined total of all the numbers associated with each value in your row bucket). One important piece of advice though, you <strong>can not</strong> sum text, Excel won't let you (even if the text looks like a number), so if you're using numbers, be sure to tell Excel that you're looking at numbers (this issue will happen more often than you could possibly imagine!)</p><p>Other useful operators are <em>count distinct</em> (which you can only utilize if you checked <strong>add to data model</strong> when you built the table) and min or max (returning the lowest or highest value associated with a particular value in your rows, and you can only use this if you <strong><em>did not</em> click add to data model</strong> when you built the table). A good example of using Max or Min is when you have say names and salaries, where you can show the highest and lowest salary for a particular name. Keep in mind that you can have more than one value operator (like min and max) per heading, thus putting both the minimum and maximum value next to each other on the table. Which leads us to the generally least used bucket...</p><h3 id=\"columns\">Columns</h3><p>One thing I intentionally left out was what a pivot table actually <em>does</em> with your data. A gross over-simplification of the functionality is that it consolidates (picking out those distinct values), summarizes (shows totals, and grand totals), and most importantly, it flips your columns and rows (hence the reason it's called a <em>pivot</em> table.) Thus, the column bucket is generally just used as a place where your values go automatically when you populate the values bucket. The reason columns get kind of cumbersome is because it literally widens your pivot by how many ever values exist in your dataset, thus, anything more than say 20 values becomes almost impossible to read, let alone use in a meaningful way.</p><p>There are some rare cases in which using a heading in the column bucket may make sense though, for instance, if you have birth months as one of your headings, and names for rows, you can put the months in the column bucket and then get a count showing each how many people with a particular name land at a particular month in a grid or \"heat map\" (a fancy way to say a chart showing concentrations of something) fashion. Another use case (and one I use on the day to day) is finding the numbers of providers who utilize a particular procedure for which there is a known value (there are 12 that I look at). You have the procedure names as the columns, and you have the providers who administer the procedures as the rows. You then put measure in the value bucket. This gives me a nice, concise grid for which I can see which providers give how many of which of the 12 procedures...which on it's own is sorta useful, but when combined with a trick we already learned, some epic level spellcasting is afoot. Unfortunately, that'll have to wait until next time.</p><p>In summary, we learned:</p><ul><li>The purpose of the filter bucket within a pivot table</li><li>The purpose of the rows bucket within a pivot table and the fact that it shows distinct values</li><li>The purpose of the values bucket within a pivot table, and how you can have the column use different mathematical operators (such as count, sum, min, and max) to find different information within a dataset... and</li><li>The purpose (or lack thereof) of the columns bucket within a pivot table, and potential use case scenarios for this function.</li></ul><p>Next time, we start combining knowledge in order to get freaky with your data in ways that the lord of Excel themselves did not consider.</p><p>Pivot till you puke,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/powering-up-your-excel-pivot-tables/","uuid":"d28897a1-583d-4a92-9e42-66f3176c58eb","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b05f1d389a1112d7e8bc96a"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867365b","title":"The Art of Excel Pivot Tables","slug":"the-art-of-excel-pivot-tables","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/05/maxexcel2@2x.jpg","excerpt":"Pivot complex Excel spreadsheets to summarize your data.","custom_excerpt":"Pivot complex Excel spreadsheets to summarize your data.","created_at_pretty":"22 May, 2018","published_at_pretty":"23 May, 2018","updated_at_pretty":"20 January, 2019","created_at":"2018-05-22T11:47:14.000-04:00","published_at":"2018-05-23T08:00:00.000-04:00","updated_at":"2019-01-20T18:24:24.000-05:00","meta_title":"The Art of Excel Pivot Tables | Hackers and Slackers","meta_description":"Pivot complex Excel spreadsheets to summarize your data.","og_description":"Pivot complex Excel spreadsheets to summarize your data.","og_image":"https://hackersandslackers.com/content/images/2018/05/maxexcel2@2x.jpg","og_title":"The Art of Excel Pivot Tables","twitter_description":"Pivot complex Excel spreadsheets to summarize your data.","twitter_image":"https://hackersandslackers.com/content/images/2018/05/maxexcel2@2x.jpg","twitter_title":"The Art of Excel Pivot Tables","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"As previously discussed, the entry level data professional (coming from a\nbackground other than statistics, math, or computer science) consists of two\nkeywords: The ability to lookup  and the ability to pivot.\n\nDear reader, this is not an oversimplification or hyperbole, the hard truth is\nthat if someone has a reasonable familiarity with a lookup function (remember,\ncool kids use Index-Match), and equal familiarity with how to use pivot tables,\nyou can get most \"day to day\" work done on the job, and if you get really good,\nby utilizing both of these tools in creative ways you can essentially hack at\nany problem thrown at you.\n\nSo...what is a pivot table? Simply put, building a pivot table is the reason \nwhy Excel is still used at all (and as of about a month ago, Google Sheets has\npivot tables too, so that's encouraging). It essentially offers a way to \nsummarize your data  and quickly draw conclusions from a bunch of random rows\nand columns. If that sounds very powerful, you're correct, and it would be easy\nenough to write an entire book just about pivot tables (and I'm sure these books\nexist), but right now, we're just going to learn to build one.\n\nThe good news is, pivoting doesn't even require a formula to exist, it only\nrequires at least two columns with headings  (this is the number one reason for\npivot tables not working out) and the desire to succeed.\n\nHere's how to do it:\n\n 1. MAKE SURE ALL OF YOUR COLUMNS HAVE HEADINGS\n 2. Highlight all of the data you want to pivot (there's the sucker way to do\n    this: pressing control-A  to highlight everything, and the more accurate\n    way: highlight the first heading, and then hit control+shift+right  to\n    highlight all the headings, and then control+shift+down  to highlight all\n    the data related to those headings, this removes blanks from the pivot\n    table). Ultimately though, highlight the data anyway that makes you happy,\n    the important thing is to include all the data you want to pivot out.\n 3. Click insert at the top of your screen (in between home and page\n    layout...not the inset key), alternatively, you can hit Alt+D and then P to\n    open the wizard, but the wizard actually makes things more difficult (in my\n    opinion, of course). Then click \"pivot table\" (it's right underneath).\n 4. This will launch another window, the table/range will already be populated\n    if you've followed these steps as directed, so the only thing you need to\n    concern yourself with is if you want the pivot table on a new sheet\n    (probably), or if you want to place it on an existing sheet (maybe at some\n    point, but not now). 4b. I purposely left out that checkbox regarding\n    \"adding the data to the data model\", for our purposes, checking the check\n    box will let you figure out the number of different  values (this is called\n    a distinct count) but it WON'T let you find the Maximum or Minimum value. To\n    be honest, I have no idea why this is. For most purposes though, leave the\n    box unchecked.\n 5. Click OK...you now have a weird looking blank box that'll become your pivot\n    table.\n\nNow, click the weird looking box, and you'll see a menu on the right side of\nyour screen, the top half of which will consist of the headings that you\nhighlighted, the bottom consists of 4 distinct boxes that you can drag these\nheadings into: filters,columns,rows, and values.\n\nNow, take one of your headings, and drag it into the rows box (or just click it,\nExcel defaults to putting headings in the rows box) you'll now see a column of \ndistinct  values in the formally blank table. Honestly, the best way to learn is\nto just drag headings into each of the 4 boxes, their functions rapidly become\nself evident...and here's the best part: the pivot table doesn't make any\nchanges to your existing data, so any craziness you engage in on the pivot\ntable...stays in the pivot table, so don't worry about messing up the data that\nyour boss gave you.\n\nSo, I'll leave you with that, your homework today is to try and plug each of\nyour headings into each of the 4 options offered, remember, it's almost\nimpossible to break a pivot table, it's easy to make it useless, but it's\nequally easy to reset it back to normal.\n\nToday we've learned:\n\n * That the combination of lookup skills and pivot skills makes up the entry\n   level data professional's resume\n * The most basic of overview of what a pivot table is\n * The steps to set up a pivot table\n * How to interact with a pivot table once it's been created.\n\nNext time, we'll go over what each of the 4 pivot \"buckets\" actually do, and how\nto utilize each of them to get a different view of your dataset.\n\nHappy Pivoting,\n\n-Snacks","html":"<p>As previously discussed, the entry level data professional (coming from a background other than statistics, math, or computer science) consists of two keywords: The ability to <strong>lookup</strong> and the ability to <strong>pivot</strong>.</p><p>Dear reader, this is not an oversimplification or hyperbole, the hard truth is that if someone has a reasonable familiarity with a lookup function (remember, cool kids use Index-Match), and equal familiarity with how to use pivot tables, you can get most \"day to day\" work done on the job, and if you get really good, by utilizing both of these tools in creative ways you can essentially hack at any problem thrown at you.</p><p>So...what is a <strong>pivot table</strong>? Simply put, building a pivot table is <strong>the reason</strong> why Excel is still used at all (and as of about a month ago, Google Sheets has pivot tables too, so that's encouraging). It essentially offers a way to <strong>summarize your data</strong> and quickly draw conclusions from a bunch of random rows and columns. If that sounds very powerful, you're correct, and it would be easy enough to write an entire book just about pivot tables (and I'm sure these books exist), but right now, we're just going to learn to build one.</p><p>The good news is, pivoting doesn't even require a formula to exist, it only requires at least two columns <strong>with headings</strong> (this is the number one reason for pivot tables not working out) and the desire to succeed.</p><p>Here's how to do it:</p><ol><li>MAKE SURE ALL OF YOUR COLUMNS HAVE HEADINGS</li><li>Highlight all of the data you want to pivot (there's the sucker way to do this: pressing <strong>control-A</strong> to highlight everything, and the more accurate way: highlight the first heading, and then hit <strong>control+shift+right</strong> to highlight all the headings, and then <strong>control+shift+down</strong> to highlight all the data related to those headings, this removes blanks from the pivot table). Ultimately though, highlight the data anyway that makes you happy, the important thing is to include all the data you want to pivot out.</li><li>Click insert at the top of your screen (in between home and page layout...not the inset key), alternatively, you can hit Alt+D and then P to open the wizard, but the wizard actually makes things more difficult (in my opinion, of course). Then click \"pivot table\" (it's right underneath).</li><li>This will launch another window, the table/range will already be populated if you've followed these steps as directed, so the only thing you need to concern yourself with is if you want the pivot table on a new sheet (probably), or if you want to place it on an existing sheet (maybe at some point, but not now). 4b. I purposely left out that checkbox regarding \"adding the data to the data model\", for our purposes, checking the check box will let you figure out the number of <strong>different</strong> values (this is called a distinct count) but it WON'T let you find the Maximum or Minimum value. To be honest, I have no idea why this is. For most purposes though, leave the box unchecked.</li><li>Click OK...you now have a weird looking blank box that'll become your pivot table.</li></ol><p>Now, click the weird looking box, and you'll see a menu on the right side of your screen, the top half of which will consist of the headings that you highlighted, the bottom consists of 4 distinct boxes that you can drag these headings into: <em>filters</em>,<em>columns</em>,<em>rows</em>, and <em>values</em>.</p><p>Now, take one of your headings, and drag it into the rows box (or just click it, Excel defaults to putting headings in the rows box) you'll now see a column of <em>distinct</em> values in the formally blank table. Honestly, the best way to learn is to just drag headings into each of the 4 boxes, their functions rapidly become self evident...and here's the best part: the pivot table doesn't make any changes to your existing data, so any craziness you engage in on the pivot table...stays in the pivot table, so don't worry about messing up the data that your boss gave you.</p><p>So, I'll leave you with that, your homework today is to try and plug each of your headings into each of the 4 options offered, remember, it's almost impossible to break a pivot table, it's easy to make it useless, but it's equally easy to reset it back to normal.</p><p>Today we've learned:</p><ul><li>That the combination of lookup skills and pivot skills makes up the entry level data professional's resume</li><li>The most basic of overview of what a pivot table is</li><li>The steps to set up a pivot table</li><li>How to interact with a pivot table once it's been created.</li></ul><p>Next time, we'll go over what each of the 4 pivot \"buckets\" actually do, and how to utilize each of them to get a different view of your dataset.</p><p>Happy Pivoting,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/the-art-of-excel-pivot-tables/","uuid":"f1ba8b7c-97a3-4cf5-a27b-e3ea9ab6646e","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b043b828ba5ce278d71d6ee"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673655","title":"The One Excel Formula to Rule Them All","slug":"the-one-excel-formula-to-rule-them-all","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/05/excel3@2x.jpg","excerpt":"Unlock the secrets of Excel's Index Match.","custom_excerpt":"Unlock the secrets of Excel's Index Match.","created_at_pretty":"18 May, 2018","published_at_pretty":"18 May, 2018","updated_at_pretty":"20 January, 2019","created_at":"2018-05-18T15:54:14.000-04:00","published_at":"2018-05-18T17:57:37.000-04:00","updated_at":"2019-01-20T18:50:22.000-05:00","meta_title":"The One Excel Formula to Rule Them All | Hackers and Slackers","meta_description":"Unlock the secrets of Excel's Index Match.","og_description":"Unlock the secrets of Excel's Index Match.","og_image":"https://hackersandslackers.com/content/images/2018/05/excel3@2x.jpg","og_title":"The One Excel Formula to Rule Them All","twitter_description":"Unlock the secrets of Excel's Index Match.","twitter_image":"https://hackersandslackers.com/content/images/2018/05/excel3@2x.jpg","twitter_title":"The One Excel Formula to Rule Them All","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"In my last entry, we discussed how to write a formula, and you've been armed\nwith what each piece of the formula represents (the command, the variables, and\nthe definition of an array). With this knowledge, you've actually been armed\nwith the keys to the kingdom, and you're finally going to learn how to do\nsomething fancy.\n\nThere comes a time in every person's life where just by learning one piece of\ninformation, suddenly everything else you've learned clicks into place. For\nthose who utilize Excel, learning this formula WILL  BE THAT FOR YOU. In our\nlast entry, I stated very plainly that there are only a handful of formulae that\nare used on a regular basis, and this is easily the most useful and  the most\nflexible, to the point in which knowing how to use this formula (along with a\ntool that we'll discuss next time) are the SOLE job skills required to get an\nentry level job in finance note...put this somewhere on your resume.\n\nWhat is this mythical savior of white collar workers worldwide? In the past, you\nmay have heard muffled whispers of \"v-lookup\" or if your data was particularly\npoorly formatted perhaps even \"h-lookup\", however, after 2007, the minds behind\nthe spreadsheets threw both of those formulae into a blender, mixed it with\nRedbull and amphetamines, and spit out the king of functions: the =Index(Match))\n.\n\nSo, after all that incredibly well deserved hype, what is index-match, and why\nis it so special? To put things incredibly simply, index-match checks (or as the\ncool kids say: \"bump-up against\" one piece of information (say, a list of ID\nnumbers) against another piece of information (say a second list of IDs) and\nspits out the data associated with the matching values (Say, the name associated\nwith that ID number). The reasons for the importance of these commands can not\nbe overstated, as anyone who works with data in any capacity knows that\nidentifying changes (and where the changes are) over different iterations of a\nparticular dataset is an essential  job function.\n\nNow, hopefully you're starting to see the light, and understanding the power\nthat this formula holds, so now we're going to learn how to use it.\nFirst things first, if you're a particularly perceptive reader, you may have\nguessed from how I wrote the formula that =Index(Match)) is actually the\ncombination of two separate formulae that alone are of limited use, but\ntogether, they allow you to accomplish great things. These two formulae are:\n\n 1. INDEX  which asks to look at an array (essentially a list of cells), and\n    pull out the data at a specific row and column number within that array (\n    interesting fact: despite using letters for columns and numbers for rows,\n    Excel actually translates the column letters into a number with 1=A and so\n    on). Index by itself isn't super useful, as, much like when you're viewing a\n    particle, or cooking Meth, you rarely know both dimensions of a cell that\n    you're looking for (that was a Heisenberg uncertainty principle joke...or a\n    Breaking Bad reference, depending on how you roll.)\n 2. MATCH  is the formula that does most of the heavy lifting. Match checks to\n    see where a value exists within an array that you specify, and returns the\n    position in the array (for example, if you match \"C\" on a list of letters of\n    the Roman alphabet, match will tell you \"3\").\n\nNow here's where the magic happens. Remember when I said that everything in\nExcel is basically just a collection of numbers? Well, in that respect when a\nformula asks you for a number, there's no reason why you can't throw in ANOTHER \nformula that spits out a number. As such, if you tell Index where you want to\ngrab something from, and then instead of giving it a position, you give it the\nnumber that pops up from Match (which is a formula which gives you the location\nof where something matches) you've given Index all the information it needs to\ndo it's work, all without needing to know where (or if at all) the value exists.\n\nThe formula in practice is written like this:\n\n**=INDEX(*column or row where you want to grab the information from*,MATCH(*the cell containing the value that you want to look for*,*column or row where you want to check for the value*,0)) (don't forget the zero at the end, that just means you want to match the value exactly)\n\nAs such, if you have the following data\n\nSheet 1\nCOLUMN ACOLUMN B\n 1bob\n 2sam\n 3steve\n 4larry\n Sheet 2\nCOLUMN ACOLUMN B\n 2\n 3\n 12\n 18\n If you want to return the name associated with any of the numbers in sheet 2,\nyou can plug the column containing the names in the Index, the cell containing\nthe value that you want to find the associated name with as the first part of\nthe match, and the column containing the IDs associated with the names as the\nsecond part of the match, the formula will spit out the name (or an error\nstating that the value doesn't match a name). The best part is, this formula can\nget dragged down the entire list of numbers to return the names associated with \nall  of the IDs. Now, this is with a very small set of data, but it works just\nas well, and just as quickly if you're looking at 10,000 IDs.\n\nWith that being said, I hope you've learned the answer to a question you didn't\neven know you had, and I hope index-match starts saving you time (or snagging\nyou a promotion!) immediately.\n\nIn summary we've learned the following:\n\n 1. The function of INDEX\n 2. The function of MATCH (protip: if all you want to do is see if something\n    matches and don't need to see what it's associated with, you can use match\n    by itself, is =ISNUMBER(Match)) which will give you a nice true false\n 3. How you can utilize a formula as a variable in another formula (you don't\n    need to put in a second equals sign if you're doing this, but you do need\n    another set of parenthesis)\n 4. How to write an Index(Match)) formula\n 5. The main use for Index-Match (by thinking outside the box, there are an\n    infinite number of uses)\n 6. The realization that by knowing this formula, you never need to compare\n    things by hand again and eye again!\n\nNext time, we'll discuss the other frequently used Excel tool, that together\nwith the powers of Index-Match, literally make up the entry level analyst's\ntoolkit. Also, as a bonus entry in the interim, you'll get a quick rundown of\nhow you can leverage your knowledge of Index-match in a conversation with\nsomeone who knows what they're talking about.\n\nIn Hoc Signo,\n\n-Snacks","html":"<p>In my last entry, we discussed how to write a formula, and you've been armed with what each piece of the formula represents (the command, the variables, and the definition of an array). With this knowledge, you've actually been armed with the keys to the kingdom, and you're finally going to learn how to do something <em><strong>fancy</strong></em>.</p><p>There comes a time in every person's life where just by learning one piece of information, suddenly everything else you've learned clicks into place. For those who utilize Excel, learning this formula <strong>WILL</strong> BE THAT FOR YOU. In our last entry, I stated very plainly that there are only a handful of formulae that are used on a regular basis, and this is easily the most useful <strong>and</strong> the most flexible, to the point in which knowing how to use this formula (along with a tool that we'll discuss next time) are the SOLE job skills required to get an entry level job in finance <strong>note...put this somewhere on your resume.</strong></p><p>What is this mythical savior of white collar workers worldwide? In the past, you may have heard muffled whispers of \"v-lookup\" or if your data was particularly poorly formatted perhaps even \"h-lookup\", however, after 2007, the minds behind the spreadsheets threw both of those formulae into a blender, mixed it with Redbull and amphetamines, and spit out the king of functions: the <code>=Index(Match))</code>.</p><p>So, after all that incredibly well deserved hype, what is index-match, and why is it so special? To put things incredibly simply, index-match checks (or as the cool kids say: \"bump-up against\" one piece of information (say, a list of ID numbers) against another piece of information (say a second list of IDs) and spits out the data associated with the matching values (Say, the name associated with that ID number). The reasons for the importance of these commands can not be overstated, as anyone who works with data in any capacity knows that identifying changes (and where the changes are) over different iterations of a particular dataset is an <strong>essential</strong> job function.</p><p>Now, hopefully you're starting to see the light, and understanding the power that this formula holds, so now we're going to learn how to use it.<br>First things first, if you're a particularly perceptive reader, you may have guessed from how I wrote the formula that =Index(Match)) is actually the combination of two separate formulae that alone are of limited use, but together, they allow you to accomplish great things. These two formulae are:</p><ol><li><strong>INDEX</strong> which asks to look at an array (essentially a list of cells), and pull out the data at a specific row and column number within that array (<em>interesting fact: despite using letters for columns and numbers for rows, Excel actually translates the column letters into a number with 1=A and so on)</em>. Index by itself isn't super useful, as, much like when you're viewing a particle, or cooking Meth, you rarely know both dimensions of a cell that you're looking for (that was a Heisenberg uncertainty principle joke...or a Breaking Bad reference, depending on how you roll.)</li><li><strong>MATCH</strong> is the formula that does most of the heavy lifting. Match checks to see where a value exists within an array that you specify, and returns the position in the array (for example, if you match \"C\" on a list of letters of the Roman alphabet, match will tell you \"3\").</li></ol><p>Now here's where the magic happens. Remember when I said that everything in Excel is basically just a collection of numbers? Well, in that respect when a formula asks you for a number, there's no reason why you can't throw in <strong>ANOTHER</strong> formula that spits out a number. As such, if you tell Index where you want to grab something from, and then instead of giving it a position, you give it the number that pops up from Match (which is a formula which gives you the location of where something matches) you've given Index all the information it needs to do it's work, all without needing to know where (or if at all) the value exists.</p><p>The formula in practice is written like this:</p><pre><code>**=INDEX(*column or row where you want to grab the information from*,MATCH(*the cell containing the value that you want to look for*,*column or row where you want to check for the value*,0)) (don't forget the zero at the end, that just means you want to match the value exactly)</code></pre><p>As such, if you have the following data</p><h3 id=\"sheet-1\">Sheet 1</h3><table>\n    <tbody>\n        <tr><th>COLUMN A</th><th>COLUMN B</th></tr>\n        <tr><td>1</td><td>bob</td></tr>\n        <tr><td>2</td><td>sam</td></tr>\n        <tr><td>3</td><td>steve</td></tr>\n        <tr><td>4</td><td>larry</td></tr>\n    </tbody>\n</table><h3 id=\"sheet-2\">Sheet 2</h3><table>\n    <tbody>\n        <tr><th>COLUMN A</th><th>COLUMN B</th></tr>\n        <tr><td>2</td><td></td></tr>\n        <tr><td>3</td><td></td></tr>\n        <tr><td>12</td><td></td></tr>\n        <tr><td>18</td><td></td></tr>\n    </tbody>\n</table><p>If you want to return the name associated with any of the numbers in sheet 2, you can plug the column containing the names in the Index, the cell containing the value that you want to find the associated name with as the first part of the match, and the column containing the IDs associated with the names as the second part of the match, the formula will spit out the name (or an error stating that the value doesn't match a name). The best part is, this formula can get dragged down the entire list of numbers to return the names associated with <strong>all</strong> of the IDs. Now, this is with a very small set of data, but it works just as well, and just as quickly if you're looking at 10,000 IDs.</p><p>With that being said, I hope you've learned the answer to a question you didn't even know you had, and I hope index-match starts saving you time (or snagging you a promotion!) immediately.</p><p>In summary we've learned the following:</p><ol><li>The function of INDEX</li><li>The function of MATCH (<em>protip: if all you want to do is see if something matches and don't need to see what it's associated with, you can use match by itself, is </em><code>=ISNUMBER(Match)</code><em>) which will give you a nice true false</em></li><li>How you can utilize a formula as a variable in another formula (you don't need to put in a second equals sign if you're doing this, but you do need another set of parenthesis)</li><li>How to write an Index(Match)) formula</li><li>The main use for Index-Match (by thinking outside the box, there are an infinite number of uses)</li><li>The realization that by knowing this formula, you never need to compare things by hand again and eye again!</li></ol><p>Next time, we'll discuss the other frequently used Excel tool, that together with the powers of Index-Match, literally make up the entry level analyst's toolkit. Also, as a bonus entry in the interim, you'll get a quick rundown of how you can leverage your knowledge of Index-match in a conversation with someone who knows what they're talking about.</p><p>In Hoc Signo,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/the-one-excel-formula-to-rule-them-all/","uuid":"59f81d21-fa84-4849-8506-a175860704bc","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5aff2f668ba5ce278d71d6c5"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673656","title":"Excel Showdown: Index Match vs. \"The Lookups\"","slug":"excel-index-match-vs-lookups","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/05/excel5@2x.jpg","excerpt":"Learn to hate V-Lookups and H-Lookups in favor of Index Match.","custom_excerpt":"Learn to hate V-Lookups and H-Lookups in favor of Index Match.","created_at_pretty":"18 May, 2018","published_at_pretty":"18 May, 2018","updated_at_pretty":"20 January, 2019","created_at":"2018-05-18T16:57:14.000-04:00","published_at":"2018-05-18T16:00:00.000-04:00","updated_at":"2019-01-20T18:19:45.000-05:00","meta_title":"Excel Showdown: Index Match vs. \"The Lookups\" | Hackers and Slackers","meta_description":"Learn to hate V-Lookups and H-Lookups in favor of Index Match.","og_description":"Learn to hate V-Lookups and H-Lookups in favor of Index Match.","og_image":"https://hackersandslackers.com/content/images/2018/05/excel5@2x.jpg","og_title":"Excel Showdown: Index Match vs. \"The Lookups\"","twitter_description":"Learn to hate V-Lookups and H-Lookups in favor of Index Match.","twitter_image":"https://hackersandslackers.com/content/images/2018/05/excel5@2x.jpg","twitter_title":"Excel Showdown: Index Match vs. \"The Lookups\"","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"You may have picked up in my last post that some fellow wizards (of which I now\nconsider you if you've mastered Index-Match, and you've activated developer\nmode) who may have started learning Excel prior to 2007 may drop the phrase\n\"lookup;\" generally in the context of \"V-Lookup\" (or perhaps \"H-Lookup\" if\nthey're working with data that was formatted by savages).\n\nThe question is, if people \"in the know\" are always talking about and using\nthese two formulas, then what do they do, and why haven't we learned it? The\nshort answer to this question is \"Index Match was introduced fairly recently,\nand does everything that V/H lookup can do, but faster, more flexibly, and\nrequiring no formatting on your part before using the function.\"\n\nTo get a little bit more specific, V lookup and H lookup give you the same\nresult as Index Match (that is, they give you the associated value of an item\nthat you're looking for in an array, this practice is called a lookup  in the\nbiz) but...\n\n 1. The two lookup formulae require data to be formatted a certain way in order\n    to work.\n 2. V lookup can only look up a value within a column (vertically) and H-lookup\n    within a row (Horizontally).\n 3. The lookup formulae consume a lot more computing power (which actually\n    becomes a big issue when you start dealing with potentially millions of\n    values).\n\nWith that being said, many people (and you'll get there too) tend to \"go with\nwhat they know works\" and because index-match was introduced more recently,\nthose that utilize the lookup functions never found the need to to learn a new\nfunction. However, there is literally NO benefit to using the lookups vs. using\nIndex(Match))  and you can sometimes make a great impression on a mentor if they\nuse lookups, and you can teach them index-match, or even better, if a job\nrequires you to know V-lookups, you can now impress them by explaining the\nbenefits of index-match.\n\nNext time, we make like a startup and PIVOT","html":"<p>You may have picked up in my last post that some fellow wizards (of which I now consider you if you've mastered Index-Match, and you've activated developer mode) who may have started learning Excel prior to 2007 may drop the phrase \"lookup;\" generally in the context of \"V-Lookup\" (or perhaps \"H-Lookup\" if they're working with data that was formatted by savages).</p><p>The question is, if people \"in the know\" are always talking about and using these two formulas, then what do they do, and why haven't we learned it? The short answer to this question is \"Index Match was introduced fairly recently, and does everything that V/H lookup can do, but faster, more flexibly, and requiring no formatting on your part before using the function.\"</p><p>To get a little bit more specific, V lookup and H lookup give you the same result as Index Match (that is, they give you the associated value of an item that you're looking for in an array, this practice is called <em>a lookup</em> in the biz) but...</p><ol><li>The two lookup formulae require data to be formatted a certain way in order to work.</li><li>V lookup can only look up a value within a column (vertically) and H-lookup within a row (Horizontally).</li><li>The lookup formulae consume a lot more computing power (which actually becomes a big issue when you start dealing with potentially millions of values).</li></ol><p>With that being said, many people (and you'll get there too) tend to \"go with what they know works\" and because index-match was introduced more recently, those that utilize the lookup functions never found the need to to learn a new function. <strong>However, there is literally NO benefit to using the lookups vs. using Index(Match))</strong> and you can sometimes make a great impression on a mentor if they use lookups, and you can teach them index-match, or even better, if a job requires you to know V-lookups, you can now impress them by explaining the benefits of index-match.</p><p>Next time, we make like a startup and <em><strong>PIVOT</strong></em></p>","url":"https://hackersandslackers.com/excel-index-match-vs-lookups/","uuid":"0e410235-9686-48e5-987f-8a3f3a031e3d","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5aff3e2a8ba5ce278d71d6c7"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673654","title":"How I Stopped Worrying and Learned to Love the Formula","slug":"learning-to-love-excel-formulas","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/05/excel2@2x.jpg","excerpt":"Learn to define and utilize Excel formulas.","custom_excerpt":"Learn to define and utilize Excel formulas.","created_at_pretty":"18 May, 2018","published_at_pretty":"18 May, 2018","updated_at_pretty":"20 January, 2019","created_at":"2018-05-17T20:24:19.000-04:00","published_at":"2018-05-17T21:11:09.000-04:00","updated_at":"2019-01-20T18:49:12.000-05:00","meta_title":"How I Learned to Love Excel Formulas | Hackers and Slackers","meta_description":"Adventures in ExcelLearn to define and utilize Excel formulas.","og_description":"Learn to define and utilize Excel formulas.","og_image":"https://hackersandslackers.com/content/images/2018/05/excel2@2x.jpg","og_title":"How I Stopped Worrying and Learned to Love Excel Formulas","twitter_description":"Learn to define and utilize Excel formulas.","twitter_image":"https://hackersandslackers.com/content/images/2018/05/excel2@2x.jpg","twitter_title":"How I Stopped Worrying and Learned to Love Excel Formulas","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"In my last entry, I took you on a journey to unlock the secrets of Excel;\nessentially making you a spreadsheet wizard. However, one important thing to\nremember at work is that a company can't function if it's comprised of only\nwizards (tell me to my face that Hogwarts was a functioning school!)\n\nThat begs the question, if I'm not doing wizardry, how can I still increase my\nExcel productivity? (that and the fact that macros can be scary at first!) The\nanswer lies in the utilization of wild combinations of Formulae to achieve\nresults that the program was never designed to give.\n\nFor the extremely green among you, an Excel formula is essentially text that\nenters a cell that asks Excel to do some form of calculation. To engage is this\nmost sacred of duties, one simply needs to click an empty cell, and hit the =\nsign, that's how all formulae start.\n\nYou'll notice that a BIG  list pops up with different formulae that you can\nchoose from, but the truth is twofold:\n\n 1. There are only maybe a handful of formulae worth using, and\n 2. Its way quicker (as well as more impressive to the less informed) to write\n    them in yourself.\n\nEach formula is comprised of the following parts:\n\n 1. The Command  which is the phrase immediately after the \"=\" which is what\n    tells Excel to do that thing.\n 2. An open parenthesis immediately after the command\n 3. One or more variables  which is what you're telling Excel to calculate with\n    (one hot tip  is that you can always tell what kind of variables you need as\n    well as how many by simply typing in the command you're looking to use).\n 4. A closed parenthesis (which is always how formulae should end).\n\nReading this, you may say \"so what, isn't who whole point of this blog to stop\nusing Excel as an overpriced (although still cheaper than a TI-89+) calculator?\"\nWhile this is a very valid question, please allow me to blow your mind  and\nremind you that anything you see on a computer is really just a combination of\n1s and 0s, and you can change those 1s and 0s into whatever you damn well\nplease...so long as you know how to ask. In other words, essentially anything\nyou see in Excel can be both calculated with or on by almost anything else, you\njust need to get creative.\n\nNow that this primer is done, let's try your newly acquired skills using the\nmost rudimentary Excel functions: =SUM. Don't fret about this small piece of\nhomework as once you have a basic grasp of how to write a formula, then we can\nstart to get really weird.\n\nHeres a small set of Data to paste into Excel:\n1\n2\n3\n4\n5\n6\n6\n7\n9\n\n\nNow try clicking on an empty cell to the right of any of the numbers and typing\nin =SUM(. You'll notice that Excel is asking for a variety of variables(in this\ncase, numbers) to find the sum of, and you'll notice that these are followed by\ncommas (variables are almost always separated by a comma in Excel, you'll also\nnotice that by clicking on any of the numbers, it's adds the cell's Column\nNumber and Row Number  to the variables, because  even though it's a location,\nit's pointing to a number, and that's all Excel sees.\nTo take this a step further, instead of painstakingly writing commas and\nclicking on cells over and over again, you can instead click the first cell, and\neither hold the mouse button and drag down to the bottom (the newbie way), you\ncan highlight the first cell, then hold shift, and click the last cell (which\nhighlights all the cells in between your clicks), or, you can use this move:\n\n 1. Highlight the first cell,\n 2. Hold down shift and control at the same time, and press the down arrow key \n    this will highlight all the cells in a column until you hit a blank one...\n 3. And yes, this totally works in any direction by using the other arrow keys.\n    You'd be very surprised how few people know of this trick that can literally\n    save HOURS of time.\n\nAfter using that super time saving hotkey, you'll notice that instead of the\nlocation of the first cell and a comma separating each of the other cell\nlocations, you'll find the address of the first cell, a colon, and the address\nof the last cell. This is shorthand for \"include all the cells between these two\nlocations  and in our parlance, it's called an Array  and you can often use an\narray instead of each individual variable in order to save time, and cover large\nareas with formula magic.\n\nIn summary, we've went over the following:\n\n * The definition of a formula in Excel\n * How to write a formula\n * The definition of a variable in a formula\n * How to identify the amount of, and type of variables that a particular\n   formula requires\n * A hotkey for highlighting a range of cells that will save you incalculable\n   amounts of time over the rest of your long career.\n\nNext time, we'll finally use this knowledge to begin bending Excel to our whim\nin order to manipulate, transform, and make sense of data with the one formula\nresume booster\n\nRespectfully,\n\n-Snacks","html":"<p>In my last entry, I took you on a journey to unlock the secrets of Excel; essentially making you a spreadsheet wizard. However, one important thing to remember at work is that a company can't function if it's comprised of only wizards (tell me to my face that Hogwarts was a functioning school!)</p><p>That begs the question, if I'm not doing wizardry, how can I still increase my Excel productivity? (that and the fact that macros can be scary at first!) The answer lies in the utilization of wild combinations of Formulae to achieve results that the program was never designed to give.</p><p>For the extremely green among you, an Excel formula is essentially text that enters a cell that asks Excel to do some form of calculation. To engage is this most sacred of duties, one simply needs to click an empty cell, and hit the = sign, that's how all formulae start.</p><p>You'll notice that a <strong>BIG</strong> list pops up with different formulae that you can choose from, but the truth is twofold:</p><ol><li>There are only maybe a handful of formulae worth using, and</li><li>Its way quicker (as well as more impressive to the less informed) to write them in yourself.</li></ol><p>Each formula is comprised of the following parts:</p><ol><li>The <strong>Command</strong> which is the phrase immediately after the \"=\" which is what tells Excel to <strong>do that thing</strong>.</li><li>An open parenthesis immediately after the command</li><li>One or more <strong>variables</strong> which is what you're telling Excel to calculate with (one <em>hot tip</em> is that you can always tell what kind of variables you need as well as how many by simply typing in the command you're looking to use).</li><li>A closed parenthesis (which is always how formulae should end).</li></ol><p>Reading this, you may say \"so what, isn't who whole point of this blog to stop using Excel as an overpriced (although still cheaper than a TI-89+) calculator?\" While this is a very valid question, please allow me to <strong>blow your mind</strong> and remind you that anything you see on a computer is really just a combination of 1s and 0s, and you can change those 1s and 0s into whatever you damn well please...so long as you know how to ask. In other words, essentially anything you see in Excel can be both calculated with or on by almost anything else, you just need to get creative.</p><p>Now that this primer is done, let's try your newly acquired skills using the most rudimentary Excel functions: =SUM. Don't fret about this small piece of homework as once you have a basic grasp of how to write a formula, then we can start to get really weird.</p><p>Heres a small set of Data to paste into Excel:<br><strong>1</strong><br><strong>2</strong><br><strong>3</strong><br><strong>4</strong><br><strong>5</strong><br><strong>6</strong><br><strong>6</strong><br><strong>7</strong><br><strong>9</strong></p><p><br>Now try clicking on an empty cell to the right of any of the numbers and typing in <code>=SUM(</code>. You'll notice that Excel is asking for a variety of variables(in this case, numbers) to find the sum of, and you'll notice that these are followed by commas (variables are almost always separated by a comma in Excel, you'll also notice that by clicking on any of the numbers, it's adds the cell's <strong>Column Number and Row Number</strong> to the variables, because  even though it's a location, it's pointing to a number, and that's all Excel sees.<br>To take this a step further, instead of painstakingly writing commas and clicking on cells over and over again, you can instead click the first cell, and either hold the mouse button and drag down to the bottom (the newbie way), you can highlight the first cell, then hold shift, and click the last cell (which highlights all the cells in between your clicks), or, you can use this move:</p><ol><li>Highlight the first cell,</li><li><strong>Hold down shift and control at the same time, and press the down arrow key</strong> this will highlight all the cells in a column until you hit a blank one...</li><li>And yes, this totally works in <strong>any direction by using the other arrow keys</strong>. You'd be very surprised how few people know of this trick that can literally save HOURS of time.</li></ol><p>After using that super time saving hotkey, you'll notice that instead of the location of the first cell and a comma separating each of the other cell locations, you'll find the address of the first cell, <strong>a colon</strong>, and the address of the last cell. <strong>This is shorthand for \"include all the cells between these two locations</strong> and in our parlance, it's called an <strong>Array</strong> and you can often use an array instead of each individual variable in order to save time, and cover large areas with formula magic.</p><p>In summary, we've went over the following:</p><ul><li>The definition of a formula in Excel</li><li>How to write a formula</li><li>The definition of a variable in a formula</li><li>How to identify the amount of, and type of variables that a particular formula requires</li><li>A hotkey for highlighting a range of cells that will save you incalculable amounts of time over the rest of your long career.</li></ul><p>Next time, we'll finally use this knowledge to begin bending Excel to our whim in order to manipulate, transform, and make sense of data with <em>the one formula resume booster</em></p><p>Respectfully,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/learning-to-love-excel-formulas/","uuid":"4869010b-a411-4ad0-9788-db94a001e8a2","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5afe1d3385c9095ab7ac18ec"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673653","title":"Excel Data Manipulation: a Guide For Everyone","slug":"excel-data-manipulation-for-everyone","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/05/excel@2x.jpg","excerpt":"Introduction to Excel Data Manipulation using TEXTJOIN and Macros.","custom_excerpt":"Introduction to Excel Data Manipulation using TEXTJOIN and Macros.","created_at_pretty":"16 May, 2018","published_at_pretty":"17 May, 2018","updated_at_pretty":"20 January, 2019","created_at":"2018-05-16T19:58:04.000-04:00","published_at":"2018-05-16T20:41:56.000-04:00","updated_at":"2019-01-20T18:13:15.000-05:00","meta_title":"Excel Data Manipulation: A Guide for Everyone | Hackers and Slackers","meta_description":"Introduction to Excel Data Manipulation. Get started with TEXTJOIN and Excel macros.","og_description":"Introduction to Excel Data Manipulation using TEXTJOIN and Macros.","og_image":"https://hackersandslackers.com/content/images/2018/05/excel@2x.jpg","og_title":"Excel Data Manipulation: A Guide for Everyone","twitter_description":"Introduction to Excel Data Manipulation using TEXTJOIN and Macros.","twitter_image":"https://hackersandslackers.com/content/images/2018/05/excel@2x.jpg","twitter_title":"Excel Data Manipulation: A Guide for Everyone","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"Alright, so unlike the other two guys, I work in corporate, which means I work\nwith people who only use their computers to send emails, schedule meetings\nthey'll cancel, and occasionally write a memo plus, because they're terrified of\nanyone associated with IT, they'll never ask for help. As such, I'm forced to do\na similar job as my comrades using the tool that everyone has: Excel. Luckily,\nExcel has nearly infinite functionality for those that seek to explore\nfurther... Join me in this first of a series of indefinite length: Excel data\nmanipulation, where we get you hooked on the gateway drug of data analysis,\nstarting from absolute ground zero.\n\nSo, for a fitting first entry... how to turn Excel into more than just a fancy\ncalculator.\n\nStep 1: Click file, options, customize ribbon. Then see how there's one box on\nthe right that isn't checked by default that says \"developer\", check it and see\nhow deep the rabbit hole goes. Congrats, You're now officially more advanced\nthan 85% of people who use Excel.\n\nStep 2: Hit alt (or command...I guess) F11, don't ask why, just do it. This will\nopen up the Excel VB Editor where you can actually engage in making Excel do\nwhatever you want it to. Also, a fun fact for later, keyboard shortcuts are your\nbest friend.\n\nStep 3: Google for whatever it is you want to do followed by the word \"Excel,\"\nbecause someone already wrote the code for it. Feel free to copy and paste it\nwithout mercy. This is how you learn, this is how everyone starts. Perhaps one\nday you will be able to write code that will assist another in this journey.\n\nStep 4: After copying the charitable programmer's code, click back to that VB\neditor write click the name of the sheet you're working on, hit insert, then\nmodule, then paste that code in there. Then hit save, and feel free to close the\nVB editor.\n\nHere's a useful tool to get you started: TEXTJOIN\n```\n\n----copy this whole thing----\nFunction TEXTJOIN(delimiter As String, ignore_empty As Boolean, ParamArray cell_ar() As Variant)\nFor Each cellrng In cell_ar\nFor Each cell In cellrng\nIf ignore_empty = False Then\nresult = result & cell & delimiter\nElseIf cell <> \"\" Then\nresult = result & cell & delimiter\nEnd If\nEnd If\nNext cell\nNext cellrng\nTEXTJOIN = Left(result, Len(result) - Len(delimiter))\nEnd Function\n----stop copying---\n\nStep 5: Go back to that VB editor, right click the name of the sheet you're\nworking on, click insert, and then paste everything in the last step into the\nwindow. Hit save, and close the editor. Don't save it in \"Personal\" just yet,\nthat's for another time.\n\nStep 6:  start with the formula =textjoin  (we'll talk more about formulas\nlater), and watch as a formula that didn't exist before suddenly does because\nYOU DID THAT!\nWhat this does is take the information in any row or column and combine it with\na \"delimiter\" that you choose (the \";\" semicolon is popular for reasons we will\ndiscuss later) into one giant cell. No longer do you need to type\n=concatenate(click, \";\", click) 1000 times to combine the cells in a list!\n\nStep 7: Save this file as a Macro enabled workbook, because if you want to use\nit again, your workbooks now need to be extra special.\n\nStep 8: The next time you need to concatenate an entire table of values for\nwhatever reason, plop that in there, and do what they assume is going to be a\nfull day's work in 45 seconds.\n\nSo, I hope that helped just a little bit, and we'll be back next time to learn\nhow to use Excel's overly complex series of formulas to do things that Excel\nreally shouldn't be used for, but who are we kidding? It's all we've got!\n\nCheers,\n\n- Snacks","html":"<p>Alright, so unlike the other two guys, I work in corporate, which means I work with people who only use their computers to send emails, schedule meetings they'll cancel, and occasionally write a memo plus, because they're terrified of anyone associated with IT, they'll never ask for help. As such, I'm forced to do a similar job as my comrades using the tool that everyone has: Excel. Luckily, Excel has nearly infinite functionality for those that seek to explore further... Join me in this first of a series of indefinite length: Excel data manipulation, where we get you hooked on the gateway drug of data analysis, starting from absolute ground zero.</p><p>So, for a fitting first entry... how to turn Excel into more than just a fancy calculator.</p><p><strong>Step 1</strong>: Click file, options, customize ribbon. Then see how there's one box on the right that isn't checked by default that says \"developer\", check it and see how deep the rabbit hole goes. Congrats, You're now officially more advanced than 85% of people who use Excel.</p><p><strong>Step 2</strong>: Hit alt (or command...I guess) F11, don't ask why, just do it. This will open up the Excel VB Editor where you can actually engage in making Excel do whatever you want it to. Also, a fun fact for later, keyboard shortcuts are your best friend.</p><p><strong>Step 3</strong>: Google for whatever it is you want to do followed by the word \"Excel,\" because someone already wrote the code for it. Feel free to copy and paste it without mercy. This is how you learn, this is how everyone starts. Perhaps one day you will be able to write code that will assist another in this journey.</p><p><strong>Step 4</strong>: After copying the charitable programmer's code, click back to that VB editor write click the name of the sheet you're working on, hit insert, then module, then paste that code in there. Then hit save, and feel free to close the VB editor.</p><p>Here's a useful tool to get you started: <strong>TEXTJOIN</strong><br>```</p><pre><code>----copy this whole thing----\nFunction TEXTJOIN(delimiter As String, ignore_empty As Boolean, ParamArray cell_ar() As Variant)\nFor Each cellrng In cell_ar\nFor Each cell In cellrng\nIf ignore_empty = False Then\nresult = result &amp; cell &amp; delimiter\nElseIf cell &lt;&gt; \"\" Then\nresult = result &amp; cell &amp; delimiter\nEnd If\nEnd If\nNext cell\nNext cellrng\nTEXTJOIN = Left(result, Len(result) - Len(delimiter))\nEnd Function\n----stop copying---</code></pre><p><strong>Step 5</strong>: Go back to that VB editor, right click the name of the sheet you're working on, click insert, and then paste everything in the last step into the window. Hit save, and close the editor. Don't save it in \"Personal\" just yet, that's for another time.</p><p><strong>Step 6:</strong> start with the formula <code>=textjoin</code> (we'll talk more about formulas later), and watch as a formula that didn't exist before suddenly does because YOU DID THAT!<br>What this does is take the information in any row or column and combine it with a \"delimiter\" that you choose (the \";\" semicolon is popular for reasons we will discuss later) into one giant cell. No longer do you need to type =concatenate(click, \";\", click) 1000 times to combine the cells in a list!</p><p><strong>Step 7</strong>: Save this file as a Macro enabled workbook, because if you want to use it again, your workbooks now need to be extra special.</p><p><strong>Step 8</strong>: The next time you need to concatenate an entire table of values for whatever reason, plop that in there, and do what they assume is going to be a full day's work in 45 seconds.</p><p>So, I hope that helped just a little bit, and we'll be back next time to learn how to use Excel's overly complex series of formulas to do things that Excel really shouldn't be used for, but who are we kidding? It's all we've got!</p><p>Cheers,</p><p>- Snacks</p>","url":"https://hackersandslackers.com/excel-data-manipulation-for-everyone/","uuid":"f20e1133-2796-4125-a0e7-817c064ccb36","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5afcc58c3d0bf921d8b88063"}}]}},"pageContext":{"slug":"excel","limit":12,"skip":12,"numberOfPages":2,"humanPageNumber":2,"prevPageNumber":1,"nextPageNumber":null,"previousPagePath":"/tag/excel/","nextPagePath":null}}