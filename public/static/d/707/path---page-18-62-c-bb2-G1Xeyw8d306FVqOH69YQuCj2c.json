{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736f4","title":"Lynx Roundup, September 9th","slug":"lynx-roundup-september-9th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/83@2x.jpg","excerpt":"Healthchecks in Distributed Systems!  Optical electronics!  Benchmarking Serverless vs Elixir!","custom_excerpt":"Healthchecks in Distributed Systems!  Optical electronics!  Benchmarking Serverless vs Elixir!","created_at_pretty":"05 September, 2018","published_at_pretty":"09 September, 2018","updated_at_pretty":"09 September, 2018","created_at":"2018-09-05T15:40:59.000-04:00","published_at":"2018-09-09T07:00:00.000-04:00","updated_at":"2018-09-09T07:00:00.000-04:00","meta_title":"Healthchecks in Distributed Systems!  Optical electronics!  Benchmarking Serverless vs Elixir! | Hackers And Slackers","meta_description":"Healthchecks in Distributed Systems!  Optical electronics!  Benchmarking Serverless vs Elixir!","og_description":"Healthchecks in Distributed Systems!  Optical electronics!  Benchmarking Serverless vs Elixir!","og_image":"https://hackersandslackers.com/content/images/lynx/83@2x.jpg","og_title":"Lynx Roundup, September 9th","twitter_description":"Healthchecks in Distributed Systems!  Optical electronics!  Benchmarking Serverless vs Elixir!","twitter_image":"https://hackersandslackers.com/content/images/lynx/83@2x.jpg","twitter_title":"Lynx Roundup, September 9th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3\n\n\n\nhttps://pudding.cool/2018/08/pockets/\n\n\n\nhttps://medium.com/@TeamCoworker/a-simple-guide-to-talking-about-workplace-issues-with-your-coworkers-1b0ce08c3a8a\n\n\n\nhttps://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc\n\n\n\nhttps://medium.com/@copyconstruct/health-checks-in-distributed-systems-aa8a0e8c1672\n\n\n\nhttp://www.aalto.fi/en/current/news/2018-07-30/\n\n\n\nIn my 30+ year programming career, every single, bizarrely obscure bug that took\nweeks to chase down has ended up being a one-line fix.\n\n— Josh Susser (@joshsusser) August 14, 2018\n[https://twitter.com/joshsusser/status/1029480886033506304?ref_src=twsrc%5Etfw]","html":"<p></p><p><a href=\"https://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3\">https://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3</a></p><p></p><p><a href=\"https://pudding.cool/2018/08/pockets/\">https://pudding.cool/2018/08/pockets/</a></p><p></p><p><a href=\"https://medium.com/@TeamCoworker/a-simple-guide-to-talking-about-workplace-issues-with-your-coworkers-1b0ce08c3a8a\">https://medium.com/@TeamCoworker/a-simple-guide-to-talking-about-workplace-issues-with-your-coworkers-1b0ce08c3a8a</a></p><p></p><p><a href=\"https://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc\">https://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc</a></p><p></p><p><a href=\"https://medium.com/@copyconstruct/health-checks-in-distributed-systems-aa8a0e8c1672\">https://medium.com/@copyconstruct/health-checks-in-distributed-systems-aa8a0e8c1672</a></p><p></p><p><a href=\"http://www.aalto.fi/en/current/news/2018-07-30/\">http://www.aalto.fi/en/current/news/2018-07-30/</a></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">In my 30+ year programming career, every single, bizarrely obscure bug that took weeks to chase down has ended up being a one-line fix.</p>&mdash; Josh Susser (@joshsusser) <a href=\"https://twitter.com/joshsusser/status/1029480886033506304?ref_src=twsrc%5Etfw\">August 14, 2018</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure>","url":"https://hackersandslackers.com/lynx-roundup-september-9th/","uuid":"92943027-0547-4ea7-b3fc-1bd90323c955","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b90314b1fc1fc7d92b5c4e4"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736f3","title":"Lynx Roundup, September 8th","slug":"lynx-roundup-september-8th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx70@2x.jpg","excerpt":"Molecular clocks!  A good Scala tutorial!  Math for Machine Learning!","custom_excerpt":"Molecular clocks!  A good Scala tutorial!  Math for Machine Learning!","created_at_pretty":"05 September, 2018","published_at_pretty":"08 September, 2018","updated_at_pretty":"08 September, 2018","created_at":"2018-09-05T15:37:43.000-04:00","published_at":"2018-09-08T07:00:00.000-04:00","updated_at":"2018-09-08T07:00:00.000-04:00","meta_title":"Molecular clocks!  A good Scala tutorial!  Math for Machine Learning! | Hackers And Slackers","meta_description":"Molecular clocks!  A good Scala tutorial!  Math for Machine Learning!","og_description":"Molecular clocks!  A good Scala tutorial!  Math for Machine Learning!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx70@2x.jpg","og_title":"Lynx Roundup, September 8th","twitter_description":"Molecular clocks!  A good Scala tutorial!  Math for Machine Learning!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx70@2x.jpg","twitter_title":"Lynx Roundup, September 8th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"Open science essentials in 2 minutes, part 4\n\nBefore a research article is published in a journal you can make it freely\navailable for anyone to read. You could do this on your own website, but you can\nalso do it on a preprint server, such as psyarxiv.com [http://psyarxiv.com/],\nwhere other researchers also share their preprints, which is supported by the \nOSF\n[https://mindhacks.com/2017/11/09/open-science-essentials-the-open-science-framework/] \n so will be around for a while, and which allows you to find others’ research\neasily.\n\nPreprint servers have been used for decades in physics, but are now becoming\nmore common across academia. Preprints allow rapid dissemination of your\nresearch, which is especially important for early career researchers. Preprints\ncan be cited and indexing services like Google Scholar will join your preprint\ncitations with the record of your eventual journal publication.\n\nPreprints also mean that work can be reviewed (and errors-caught) before final\npublication.\n\nWhat happens when my paper is published?\n\nYour work is still available in preprint form, which means that there is a\nnon-paywalled version and so more people will read and cite it. If you upload a\nversion of the manuscript after it has been accepted for publication that is\ncalled a post-print.\n\nWhat about copyright?\n\nMostly journals own the formatted, typeset version of your published manuscript.\nThis is why you often aren’t allowed to upload the PDF of this to your own\nwebsite or a preprint server, but there’s nothing stopping you uploading a\nversion with the same text (so the formatting will be different, but the\ninformation is the same).\n\nWill journals refuse my paper if it is already “published” via a preprint?\n\nMost journals\n[https://en.wikipedia.org/wiki/List_of_academic_journals_by_preprint_policy] \nallow, or even encourage preprints. A diminishing minority don’t. If you’re\ninterested you can search for specific journal policies here\n[http://www.sherpa.ac.uk/romeo/index.php].\n\nWill I get scooped?\n\nPreprints allow you to timestamp your work before publication, so they can act\nto establish priority on a findings which is protection against being scooped.\nOf course, if you have a project where you don’t want to let anyone know you are\nworking in that area until you’re published, preprints may not be suitable.\n\nWhen should I upload a preprint?\n\nUpload a preprint at the point of submission to a journal, and for each further\nsubmission and upon acceptance (making it a postprint).\n\nWhat’s to stop people uploading rubbish to a preprint server?\n\nThere’s nothing to stop this, but since your reputation for doing quality work\nis one of the most important things a scholar has I don’t recommend it.\n\nUseful links:\n\n * psyarxiv [http://psyarxiv.com/]  – preprint server for psychology\n * List of academic journals by preprint policy\n   [https://en.wikipedia.org/wiki/List_of_academic_journals_by_preprint_policy] \n   (Wikipedia)\n * Search publishers policies on preprints by journal name at ShERPA/RoMEO\n   [http://www.sherpa.ac.uk/romeo/index.php]\n * The preprint dilemma [http://science.sciencemag.org/content/357/6358/1344] \n   (Jocelyn Kaiser in Science, 2017).\n * ASAPbio Preprint FAQ [http://asapbio.org/preprint-info/preprint-faq]\n * Bourne et al (2016) Ten simple rules for considering preprints\n   [https://peerj.com/preprints/2669v1/]\n\nPart of a series:\n\n 1. Pre-registration\n    [https://mindhacks.com/2017/11/09/open-science-essentials-pre-registration/]\n 2. The Open Science Framework\n    [https://mindhacks.com/2017/11/09/open-science-essentials-the-open-science-framework/]\n 3. Reproducibility\n    [https://mindhacks.com/2018/01/02/open-science-essentials-reproducibility/]\n\n\n\nhttps://www.workplacefairness.org/independent-contractors\n\n\n\nhttps://www.electronicdesign.com/analog/can-t-afford-atomic-clock-get-molecular-one\n\n\n\nhttps://medium.com/@durga.spirit/learning-scala-from-0-60-part-i-dc095d274b78\n\n\n\nhttps://medium.com/technomancy/the-math-required-for-machine-learning-af0d90db3903\n\n\n\nhttps://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981\n\n\n\nhttps://www.brianlikespostgres.com/cost-of-a-join.html","html":"<p></p><figure class=\"kg-card kg-embed-card\"><p><i>Open science essentials in 2 minutes, part 4</i></p>\n<p>Before a research article is published in a journal you can make it freely available for anyone to read. You could do this on your own website, but you can also do it on a preprint server, such as <a href=\"http://psyarxiv.com/\">psyarxiv.com</a>, where other researchers also share their preprints, which is supported by the <a href=\"https://mindhacks.com/2017/11/09/open-science-essentials-the-open-science-framework/\">OSF</a> so will be around for a while, and which allows you to find others&#8217; research easily.</p>\n<p>Preprint servers have been used for decades in physics, but are now becoming more common across academia. Preprints allow rapid dissemination of your research, which is especially important for early career researchers. Preprints can be cited and indexing services like Google Scholar will join your preprint citations with the record of your eventual journal publication.</p>\n<p>Preprints also mean that work can be reviewed (and errors-caught) before final publication.</p>\n<p><b>What happens when my paper is published?</b></p>\n<p>Your work is still available in preprint form, which means that there is a non-paywalled version and so more people will read and cite it. If you upload a version of the manuscript after it has been accepted for publication that is called a post-print.</p>\n<p><b>What about copyright?</b></p>\n<p>Mostly journals own the formatted, typeset version of your published manuscript. This is why you often aren&#8217;t allowed to upload the PDF of this to your own website or a preprint server, but there&#8217;s nothing stopping you uploading a version with the same text (so the formatting will be different, but the information is the same).</p>\n<p><b>Will journals refuse my paper if it is already &#8220;published&#8221; via a preprint?</b></p>\n<p><a href=\"https://en.wikipedia.org/wiki/List_of_academic_journals_by_preprint_policy\">Most journals</a> allow, or even encourage preprints. A diminishing minority don&#8217;t. If you&#8217;re interested you can search for specific journal policies <a href=\"http://www.sherpa.ac.uk/romeo/index.php\">here</a>.</p>\n<p><b>Will I get scooped?</b></p>\n<p>Preprints allow you to timestamp your work before publication, so they can act to establish priority on a findings which is protection against being scooped. Of course, if you have a project where you don&#8217;t want to let anyone know you are working in that area until you&#8217;re published, preprints may not be suitable.</p>\n<p><b>When should I upload a preprint?</b></p>\n<p>Upload a preprint at the point of submission to a journal, and for each further submission and upon acceptance (making it a postprint).</p>\n<p><b>What&#8217;s to stop people uploading rubbish to a preprint server?</b></p>\n<p>There&#8217;s nothing to stop this, but since your reputation for doing quality work is one of the most important things a scholar has I don&#8217;t recommend it.</p>\n<p>Useful links:</p>\n<ul>\n<li><a href=\"http://psyarxiv.com/\">psyarxiv</a> &#8211; preprint server for psychology</li>\n<li><a href=\"https://en.wikipedia.org/wiki/List_of_academic_journals_by_preprint_policy\">List of academic journals by preprint policy</a> (Wikipedia)</li>\n<li>Search publishers policies on preprints by journal name at <a href=\"http://www.sherpa.ac.uk/romeo/index.php\">ShERPA/RoMEO</a></li>\n<li><a href=\"http://science.sciencemag.org/content/357/6358/1344\">The preprint dilemma</a> (Jocelyn Kaiser in Science, 2017).</li>\n<li><a href=\"http://asapbio.org/preprint-info/preprint-faq\">ASAPbio Preprint FAQ</a></li>\n<li>Bourne et al (2016) <a href=\"https://peerj.com/preprints/2669v1/\">Ten simple rules for considering preprints</a></li>\n</ul>\n<p>Part of a series:</p>\n<ol>\n<li><a href=\"https://mindhacks.com/2017/11/09/open-science-essentials-pre-registration/\">Pre-registration</a></li>\n<li><a href=\"https://mindhacks.com/2017/11/09/open-science-essentials-the-open-science-framework/\">The Open Science Framework</a></li>\n<li><a href=\"https://mindhacks.com/2018/01/02/open-science-essentials-reproducibility/\">Reproducibility</a></li>\n</ol>\n</figure><p></p><p><a href=\"https://www.workplacefairness.org/independent-contractors\">https://www.workplacefairness.org/independent-contractors</a></p><p></p><p><a href=\"https://www.electronicdesign.com/analog/can-t-afford-atomic-clock-get-molecular-one\">https://www.electronicdesign.com/analog/can-t-afford-atomic-clock-get-molecular-one</a></p><p></p><p><a href=\"https://medium.com/@durga.spirit/learning-scala-from-0-60-part-i-dc095d274b78\">https://medium.com/@durga.spirit/learning-scala-from-0-60-part-i-dc095d274b78</a></p><p></p><p><a href=\"https://medium.com/technomancy/the-math-required-for-machine-learning-af0d90db3903\">https://medium.com/technomancy/the-math-required-for-machine-learning-af0d90db3903</a></p><p></p><p><a href=\"https://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981\">https://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981</a></p><p></p><p><a href=\"https://www.brianlikespostgres.com/cost-of-a-join.html\">https://www.brianlikespostgres.com/cost-of-a-join.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-8th/","uuid":"4ffe3b16-d886-4169-9a0e-94cc6f77b0c7","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b9030871fc1fc7d92b5c4e1"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736f2","title":"Lynx Roundup, September 7th","slug":"lynx-roundup-september-7th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/82@2x.jpg","excerpt":"Self-tuning data structures for databases!  Game AI!  Pandas internals!","custom_excerpt":"Self-tuning data structures for databases!  Game AI!  Pandas internals!","created_at_pretty":"05 September, 2018","published_at_pretty":"07 September, 2018","updated_at_pretty":"07 September, 2018","created_at":"2018-09-05T15:34:33.000-04:00","published_at":"2018-09-07T07:00:00.000-04:00","updated_at":"2018-09-07T07:00:00.000-04:00","meta_title":"Self-tuning data structures for databases!  Game AI!  Pandas internals! | Hackers And Slackers","meta_description":"Self-tuning data structures for databases!  Game AI!  Pandas internals!","og_description":"Self-tuning data structures for databases!  Game AI!  Pandas internals!","og_image":"https://hackersandslackers.com/content/images/lynx/82@2x.jpg","og_title":"Lynx Roundup, September 7th","twitter_description":"Self-tuning data structures for databases!  Game AI!  Pandas internals!","twitter_image":"https://hackersandslackers.com/content/images/lynx/82@2x.jpg","twitter_title":"Lynx Roundup, September 7th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.zdnet.com/article/zen-and-the-art-of-data-structures-from-self-tuning-to-self-designing-data-systems/\n\n\n\nhttps://www.gamedev.net/articles/programming/artificial-intelligence/the-total-beginners-guide-to-game-ai-r4942\n\n\n\nhttps://github.com/UIUC-PPL/charmpy\n\n\n\nhttps://medium.com/@NetflixTechBlog/notebook-innovation-591ee3221233\n\n\n\nhttps://tomaugspurger.github.io/pandas-moral-philosophy.html\n\n\n\nhttps://www.quantamagazine.org/how-insulin-helped-create-ant-societies-20180814/\n\n\n\nhttp://datagenetics.com/blog/august12018/index.html","html":"<p></p><p><a href=\"https://www.zdnet.com/article/zen-and-the-art-of-data-structures-from-self-tuning-to-self-designing-data-systems/\">https://www.zdnet.com/article/zen-and-the-art-of-data-structures-from-self-tuning-to-self-designing-data-systems/</a></p><p></p><p><a href=\"https://www.gamedev.net/articles/programming/artificial-intelligence/the-total-beginners-guide-to-game-ai-r4942\">https://www.gamedev.net/articles/programming/artificial-intelligence/the-total-beginners-guide-to-game-ai-r4942</a></p><p></p><p><a href=\"https://github.com/UIUC-PPL/charmpy\">https://github.com/UIUC-PPL/charmpy</a></p><p></p><p><a href=\"https://medium.com/@NetflixTechBlog/notebook-innovation-591ee3221233\">https://medium.com/@NetflixTechBlog/notebook-innovation-591ee3221233</a></p><p></p><p><a href=\"https://tomaugspurger.github.io/pandas-moral-philosophy.html\">https://tomaugspurger.github.io/pandas-moral-philosophy.html</a></p><p></p><p><a href=\"https://www.quantamagazine.org/how-insulin-helped-create-ant-societies-20180814/\">https://www.quantamagazine.org/how-insulin-helped-create-ant-societies-20180814/</a></p><p></p><p><a href=\"http://datagenetics.com/blog/august12018/index.html\">http://datagenetics.com/blog/august12018/index.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-7th/","uuid":"b8594043-356d-4aa9-a52f-19e38a40b0a7","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b902fc91fc1fc7d92b5c4de"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736f1","title":"Lynx Roundup, September 6th","slug":"lynx-roundup-september-6th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/81@2x.jpg","excerpt":"Hypothesis testing in Python!  Readable RegEx!  More Git tips!","custom_excerpt":"Hypothesis testing in Python!  Readable RegEx!  More Git tips!","created_at_pretty":"05 September, 2018","published_at_pretty":"06 September, 2018","updated_at_pretty":"06 September, 2018","created_at":"2018-09-05T15:31:15.000-04:00","published_at":"2018-09-06T07:00:00.000-04:00","updated_at":"2018-09-06T07:00:00.000-04:00","meta_title":"Hypothesis testing in Python!  Readable RegEx!  More Git tips! | Hackers And Slackers","meta_description":"Hypothesis testing in Python!  Readable RegEx!  More Git tips!","og_description":"Hypothesis testing in Python!  Readable RegEx!  More Git tips!","og_image":"https://hackersandslackers.com/content/images/lynx/81@2x.jpg","og_title":"Lynx Roundup, September 6th","twitter_description":"Hypothesis testing in Python!  Readable RegEx!  More Git tips!","twitter_image":"https://hackersandslackers.com/content/images/lynx/81@2x.jpg","twitter_title":"Lynx Roundup, September 6th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0201581\n\n\n\nhttps://realpython.com/advanced-git-for-pythonistas/\n\n\n\nhttps://neurosciencenews.com/anger-intelligence-narcissists-9695/\n\n\n\n15 Statistical Hypothesis Tests in Python (Cheat Sheet)\n[https://machinelearningmastery.com/statistical-hypothesis-tests-in-python-cheat-sheet/]\n\nhttps://dev.to/bachnxhedspi/verbalexpressions---regularexpression-made-easy-27a8\n\n\n\nhttps://www.quora.com/What-are-some-good-ways-of-learning-functional-reactive-programming\n\n\n\nhttps://hackernoon.com/rethinking-fast-and-slow-in-data-science-b2ce18d5b054","html":"<p></p><p><a href=\"http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0201581\">http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0201581</a></p><p></p><p><a href=\"https://realpython.com/advanced-git-for-pythonistas/\">https://realpython.com/advanced-git-for-pythonistas/</a></p><p></p><p><a href=\"https://neurosciencenews.com/anger-intelligence-narcissists-9695/\">https://neurosciencenews.com/anger-intelligence-narcissists-9695/</a></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"https://machinelearningmastery.com/statistical-hypothesis-tests-in-python-cheat-sheet/\">15 Statistical Hypothesis Tests in Python (Cheat Sheet)</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++){if(d=i[c],!d.getAttribute(\"data-secret\"))f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f);if(g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(~~g<200)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://machinelearningmastery.com/statistical-hypothesis-tests-in-python-cheat-sheet/embed/\" width=\"600\" height=\"338\" title=\"&#8220;15 Statistical Hypothesis Tests in Python (Cheat Sheet)&#8221; &#8212; Machine Learning Mastery\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><p><a href=\"https://dev.to/bachnxhedspi/verbalexpressions---regularexpression-made-easy-27a8\">https://dev.to/bachnxhedspi/verbalexpressions---regularexpression-made-easy-27a8</a></p><p></p><p><a href=\"https://www.quora.com/What-are-some-good-ways-of-learning-functional-reactive-programming\">https://www.quora.com/What-are-some-good-ways-of-learning-functional-reactive-programming</a></p><p></p><p><a href=\"https://hackernoon.com/rethinking-fast-and-slow-in-data-science-b2ce18d5b054\">https://hackernoon.com/rethinking-fast-and-slow-in-data-science-b2ce18d5b054</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-6th/","uuid":"5036feee-598a-46a5-89dd-4d847c9eed26","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b902f031fc1fc7d92b5c4db"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736f0","title":"Lynx Roundup, September 5th","slug":"lynx-roundup-september-5th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx61@2x.jpg","excerpt":"Git tips!  Python tail call recursion!  Nested window functions in SQL!","custom_excerpt":"Git tips!  Python tail call recursion!  Nested window functions in SQL!","created_at_pretty":"05 September, 2018","published_at_pretty":"05 September, 2018","updated_at_pretty":"05 September, 2018","created_at":"2018-09-05T15:23:43.000-04:00","published_at":"2018-09-05T15:30:21.000-04:00","updated_at":"2018-09-05T15:30:21.000-04:00","meta_title":"Git tips!  Python tail call recursion!  Nested window functions in SQL! | Hackers And Slackers","meta_description":"Git tips!  Python tail call recursion!  Nested window functions in SQL!","og_description":"Git tips!  Python tail call recursion!  Nested window functions in SQL!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx61@2x.jpg","og_title":"Lynx Roundup, September 5th","twitter_description":"Git tips!  Python tail call recursion!  Nested window functions in SQL!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx61@2x.jpg","twitter_title":"Lynx Roundup, September 5th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://medium.freecodecamp.org/follow-these-simple-rules-and-youll-become-a-git-and-github-master-e1045057468f\n\n\n\nCurrying in calculus, PDEs, programming, and categories\n[https://www.johndcook.com/blog/2018/08/11/currying/]\n\nIn an effort to keep up my grueling regime of publishing at least one blog post\nper year, I’ve decided to write today about a neat little problem I ran across.\nThe problem is; how do you calculate the cumulative sum of a time series if\nthere are transactions that reset the count to 0?\n\nNaturally, there are ways to engineer around this problem without complex\nqueries doing the heavy lifting (recording the current balance along side your\ntransaction history, for example). However, if you occasionally find yourself\nbeing asked for a number crunch, half with the expectation of your response\nbeing:\n\n\n\n…it’s not a bad idea to keep this query in your back pocket.\n\nA Convoluted Example\nAlice decides to start a bank. Her engineers are clever and they decide that\nthey can save space in their transaction log by just reporting changes in the\nbalance. They keep the current balance in another table and decide if Grace the\nauditor comes around, they’ll just sum up all of the transactions in their log.\nGood job guys.\n\n\n\nBob is an exceptional client with good credit history. Grace takes a quick\nglance at his balance history and decides everything looks fine. As she leafs\nthrough the other records and pauses at Sybil’s balance history. It’s massive.\nThe problem is that Sybil’s been through a number of bankruptcies that should\nhave set her balance to 0. She breaks the news to Alice. You can imagine that\nAlice was not too happy.\n\n\n\nTo fix the problem, the engineers decide to introduce a new transaction that\nresets the balance to 0.\n\nThe Data Set\nIn order to satisfy Grace, we’ve got to come up with a balance history for both\nBob and Sybil using just transactions. Here’s our data set in Postgres SQL.\nWe’ll use text and integer columns along with small numbers to simplify the\nproblem.\n\n\nCREATE TABLE transactions (\n  id integer\n  ,account text\n  ,type text\n  ,amount integer\n);\n\nINSERT INTO transactions\nVALUES\n  (1, 'bob', 'deposit', 5)\n  ,(2, 'bob', 'withdrawal', -2)\n  ,(3, 'bob', 'deposit', 3)\n  ,(4, 'sybil', 'deposit', 5)\n  ,(5, 'sybil', 'withdrawal', -2)\n  ,(6, 'sybil', 'bankrupt', 0)\n  ,(7, 'sybil', 'deposit' , 3)\n  ,(8, 'sybil', 'deposit', 7)\n  ,(9, 'sybil', 'bankrupt', 0)\n  ,(10, 'sybil', 'deposit' , 5)\n;\n\n\nSimple Cumulative Sums\nOur first job is to calculate Bob’s balance history. This section is a review of\nbasic window functions. If you’re used to using them to create cumulative sums,\nfeel free to skip ahead. Here’s what we’re trying to produce:\n\n\n id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  1 | bob     | deposit    |      5 |   5\n  2 | bob     | withdrawal |     -2 |   3\n  3 | bob     | deposit    |      3 |   6\n\n\nA window function has two parts; the partition and the order. The partition\ndefines which columns are going to be grouped together in the window. The order\ndefines how to sort the rows in the window.\n\nIn the example above, we want to group transactions by their account. We then\nwant to order them by their ID. Now, when we use the Sum function, it will sum\nfrom the first transaction in the partition, to the current row:\n\n\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,sum(amount) OVER account\nFROM transactions\nWHERE account = 'bob'\nWINDOW account AS (\n  PARTITION BY account\n  ORDER BY id\n);\n\n\nHowever, if we use the same query for Sybil, we run into our next problem.\n\n\n id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |   3\n  7 | sybil   | deposit    |      3 |   6\n  8 | sybil   | deposit    |      7 |  13\n  9 | sybil   | bankrupt   |      0 |  13\n 10 | sybil   | deposit    |      5 |  18\n\n\nCumulative Sums With Resets\nThe trick to calculating Sybil’s balance is using a nested set of window\nfunctions to make the query sensitive to the transaction type. Here’s what we’re\ntrying to achieve:\n\n\n id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |   0\n  7 | sybil   | deposit    |      3 |   3\n  8 | sybil   | deposit    |      7 |  10\n  9 | sybil   | bankrupt   |      0 |   0\n 10 | sybil   | deposit    |      5 |   5\n\n\nOne possible solution is to try and subtract the cumulative sum using a CASE\nstatement:\n\n\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,CASE\n    WHEN type = 'bankrupt' THEN\n      -1*sum(amount) OVER account\n    ELSE\n      sum(amount) OVER account\n  END AS sum\nFROM transactions\nWHERE account = 'sybil'\nWINDOW account AS (\n  PARTITION BY account\n  ORDER BY id\n);\n\n\nThe trouble with this approach is that the window function does not use the\noutput of the last row to calculate the next row. The only thing we’ve done is\nto alter the values of the bankrupt transactions:\n\n\n id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |  -3\n  7 | sybil   | deposit    |      3 |   6\n  8 | sybil   | deposit    |      7 |  13\n  9 | sybil   | bankrupt   |      0 | -13\n 10 | sybil   | deposit    |      5 |  18\n\n\nNesting window functions solves this problem. We’ll build up the query by first\nidentifying the transactions that reset the count:\n\n\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,(type = 'bankrupt')::int AS do_reset\nFROM transactions\nWHERE account = 'sybil'\n;\n\n\nRunning that query we get:\n\n\n id | account |    type    | amount | do_reset\n----+---------+------------+--------+----------\n  4 | sybil   | deposit    |      5 |        0\n  5 | sybil   | withdrawal |     -2 |        0\n  6 | sybil   | bankrupt   |      0 |        1\n  7 | sybil   | deposit    |      3 |        0\n  8 | sybil   | deposit    |      7 |        0\n  9 | sybil   | bankrupt   |      0 |        1\n 10 | sybil   | deposit    |      5 |        0\n\n\nCasting boolean values to integers allows us to then perform a cumulative sum\nover do_reset. This sum will allow us to group transactions chronologically, by\ntheir association to a resetting transaction.\n\n\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,sum((type = 'bankrupt')::int) OVER account AS reset_id\nFROM transactions\nWHERE account = 'sybil'\nWINDOW account AS (\n  PARTITION BY account\n  ORDER BY id\n);\n\n\nRunning that query we get:\n\n\n id | account |    type    | amount | reset_id\n----+---------+------------+--------+----------\n  4 | sybil   | deposit    |      5 |        0\n  5 | sybil   | withdrawal |     -2 |        0\n  6 | sybil   | bankrupt   |      0 |        1\n  7 | sybil   | deposit    |      3 |        1\n  8 | sybil   | deposit    |      7 |        1\n  9 | sybil   | bankrupt   |      0 |        2\n 10 | sybil   | deposit    |      5 |        2\n\n\nFinally, we can nest this query inside another window function, and perform a\ncumulative sum on amount, using the reset_id we’ve just created:\n\n\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,sum(amount) OVER resets\nFROM (\n  SELECT\n    id\n    ,account\n    ,type\n    ,amount\n    ,sum((type = 'bankrupt')::int) OVER account AS reset_id\n  FROM transactions\n  WINDOW account AS (\n    PARTITION BY account\n    ORDER BY id\n  )\n) t\nWINDOW resets AS (\n  PARTITION BY\n    account\n    ,reset_id\n  ORDER BY id\n);\n\n\nRunning the query we get the values we expect for both Bob and Sybil. Huzzah!\n\n\n id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  1 | bob     | deposit    |      5 |   5\n  2 | bob     | withdrawal |     -2 |   3\n  3 | bob     | deposit    |      3 |   6\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |   0\n  7 | sybil   | deposit    |      3 |   3\n  8 | sybil   | deposit    |      7 |  10\n  9 | sybil   | bankrupt   |      0 |   0\n 10 | sybil   | deposit    |      5 |   5\n\n\nConclusion\nWindow functions are a really good solution to processing time series with\nchronologically related data. This post scratches the surface of what’s\npossible.\n\nSo, the next time your boss asks you to process some time series data, consider\ngiving window functions a try.\n\n\n\n\n\nhttps://github.com/ac1235/python-tailrec\n\n\n\nhttps://github.com/Avik-Jain/100-Days-Of-ML-Code/blob/master/README.md\n\n\n\nWhat A Mathematical Formula Can Teach Us About Coincidence\n[http://blogs.discovermagazine.com/crux/2018/08/10/kolmogorov-pattern-complexity-pattern-meaning-random/]\n\nhttp://jkk.name/neural-tagger-tutorial/","html":"<p></p><p><a href=\"https://medium.freecodecamp.org/follow-these-simple-rules-and-youll-become-a-git-and-github-master-e1045057468f\">https://medium.freecodecamp.org/follow-these-simple-rules-and-youll-become-a-git-and-github-master-e1045057468f</a></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"https://www.johndcook.com/blog/2018/08/11/currying/\">Currying in calculus, PDEs, programming, and categories</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++){if(d=i[c],!d.getAttribute(\"data-secret\"))f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f);if(g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(~~g<200)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://www.johndcook.com/blog/2018/08/11/currying/embed/\" width=\"600\" height=\"338\" title=\"&#8220;Currying in calculus, PDEs, programming, and categories&#8221; &#8212; John D. Cook\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><figure class=\"kg-card kg-embed-card\"><p>In an effort to keep up my grueling regime of publishing at least one blog post per year, I&#8217;ve decided to write today about a neat little problem I ran across. The problem is; how do you calculate the cumulative sum of a time series if there are transactions that reset the count to 0?</p>\n<p>Naturally, there are ways to engineer around this problem without complex queries doing the heavy lifting (recording the current balance along side your transaction history, for example). However, if you occasionally find yourself being asked for a number crunch, half with the expectation of your response being:</p>\n<p><img data-attachment-id=\"968\" data-permalink=\"https://llvllatrix.wordpress.com/2018/08/06/sql-nested-window-functions-and-time-series/leeroy/\" data-orig-file=\"https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=1050&#038;h=700\" data-orig-size=\"1050,700\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"leeroy\" data-image-description=\"\" data-medium-file=\"https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=1050&#038;h=700?w=300\" data-large-file=\"https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=1050&#038;h=700?w=1024\" class=\" size-full wp-image-968 aligncenter\" src=\"https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=1050&#038;h=700\" alt=\"leeroy\" width=\"1050\" height=\"700\" srcset=\"https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg 1050w, https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=150&amp;h=100 150w, https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=300&amp;h=200 300w, https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=768&amp;h=512 768w, https://llvllatrix.files.wordpress.com/2018/08/leeroy.jpeg?w=1024&amp;h=683 1024w\" sizes=\"(max-width: 1050px) 100vw, 1050px\"></p>\n<p>&#8230;it&#8217;s not a bad idea to keep this query in your back pocket.</p>\n<h1>A Convoluted Example</h1>\n<p>Alice decides to start a bank. Her engineers are clever and they decide that they can save space in their transaction log by just reporting changes in the balance. They keep the current balance in another table and decide if Grace the auditor comes around, they&#8217;ll just sum up all of the transactions in their log. Good job guys.</p>\n<p><img data-attachment-id=\"969\" data-permalink=\"https://llvllatrix.wordpress.com/2018/08/06/sql-nested-window-functions-and-time-series/dilbert_and_wally/\" data-orig-file=\"https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg?w=580&#038;h=301\" data-orig-size=\"580,301\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1533580224&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"dilbert_and_wally\" data-image-description=\"\" data-medium-file=\"https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg?w=580&#038;h=301?w=300\" data-large-file=\"https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg?w=580&#038;h=301?w=580\" class=\" size-full wp-image-969 aligncenter\" src=\"https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg?w=580&#038;h=301\" alt=\"dilbert_and_wally\" width=\"580\" height=\"301\" srcset=\"https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg 580w, https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg?w=150&amp;h=78 150w, https://llvllatrix.files.wordpress.com/2018/08/dilbert_and_wally1.jpeg?w=300&amp;h=156 300w\" sizes=\"(max-width: 580px) 100vw, 580px\"></p>\n<p>Bob is an exceptional client with good credit history. Grace takes a quick glance at his balance history and decides everything looks fine. As she leafs through the other records and pauses at Sybil&#8217;s balance history. It&#8217;s massive. The problem is that Sybil&#8217;s been through a number of bankruptcies that should have set her balance to 0. She breaks the news to Alice. You can imagine that Alice was not too happy.</p>\n<p><img data-attachment-id=\"965\" data-permalink=\"https://llvllatrix.wordpress.com/2018/08/06/sql-nested-window-functions-and-time-series/alice/\" data-orig-file=\"https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg?w=580&#038;h=301\" data-orig-size=\"580,301\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}\" data-image-title=\"alice\" data-image-description=\"\" data-medium-file=\"https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg?w=580&#038;h=301?w=300\" data-large-file=\"https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg?w=580&#038;h=301?w=580\" class=\" size-full wp-image-965 aligncenter\" src=\"https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg?w=580&#038;h=301\" alt=\"alice\" width=\"580\" height=\"301\" srcset=\"https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg 580w, https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg?w=150&amp;h=78 150w, https://llvllatrix.files.wordpress.com/2018/08/alice.jpeg?w=300&amp;h=156 300w\" sizes=\"(max-width: 580px) 100vw, 580px\"></p>\n<p>To fix the problem, the engineers decide to introduce a new transaction that resets the balance to 0.</p>\n<h1>The Data Set</h1>\n<p>In order to satisfy Grace, we&#8217;ve got to come up with a balance history for both Bob and Sybil using just transactions. Here&#8217;s our data set in Postgres SQL. We&#8217;ll use text and integer columns along with small numbers to simplify the problem.</p>\n<pre class=\"brush: sql; title: ; notranslate\" title=\"\">\nCREATE TABLE transactions (\n  id integer\n  ,account text\n  ,type text\n  ,amount integer\n);\n\nINSERT INTO transactions\nVALUES\n  (1, 'bob', 'deposit', 5)\n  ,(2, 'bob', 'withdrawal', -2)\n  ,(3, 'bob', 'deposit', 3)\n  ,(4, 'sybil', 'deposit', 5)\n  ,(5, 'sybil', 'withdrawal', -2)\n  ,(6, 'sybil', 'bankrupt', 0)\n  ,(7, 'sybil', 'deposit' , 3)\n  ,(8, 'sybil', 'deposit', 7)\n  ,(9, 'sybil', 'bankrupt', 0)\n  ,(10, 'sybil', 'deposit' , 5)\n;\n</pre>\n<h1>Simple Cumulative Sums</h1>\n<p>Our first job is to calculate Bob&#8217;s balance history. This section is a review of basic window functions. If you&#8217;re used to using them to create cumulative sums, feel free to skip ahead. Here&#8217;s what we&#8217;re trying to produce:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  1 | bob     | deposit    |      5 |   5\n  2 | bob     | withdrawal |     -2 |   3\n  3 | bob     | deposit    |      3 |   6\n</pre>\n<p>A window function has two parts; the partition and the order. The partition defines which columns are going to be grouped together in the window. The order defines how to sort the rows in the window.</p>\n<p>In the example above, we want to group transactions by their account. We then want to order them by their ID. Now, when we use the Sum function, it will sum from the first transaction in the partition, to the current row:</p>\n<pre class=\"brush: sql; title: ; notranslate\" title=\"\">\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,sum(amount) OVER account\nFROM transactions\nWHERE account = 'bob'\nWINDOW account AS (\n  PARTITION BY account\n  ORDER BY id\n);\n</pre>\n<p>However, if we use the same query for Sybil, we run into our next problem.</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |   3\n  7 | sybil   | deposit    |      3 |   6\n  8 | sybil   | deposit    |      7 |  13\n  9 | sybil   | bankrupt   |      0 |  13\n 10 | sybil   | deposit    |      5 |  18\n</pre>\n<h1>Cumulative Sums With Resets</h1>\n<p>The trick to calculating Sybil&#8217;s balance is using a nested set of window functions to make the query sensitive to the transaction type. Here&#8217;s what we&#8217;re trying to achieve:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |   0\n  7 | sybil   | deposit    |      3 |   3\n  8 | sybil   | deposit    |      7 |  10\n  9 | sybil   | bankrupt   |      0 |   0\n 10 | sybil   | deposit    |      5 |   5\n</pre>\n<p>One possible solution is to try and subtract the cumulative sum using a CASE statement:</p>\n<pre class=\"brush: sql; title: ; notranslate\" title=\"\">\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,CASE\n    WHEN type = 'bankrupt' THEN\n      -1*sum(amount) OVER account\n    ELSE\n      sum(amount) OVER account\n  END AS sum\nFROM transactions\nWHERE account = 'sybil'\nWINDOW account AS (\n  PARTITION BY account\n  ORDER BY id\n);\n</pre>\n<p>The trouble with this approach is that the window function does not use the output of the last row to calculate the next row. The only thing we&#8217;ve done is to alter the values of the bankrupt transactions:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |  -3\n  7 | sybil   | deposit    |      3 |   6\n  8 | sybil   | deposit    |      7 |  13\n  9 | sybil   | bankrupt   |      0 | -13\n 10 | sybil   | deposit    |      5 |  18\n</pre>\n<p>Nesting window functions solves this problem. We&#8217;ll build up the query by first identifying the transactions that reset the count:</p>\n<pre class=\"brush: sql; title: ; notranslate\" title=\"\">\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,(type = 'bankrupt')::int AS do_reset\nFROM transactions\nWHERE account = 'sybil'\n;\n</pre>\n<p>Running that query we get:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | do_reset\n----+---------+------------+--------+----------\n  4 | sybil   | deposit    |      5 |        0\n  5 | sybil   | withdrawal |     -2 |        0\n  6 | sybil   | bankrupt   |      0 |        1\n  7 | sybil   | deposit    |      3 |        0\n  8 | sybil   | deposit    |      7 |        0\n  9 | sybil   | bankrupt   |      0 |        1\n 10 | sybil   | deposit    |      5 |        0\n</pre>\n<p>Casting boolean values to integers allows us to then perform a cumulative sum over do_reset. This sum will allow us to group transactions chronologically, by their association to a resetting transaction.</p>\n<pre class=\"brush: sql; title: ; notranslate\" title=\"\">\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,sum((type = 'bankrupt')::int) OVER account AS reset_id\nFROM transactions\nWHERE account = 'sybil'\nWINDOW account AS (\n  PARTITION BY account\n  ORDER BY id\n);\n</pre>\n<p>Running that query we get:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | reset_id\n----+---------+------------+--------+----------\n  4 | sybil   | deposit    |      5 |        0\n  5 | sybil   | withdrawal |     -2 |        0\n  6 | sybil   | bankrupt   |      0 |        1\n  7 | sybil   | deposit    |      3 |        1\n  8 | sybil   | deposit    |      7 |        1\n  9 | sybil   | bankrupt   |      0 |        2\n 10 | sybil   | deposit    |      5 |        2\n</pre>\n<p>Finally, we can nest this query inside another window function, and perform a cumulative sum on amount, using the reset_id we&#8217;ve just created:</p>\n<pre class=\"brush: sql; title: ; notranslate\" title=\"\">\nSELECT\n  id\n  ,account\n  ,type\n  ,amount\n  ,sum(amount) OVER resets\nFROM (\n  SELECT\n    id\n    ,account\n    ,type\n    ,amount\n    ,sum((type = 'bankrupt')::int) OVER account AS reset_id\n  FROM transactions\n  WINDOW account AS (\n    PARTITION BY account\n    ORDER BY id\n  )\n) t\nWINDOW resets AS (\n  PARTITION BY\n    account\n    ,reset_id\n  ORDER BY id\n);\n</pre>\n<p>Running the query we get the values we expect for both Bob and Sybil. Huzzah!</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&nbsp;id | account |    type    | amount | sum\n----+---------+------------+--------+-----\n  1 | bob     | deposit    |      5 |   5\n  2 | bob     | withdrawal |     -2 |   3\n  3 | bob     | deposit    |      3 |   6\n  4 | sybil   | deposit    |      5 |   5\n  5 | sybil   | withdrawal |     -2 |   3\n  6 | sybil   | bankrupt   |      0 |   0\n  7 | sybil   | deposit    |      3 |   3\n  8 | sybil   | deposit    |      7 |  10\n  9 | sybil   | bankrupt   |      0 |   0\n 10 | sybil   | deposit    |      5 |   5\n</pre>\n<h1>Conclusion</h1>\n<p>Window functions are a really good solution to processing time series with chronologically related data. This post scratches the surface of what&#8217;s possible.</p>\n<p>So, the next time your boss asks you to process some time series data, consider giving window functions a try.</p>\n<p><img data-attachment-id=\"967\" data-permalink=\"https://llvllatrix.wordpress.com/2018/08/06/sql-nested-window-functions-and-time-series/drake/\" data-orig-file=\"https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg?w=500&#038;h=500\" data-orig-size=\"500,500\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"drake\" data-image-description=\"\" data-medium-file=\"https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg?w=500&#038;h=500?w=300\" data-large-file=\"https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg?w=500&#038;h=500?w=500\" class=\" size-full wp-image-967 aligncenter\" src=\"https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg?w=500&#038;h=500\" alt=\"drake\" width=\"500\" height=\"500\" srcset=\"https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg 500w, https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg?w=150&amp;h=150 150w, https://llvllatrix.files.wordpress.com/2018/08/drake.jpeg?w=300&amp;h=300 300w\" sizes=\"(max-width: 500px) 100vw, 500px\"></p>\n</figure><p></p><p><a href=\"https://github.com/ac1235/python-tailrec\">https://github.com/ac1235/python-tailrec</a></p><p></p><p><a href=\"https://github.com/Avik-Jain/100-Days-Of-ML-Code/blob/master/README.md\">https://github.com/Avik-Jain/100-Days-Of-ML-Code/blob/master/README.md</a></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"http://blogs.discovermagazine.com/crux/2018/08/10/kolmogorov-pattern-complexity-pattern-meaning-random/\">What A Mathematical Formula Can Teach Us About Coincidence</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++)if(d=i[c],!d.getAttribute(\"data-secret\")){if(f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f),g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}else;}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(200>~~g)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"http://blogs.discovermagazine.com/crux/2018/08/10/kolmogorov-pattern-complexity-pattern-meaning-random/embed/\" width=\"600\" height=\"338\" title=\"Embedded WordPress Post\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><p><a href=\"http://jkk.name/neural-tagger-tutorial/\">http://jkk.name/neural-tagger-tutorial/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-5th/","uuid":"7fcd6c64-ba7d-4c32-a05f-58286dfaebe4","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b902d3f1fc1fc7d92b5c4d8"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736ef","title":"My First Experience with Docker","slug":"my-first-dockerfile","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/09/docker2@2x.jpg","excerpt":"Reboot EC2 instances with Docker.","custom_excerpt":"Reboot EC2 instances with Docker.","created_at_pretty":"05 September, 2018","published_at_pretty":"05 September, 2018","updated_at_pretty":"30 December, 2018","created_at":"2018-09-04T21:25:10.000-04:00","published_at":"2018-09-05T13:47:18.000-04:00","updated_at":"2018-12-30T07:01:05.000-05:00","meta_title":"Reboot EC2 instances with Docker | Hackers And Slackers","meta_description":"Reboot EC2 instances with Docker","og_description":"My First Experience with Docker","og_image":"https://hackersandslackers.com/content/images/2018/09/docker2@2x.jpg","og_title":"My First Experience with Docker","twitter_description":"Reboot EC2 instances with Docker","twitter_image":"https://hackersandslackers.com/content/images/2018/09/docker2@2x.jpg","twitter_title":"My First Experience with Docker","authors":[{"name":"David Aquino","slug":"david","bio":"Spent years in the military to become a killing machine using only 2 CDJs. Automated all of life's inconveniences, including investments in the financial markets.","profile_image":"https://hackersandslackers.com/content/images/2019/03/keno2.jpg","twitter":"@_k3n0","facebook":null,"website":null}],"primary_author":{"name":"David Aquino","slug":"david","bio":"Spent years in the military to become a killing machine using only 2 CDJs. Automated all of life's inconveniences, including investments in the financial markets.","profile_image":"https://hackersandslackers.com/content/images/2019/03/keno2.jpg","twitter":"@_k3n0","facebook":null,"website":null},"primary_tag":{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"},"tags":[{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"}],"plaintext":"We have a .NET application that has been running for years, but once a week, the\napplication fails to recover and needs the server needs to be rebooted.  To\npreemptively reboot the EC2 instance nightly we decided to use Docker and ECS\n scheduled tasks.\n\nHere is what the finished Dockerfile looks like:\n\nFROM amazonlinux:latest\n\nRUN yum -y update\nRUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nRUN python get-pip.py\nRUN pip install boto\nCOPY ./win_reboot.py /root/\nRUN chmod +x /root/win_reboot.py\n\nCMD [\"/root/win_reboot.py\"]\n\nECS has a role with the correct access to run reboot. \n\nHere is what the python script looks like:\n\n#!/usr/bin/env python\n\nimport boto.ec2\nimport os\n\nconn = boto.ec2.connect_to_region(\"us-east-1\")\ninstance_id_list = []\nfor instance in os.environ['WINDOWS_EC2'].split(\"|\"): \nfor r in conn.get_all_instances(filters={\"tag:Name\" : instance}):\n\t[instance_id_list.append(i.id) for i in r.instances]    \nconn.reboot_instances(instance_ids=instance_id_list, dry_run=False)\n\nWe need to import boto and os here. Boto is to do the AWS magic of rebooting the\nservers and os to use an environment variable.  Here we use a pipe delimiter to\ntarget multiple EC2 instances. This will help out while testing the container on\nyour local machine because you can pass in environment variables on the command\nline using the -e flag.  There is probably a more efficient and elegant way to\ngo about this, but this works for us. \n\nKeep these files in the same directory and run: \n\ndocker build -t test-name:latest .\n\nIf you it builds successfully, you can try to run it:\n\ndocker run -it test-name:latest /bin/bash\n\nThis will run your container interactively and drop you into a bash shell.\n Alternatively, try running with environment variables passed in.\n\ndocker run test-name:latest -e WINDOWS_EC2='EC2-instance-tagName' -e AWS_DEFAULT_REGION='aws region'-e AWS_ACCESS_KEY_ID='ID GOES HERE' -e AWS_SECRET_ACCESS_KEY='KEY GOES HERE'\n\nIf all of this is working as expected, you can go to ECS in AWS and create your\ntask definition.  It will provide you commands to push your image to ECR. \n\nMaybe I'll add some screenshots here.\n\nAfter that you might find you have some extra docker images and containers to\nclean up locally. The following commands should help.  Consult the docker\ndocumentation for more information. \nhttps://docs.docker.com/engine/reference/commandline/rmi/\n\nfor i in ```docker images | grep '<none>'| awk '{ print $3 }'```; do docker rmi -f $i; done\nfor i in `docker container ls --all | awk '{ print $1 }'`; do docker container rm $i; done","html":"<p>We have a .NET application that has been running for years, but once a week, the application fails to recover and needs the server needs to be rebooted.  To preemptively reboot the EC2 instance nightly we decided to use Docker and ECS  scheduled tasks.</p><p>Here is what the finished Dockerfile looks like:</p><pre><code>FROM amazonlinux:latest\n\nRUN yum -y update\nRUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nRUN python get-pip.py\nRUN pip install boto\nCOPY ./win_reboot.py /root/\nRUN chmod +x /root/win_reboot.py\n\nCMD [\"/root/win_reboot.py\"]</code></pre><p>ECS has a role with the correct access to run reboot. </p><p>Here is what the python script looks like:</p><pre><code>#!/usr/bin/env python\n\nimport boto.ec2\nimport os\n\nconn = boto.ec2.connect_to_region(\"us-east-1\")\ninstance_id_list = []\nfor instance in os.environ['WINDOWS_EC2'].split(\"|\"): \nfor r in conn.get_all_instances(filters={\"tag:Name\" : instance}):\n\t[instance_id_list.append(i.id) for i in r.instances]    \nconn.reboot_instances(instance_ids=instance_id_list, dry_run=False)</code></pre><p>We need to import boto and os here. Boto is to do the AWS magic of rebooting the servers and os to use an environment variable.  Here we use a pipe delimiter to target multiple EC2 instances. This will help out while testing the container on your local machine because you can pass in environment variables on the command line using the -e flag.  There is probably a more efficient and elegant way to go about this, but this works for us. </p><p>Keep these files in the same directory and run: </p><pre><code>docker build -t test-name:latest .</code></pre><p>If you it builds successfully, you can try to run it:</p><pre><code>docker run -it test-name:latest /bin/bash</code></pre><p>This will run your container interactively and drop you into a bash shell.  Alternatively, try running with environment variables passed in.</p><pre><code>docker run test-name:latest -e WINDOWS_EC2='EC2-instance-tagName' -e AWS_DEFAULT_REGION='aws region'-e AWS_ACCESS_KEY_ID='ID GOES HERE' -e AWS_SECRET_ACCESS_KEY='KEY GOES HERE'</code></pre><p>If all of this is working as expected, you can go to ECS in AWS and create your task definition.  It will provide you commands to push your image to ECR. </p><p>Maybe I'll add some screenshots here.</p><p>After that you might find you have some extra docker images and containers to clean up locally. The following commands should help.  Consult the docker documentation for more information. <a href=\"https://docs.docker.com/engine/reference/commandline/rmi/\">https://docs.docker.com/engine/reference/commandline/rmi/</a></p><pre><code>for i in ```docker images | grep '&lt;none&gt;'| awk '{ print $3 }'```; do docker rmi -f $i; done\nfor i in `docker container ls --all | awk '{ print $1 }'`; do docker container rm $i; done</code></pre>","url":"https://hackersandslackers.com/my-first-dockerfile/","uuid":"ddb6164b-8bb7-4a8f-b301-ac20261658eb","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b8f30761fc1fc7d92b5c4b4"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736a9","title":"Connect to your Google Cloud Compute Engine","slug":"connect-to-your-google-cloud-eompute-engine","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/07/gcp_instance@2x.jpg","excerpt":"Configuring SSH and file transfers in Google Cloud.","custom_excerpt":"Configuring SSH and file transfers in Google Cloud.","created_at_pretty":"14 July, 2018","published_at_pretty":"05 September, 2018","updated_at_pretty":"02 February, 2019","created_at":"2018-07-14T10:10:50.000-04:00","published_at":"2018-09-05T08:00:00.000-04:00","updated_at":"2019-02-02T04:52:29.000-05:00","meta_title":"Configuring SSH and file transfers in Google Cloud | Hackers And Slackers","meta_description":"Now that you've joined the Google Cloud club, you may have found yourself asking the inevitable: \"how do I connect to my damn instance?\"","og_description":"Now that you've joined the Google Cloud club, you may have found yourself asking the inevitable: \"how do I connect to my damn instance?\"","og_image":"https://hackersandslackers.com/content/images/2018/07/gcp_instance@2x.jpg","og_title":"Connect to your Google Cloud Compute Engine","twitter_description":"Now that you've joined the Google Cloud club, you may have found yourself asking the inevitable: \"how do I connect to my damn instance?\"","twitter_image":"https://hackersandslackers.com/content/images/2018/07/gcp_instance@2x.jpg","twitter_title":"Connect to your Google Cloud Compute Engine","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"Google Cloud","slug":"googlecloud","description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/googleseries2.jpg","meta_description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","meta_title":"The Rise of Google Cloud | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Google Cloud","slug":"googlecloud","description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/googleseries2.jpg","meta_description":"Evaluating Google Cloud Platform’s offerings. Get introduced with tutorials, see our vendor comparisons, and endure biased opinions on GCP as a whole.","meta_title":"The Rise of Google Cloud | Hackers and Slackers","visibility":"public"},{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"},{"name":"#The Rise of Google Cloud","slug":"the-rise-of-google-cloud","description":"Build robust serverless architecture on Google Cloud Platform. Learn through tutorials, make comparisons, and hear opinions on GCP as a whole.","feature_image":"https://res-5.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/ADF7E324-9EAD-4F15-8670-AF205E6804EA.png","meta_description":"Build robust serverless architecture on Google Cloud Platform. Learn through tutorials, make comparisons, and hear opinions on GCP as a whole.","meta_title":"The Rise of Google Cloud","visibility":"internal"}],"plaintext":"So you've taken a leap and decided to host your VPS on Google Cloud: let me be\nthe first to congratulate you on joining the clearly superior cloud platform of\nour modern era. I would apologize for being so openly opinionated, but so far\nI've only stated objective facts.\n\nNow that you've joined the club, you may have found yourself asking the\ninevitable: \"how do I connect to my damn instance?\"  If you're like me, you're\nprobably not the kind of person who enjoys this as their main solution:\n\nGoogle Cloud's in-browser terminal.Luckily for us, there are a few ways to\ninteract with your Compute Engine. Let's take a look at all of them.\n\nSet up the gcloud CLI\nIn order to SSH natively, we need to install the gcloud CLI  on our machine. Mac\nusers can download this here\n[https://cloud.google.com/sdk/docs/quickstart-macos], and Windows users can\ndownload from here [https://cloud.google.com/sdk/docs/quickstart-windows].\nClicking the downloaded file will extract the package. With your package\nextracted, run the install script install.sh  (or install.bat  for Windows) to\nstart the installation:\n\n$ ~/Downloads/google-cloud-sdk/install.sh\nWelcome to the Google Cloud SDK!\n\nTo help improve the quality of this product, we collect anonymized usage data\nand anonymized stacktraces when crashes are encountered; additional information\nis available at <https://cloud.google.com/sdk/usage-statistics>. You may choose\nto opt out of this collection now (by choosing 'N' at the below prompt), or at\nany time in the future by running the following command:\n\n    gcloud config set disable_usage_reporting true\n\nDo you want to help improve the Google Cloud SDK (Y/n)?\n\n\nContinuing the script will list the 'components' gcloud can install on your\nlocal machine, where each component is a Google Cloud product:\n\nYour current Cloud SDK version is: 214.0.0\nThe latest available version is: 214.0.0\n\n┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n│                                                  Components                                                 │\n├───────────────┬──────────────────────────────────────────────────────┬──────────────────────────┬───────────┤\n│     Status    │                         Name                         │            ID            │    Size   │\n├───────────────┼──────────────────────────────────────────────────────┼──────────────────────────┼───────────┤\n│ Not Installed │ App Engine Go Extensions                             │ app-engine-go            │ 152.8 MiB │\n│ Not Installed │ Cloud Bigtable Command Line Tool                     │ cbt                      │   6.3 MiB │\n│ Not Installed │ Cloud Bigtable Emulator                              │ bigtable                 │   4.3 MiB │\n│ Not Installed │ Cloud Datalab Command Line Tool                      │ datalab                  │   < 1 MiB │\n│ Not Installed │ Cloud Datastore Emulator                             │ cloud-datastore-emulator │  17.7 MiB │\n│ Not Installed │ Cloud Datastore Emulator (Legacy)                    │ gcd-emulator             │  38.1 MiB │\n│ Not Installed │ Cloud Pub/Sub Emulator                               │ pubsub-emulator          │  33.4 MiB │\n│ Not Installed │ Cloud SQL Proxy                                      │ cloud_sql_proxy          │   2.5 MiB │\n│ Not Installed │ Emulator Reverse Proxy                               │ emulator-reverse-proxy   │  14.5 MiB │\n│ Not Installed │ Google Cloud Build Local Builder                     │ cloud-build-local        │   4.4 MiB │\n│ Not Installed │ Google Container Local Builder                       │ container-builder-local  │   4.4 MiB │\n│ Not Installed │ Google Container Registry's Docker credential helper │ docker-credential-gcr    │   1.8 MiB │\n│ Not Installed │ gcloud Alpha Commands                                │ alpha                    │   < 1 MiB │\n│ Not Installed │ gcloud Beta Commands                                 │ beta                     │   < 1 MiB │\n│ Not Installed │ gcloud app Java Extensions                           │ app-engine-java          │ 118.6 MiB │\n│ Not Installed │ gcloud app PHP Extensions                            │ app-engine-php           │  21.9 MiB │\n│ Not Installed │ gcloud app Python Extensions                         │ app-engine-python        │   6.2 MiB │\n│ Not Installed │ gcloud app Python Extensions (Extra Libraries)       │ app-engine-python-extras │  28.5 MiB │\n│ Not Installed │ kubectl                                              │ kubectl                  │   < 1 MiB │\n│ Installed     │ BigQuery Command Line Tool                           │ bq                       │   < 1 MiB │\n│ Installed     │ Cloud SDK Core Libraries                             │ core                     │   8.3 MiB │\n│ Installed     │ Cloud Storage Command Line Tool                      │ gsutil                   │   3.6 MiB │\n└───────────────┴──────────────────────────────────────────────────────┴──────────────────────────┴───────────┘\nTo install or remove components at your current SDK version [214.0.0], run:\n  $ gcloud components install COMPONENT_ID\n  $ gcloud components remove COMPONENT_ID\n\nTo update your SDK installation to the latest version [214.0.0], run:\n  $ gcloud components update\n\n\nModify profile to update your $PATH and enable shell command\ncompletion?\n\nDo you want to continue (Y/n)?\n\n\nOnce installed, run gcloud init  in your terminal. This will prompt you to\nlogin:\n\nTo continue, you must log in. Would you like to log in (Y/n)?\n\n\nPressing 'Y' will prompt a simple browser window from which you can authenticate\nwith Google by simply selecting your Google account, as though we were using any\nother app with Google OAuth authentication. That's correct: you don't even need\nto go through the trouble of typing a password, assuming you've logged in to\nyour Google account before (I'm guessing you have).\n\n2ez authentication.Next, the terminal will prompt to specify which of your\nprojects to use. Select the project which contains your instance by entering the\nnumber seen in the resulting list:\n\nPick cloud project to use:\n [1] [my-project-1]\n [2] [my-project-2]\n ...\n Please enter your numeric choice:\n\n\nNow you're in the clear to go nuts with the gcloud  CLI:\n\ngcloud has now been configured!\nYou can use [gcloud config] to change more gcloud settings.\n\nYour active configuration is: [default]\n\n\nSSH via a Native Terminal\nUgh, so now we need to go through the process of creating public and private\nkeys etc to SSH into our instance, right? Wrong: gcloud  is so mo effin' dope\nthat there's a one-line command which will actually do this for you:\n\n$ gcloud compute config-ssh\n\nYou should now be able to use ssh/scp with your instances.\nFor example, try running:\n\n$ ssh instancename.region-b.projectname-173869\n\n\nBut there's no way it's that easy, right?\n\n$ gcloud compute ssh instancename\nEnter passphrase for key '/Users/username/.ssh/google_compute_engine':\n\nWelcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.15.0-1018-gcp x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  Get cloud support with Ubuntu Advantage Cloud Guest:\n    http://www.ubuntu.com/business/services/cloud\n\n30 packages can be updated.\n0 updates are security updates.\n\n\nIt really is that easy. For as long as you use your local machine, you will only\never need to used the command gcloud compute ssh instancename  to connect to\nyour instance.\n\nGet and Put Files\nYou might be thinking that the next order of business would be to config SFTP in\norder to manage files on your instance. Believe it or not, there's a simpler\nway.\n\nDownloading Files from your Instance\ngcloud  comes with a built-in tool to download and upload files to your instance\nvia the CLI. To download files from your server, check out this one-liner:\n\ngcloud compute scp [LOCAL_FILE_PATH] [INSTANCE_NAME]:~/path/to/file/on/server\n\n\nUploading Files to your Instance\nThe same command can be reversed to upload as well:\n\ngcloud compute scp --recurse [INSTANCE_NAME]:[REMOTE_DIR] [LOCAL_DIR]\n\n\nOther Methods\nWhen we begin to look into other methods of interacting with our Computer Engine\ninstance, the general youth of GCP becomes apparent.\n\nAt the time of writing, Google's own documentation lacks information on how to\nconnect via SFTP, as the only mention of SFTP is this broken anchor link. Google\nalso provides a RDP  Chrome add-on\n[https://chrome.google.com/webstore/detail/chrome-rdp-for-google-clo/mpbbnannobiobpnfblimoapbephgifkm/] \n specifically for connecting to Compute instances, but my own attempts have\nshown this to be broken as well:\n\nWhy can't I click on you?!?!Despite these setbacks, the combination of SSH and\ngetting/putting files should be more than enough to satisfy anybody's needs for\nnow. Google Cloud Platform is only getting better with time, and is doing so at\na pace which scare other providers.","html":"<p>So you've taken a leap and decided to host your VPS on Google Cloud: let me be the first to congratulate you on joining the clearly superior cloud platform of our modern era. I would apologize for being so openly opinionated, but so far I've only stated objective facts.</p><p>Now that you've joined the club, you may have found yourself asking the inevitable: \"<em>how do I connect to my damn instance?\"</em> If you're like me, you're probably not the kind of person who enjoys this as their main solution:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/ssh.gif\" class=\"kg-image\"><figcaption>Google Cloud's in-browser terminal.</figcaption></figure><p>Luckily for us, there are a few ways to interact with your Compute Engine. Let's take a look at all of them.</p><h2 id=\"set-up-the-gcloud-cli\">Set up the gcloud CLI</h2><p>In order to SSH natively, we need to install the <strong>gcloud CLI</strong> on our machine. Mac users can download this <a href=\"https://cloud.google.com/sdk/docs/quickstart-macos\">here</a>, and Windows users can download from <a href=\"https://cloud.google.com/sdk/docs/quickstart-windows\">here</a>. Clicking the downloaded file will extract the package. With your package extracted, run the install script <code>install.sh</code> (or <code>install.bat</code> for Windows) to start the installation:</p><pre><code class=\"language-bash\">$ ~/Downloads/google-cloud-sdk/install.sh\nWelcome to the Google Cloud SDK!\n\nTo help improve the quality of this product, we collect anonymized usage data\nand anonymized stacktraces when crashes are encountered; additional information\nis available at &lt;https://cloud.google.com/sdk/usage-statistics&gt;. You may choose\nto opt out of this collection now (by choosing 'N' at the below prompt), or at\nany time in the future by running the following command:\n\n    gcloud config set disable_usage_reporting true\n\nDo you want to help improve the Google Cloud SDK (Y/n)?\n</code></pre>\n<p>Continuing the script will list the 'components' gcloud can install on your local machine, where each component is a Google Cloud product:</p><pre><code class=\"language-bash\">Your current Cloud SDK version is: 214.0.0\nThe latest available version is: 214.0.0\n\n┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n│                                                  Components                                                 │\n├───────────────┬──────────────────────────────────────────────────────┬──────────────────────────┬───────────┤\n│     Status    │                         Name                         │            ID            │    Size   │\n├───────────────┼──────────────────────────────────────────────────────┼──────────────────────────┼───────────┤\n│ Not Installed │ App Engine Go Extensions                             │ app-engine-go            │ 152.8 MiB │\n│ Not Installed │ Cloud Bigtable Command Line Tool                     │ cbt                      │   6.3 MiB │\n│ Not Installed │ Cloud Bigtable Emulator                              │ bigtable                 │   4.3 MiB │\n│ Not Installed │ Cloud Datalab Command Line Tool                      │ datalab                  │   &lt; 1 MiB │\n│ Not Installed │ Cloud Datastore Emulator                             │ cloud-datastore-emulator │  17.7 MiB │\n│ Not Installed │ Cloud Datastore Emulator (Legacy)                    │ gcd-emulator             │  38.1 MiB │\n│ Not Installed │ Cloud Pub/Sub Emulator                               │ pubsub-emulator          │  33.4 MiB │\n│ Not Installed │ Cloud SQL Proxy                                      │ cloud_sql_proxy          │   2.5 MiB │\n│ Not Installed │ Emulator Reverse Proxy                               │ emulator-reverse-proxy   │  14.5 MiB │\n│ Not Installed │ Google Cloud Build Local Builder                     │ cloud-build-local        │   4.4 MiB │\n│ Not Installed │ Google Container Local Builder                       │ container-builder-local  │   4.4 MiB │\n│ Not Installed │ Google Container Registry's Docker credential helper │ docker-credential-gcr    │   1.8 MiB │\n│ Not Installed │ gcloud Alpha Commands                                │ alpha                    │   &lt; 1 MiB │\n│ Not Installed │ gcloud Beta Commands                                 │ beta                     │   &lt; 1 MiB │\n│ Not Installed │ gcloud app Java Extensions                           │ app-engine-java          │ 118.6 MiB │\n│ Not Installed │ gcloud app PHP Extensions                            │ app-engine-php           │  21.9 MiB │\n│ Not Installed │ gcloud app Python Extensions                         │ app-engine-python        │   6.2 MiB │\n│ Not Installed │ gcloud app Python Extensions (Extra Libraries)       │ app-engine-python-extras │  28.5 MiB │\n│ Not Installed │ kubectl                                              │ kubectl                  │   &lt; 1 MiB │\n│ Installed     │ BigQuery Command Line Tool                           │ bq                       │   &lt; 1 MiB │\n│ Installed     │ Cloud SDK Core Libraries                             │ core                     │   8.3 MiB │\n│ Installed     │ Cloud Storage Command Line Tool                      │ gsutil                   │   3.6 MiB │\n└───────────────┴──────────────────────────────────────────────────────┴──────────────────────────┴───────────┘\nTo install or remove components at your current SDK version [214.0.0], run:\n  $ gcloud components install COMPONENT_ID\n  $ gcloud components remove COMPONENT_ID\n\nTo update your SDK installation to the latest version [214.0.0], run:\n  $ gcloud components update\n\n\nModify profile to update your $PATH and enable shell command\ncompletion?\n\nDo you want to continue (Y/n)?\n</code></pre>\n<p>Once installed, run <code>gcloud init</code> in your terminal. This will prompt you to login:</p><pre><code class=\"language-bash\">To continue, you must log in. Would you like to log in (Y/n)?\n</code></pre>\n<p>Pressing 'Y' will prompt a simple browser window from which you can authenticate with Google by simply selecting your Google account, as though we were using any other app with Google OAuth authentication. That's correct: you don't even need to go through the trouble of typing a password, assuming you've logged in to your Google account before (I'm guessing you have).</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/Screen-Shot-2018-09-04-at-3.36.26-PM.png\" class=\"kg-image\"><figcaption>2ez authentication.</figcaption></figure><p>Next, the terminal will prompt to specify which of your projects to use. Select the project which contains your instance by entering the number seen in the resulting list:</p><pre><code class=\"language-bash\">Pick cloud project to use:\n [1] [my-project-1]\n [2] [my-project-2]\n ...\n Please enter your numeric choice:\n</code></pre>\n<p>Now you're in the clear to go nuts with the <strong>gcloud</strong> CLI:</p><pre><code class=\"language-bash\">gcloud has now been configured!\nYou can use [gcloud config] to change more gcloud settings.\n\nYour active configuration is: [default]\n</code></pre>\n<h2 id=\"ssh-via-a-native-terminal\">SSH via a Native Terminal</h2><p>Ugh, so now we need to go through the process of creating public and private keys etc to SSH into our instance, right? Wrong: <strong>gcloud</strong> is so mo effin' dope that there's a one-line command which will actually do this for you:</p><pre><code class=\"language-bash\">$ gcloud compute config-ssh\n\nYou should now be able to use ssh/scp with your instances.\nFor example, try running:\n\n$ ssh instancename.region-b.projectname-173869\n</code></pre>\n<p>But there's no way it's that easy, right?</p><pre><code class=\"language-bash\">$ gcloud compute ssh instancename\nEnter passphrase for key '/Users/username/.ssh/google_compute_engine':\n\nWelcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.15.0-1018-gcp x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  Get cloud support with Ubuntu Advantage Cloud Guest:\n    http://www.ubuntu.com/business/services/cloud\n\n30 packages can be updated.\n0 updates are security updates.\n</code></pre>\n<p>It really is that easy. For as long as you use your local machine, you will only ever need to used the command <code>gcloud compute ssh instancename</code> to connect to your instance.</p><h2 id=\"get-and-put-files\">Get and Put Files</h2><p>You might be thinking that the next order of business would be to config SFTP in order to manage files on your instance. Believe it or not, there's a simpler way.</p><h3 id=\"downloading-files-from-your-instance\">Downloading Files from your Instance</h3><p><strong>gcloud</strong> comes with a built-in tool to download and upload files to your instance via the CLI. To download files from your server, check out this one-liner:</p><pre><code class=\"language-bash\">gcloud compute scp [LOCAL_FILE_PATH] [INSTANCE_NAME]:~/path/to/file/on/server\n</code></pre>\n<h3 id=\"uploading-files-to-your-instance\">Uploading Files to your Instance</h3><p>The same command can be reversed to upload as well:</p><pre><code class=\"language-bash\">gcloud compute scp --recurse [INSTANCE_NAME]:[REMOTE_DIR] [LOCAL_DIR]\n</code></pre>\n<h2 id=\"other-methods\">Other Methods</h2><p>When we begin to look into other methods of interacting with our Computer Engine instance, the general youth of GCP becomes apparent.</p><p>At the time of writing, Google's own documentation lacks information on how to connect via <strong>SFTP, </strong>as the only mention of SFTP is this <a href=\"https://cloud.google.com/compute/docs/instances/transfer-files#filebrowser\">broken anchor link</a>. Google also provides a <strong>RDP</strong> <a href=\"https://chrome.google.com/webstore/detail/chrome-rdp-for-google-clo/mpbbnannobiobpnfblimoapbephgifkm/\">Chrome add-on</a> specifically for connecting to Compute instances, but my own attempts have shown this to be broken as well:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-5.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/rdp.png\" class=\"kg-image\"><figcaption>Why can't I click on you?!?!</figcaption></figure><p>Despite these setbacks, the combination of SSH and getting/putting files should be more than enough to satisfy anybody's needs for now. Google Cloud Platform is only getting better with time, and is doing so at a pace which scare other providers.</p>","url":"https://hackersandslackers.com/connect-to-your-google-cloud-eompute-engine/","uuid":"774f9ff4-8fe2-4951-b240-5de2f80bc266","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b4a046a1c20005e9422c102"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736ec","title":"Tuning Machine Learning Hyperparameters with Binary Search","slug":"tuning-machine-learning-hyperparameters-with-binary-search","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/08/ai2@2x.jpg","excerpt":"Tune the n_estimators parameter in for a Random Forests classifier in scikit-learn in Python.","custom_excerpt":"Tune the n_estimators parameter in for a Random Forests classifier in scikit-learn in Python.","created_at_pretty":"30 August, 2018","published_at_pretty":"03 September, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-08-29T21:35:41.000-04:00","published_at":"2018-09-03T07:30:00.000-04:00","updated_at":"2019-02-13T22:50:35.000-05:00","meta_title":"Tune the n_estimators parameter in for a Random Forests classifier in scikit-learn in Python | Hackers And Slackers","meta_description":"RandomizedSearchCV goes noticeably faster than a full GridSearchCV but it still takes a while - which can be rough.","og_description":"Code Snippet Corner: Tuning Machine Learning Hyperparameters with Binary Search","og_image":"https://hackersandslackers.com/content/images/2018/08/ai2@2x.jpg","og_title":"Code Snippet Corner: Tuning Machine Learning Hyperparameters with Binary Search","twitter_description":"Tune the n_estimators parameter in for a Random Forests classifier in scikit-learn in Python","twitter_image":"https://hackersandslackers.com/content/images/2018/08/ai2@2x.jpg","twitter_title":"Code Snippet Corner: Tuning Machine Learning Hyperparameters with Binary Search","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},"tags":[{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"},{"name":"Machine Learning","slug":"machine-learning","description":"The latest developments in machine learning tools and technology available to data scientists.","feature_image":null,"meta_description":"The latest developments in machine learning tools and technology available to data scientists.","meta_title":"Machine Learning | Hackers and Slackers","visibility":"public"},{"name":"#Code Snippet Corner","slug":"code-snippet-corner","description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o_o.jpg","meta_description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","meta_title":"Python Code Snippet Corner","visibility":"internal"}],"plaintext":"Ah, hyperparameter tuning.  Time & compute-intensive.  Frequently containing\nweird non-linearities in how changing a parameter changes the score and/or the\ntime it takes to train the model.\n\nRandomizedSearchCV  goes noticeably faster than a full GridSearchCV  but it\nstill takes a while - which can be rough, because in my experience you do still\nneed to be iterative with it and experiment with different distributions.  Plus,\nthen you've got hyper-hyperparameters to tune - how many iterations SHOULD you\nrun it for, anyway?\n\nI've been experimenting with using the trusty old Binary Search to tune\nhyperparameters.  I'm finding it has two advantages.\n\n 1. It's blazing fast\n 2. The performance is competitive with a Randomized Search\n 3. It gives you a rough sketch of \"the lay of the land\".  An initial binary\n    search can then provide parameters for future searches, including with Grid\n    or Randomized Searches.\n\nCode is here\n[https://github.com/mattalhonte/binary-grid-search/blob/master/binarygridsearch/binarygridsearch.py]\n\nNotebook summary is here\n[https://github.com/mattalhonte/binary-grid-search/blob/master/Binary%20Search%20Interactive%20(n_estimators).ipynb]\n\nLet's see it in action!\n\nfrom sklearn.ensemble import RandomForestClassifier\n\n\nWe'll be using a Random Forest classifier, because, as with all my code posts,\nit's what I've been using recently.\n\nfrom sklearn.datasets import load_breast_cancer\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\n\nWe'll be using scikit-learn's breast cancer dataset, because I remembered that\nthese packages I'm posting about have built-in demo datasets that I should be\nusing for posts.\n\nrfArgs = {\"random_state\": 0,\n          \"n_jobs\": -1,\n          \"class_weight\": \"balanced\",\n         \"oob_score\": True}\n\n\nLet's set our random_state  for better reproducibility.\nWe'll set n_jobs=-1  because obviously we want to use all our cores, we are not\npatient people.\n\n\nWe'll have class_weight=\"balanced\"  because that'll compensate for the fact that\nthe breast cancer dataset (like most medical datasets) has unbalanced classes.\nWe'll use oob_score  because we like being lazy, part of the appeal of Random\nForests is the opportunity to be extra lazy (no need to normalize features!),\nand oob  lets us be even lazier  by giving some built-in cross-validation.\n\nNow let's define a function that'll take all this, and spit out a score.  I\nwrote the binary search function to take a function like this as an argument -\nscikit-learn is usually pretty consistent when it comes to the interface it\nprovides you, but sometimes different algorithms need to work a little\ndifferently.  For instance, since we'll be using Area Under \nprecision_recall_curve  as our metric (a good choice for classifiers with\nunbalanced classes!), it takes a teensy bit of extra fiddling to get it to play\nnicely with our oob_decision_function_.\n\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import auc\n\ndef getForestAccuracy(X, y, kwargs):\n    clf = RandomForestClassifier(**kwargs)\n    clf.fit(X, y)\n    y_pred = clf.oob_decision_function_[:, 1]\n    precision, recall, _ = precision_recall_curve(y, y_pred)\n    return auc(recall, precision)\n\n\nWe'll try to optimize the n_estimators  parameter first.  For two reasons:\n\n 1. Finding a good mix between speed and accuracy here will make it easier to\n    tune subsequent parameters.\n 2. It's the most straightforward to decide upper and lower bounds for.  Other\n    ones (like, say, max_depth) require a little work to figure the potential\n    range to search in.\n\nOkay!  So, let's put our lower limit as 32 and our upper limit as 128, because I\nread in a StackOverflow post that there's a paper that says to search within\nthat range.\n\nn_estimators = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracy,        \n                    rfArgs, \n                    \"n_estimators\", \n                    0, \n                    18, \n                    128)\n\nbgs.showTimeScoreChartAndGraph(n_estimators)\n\n\nPlotting score, time, and the ratio between them - we're not just optimizing for\nthe best score right now, we're looking for tipping points that give us good\ntradeoffs.  Scores and times are normalized for a more-meaningful ratio between\nthem.\n\nn_estimators\n score\n time\n scoreTimeRatio\n 0\n 32\n 1.073532\n 0.002459\n 1.000000\n 1\n 128\n 1.867858\n 1.002459\n 0.000000\n 2\n 80\n 2.052255\n 0.440060\n 0.006443\n 3\n 56\n 1.605447\n 0.075185\n 0.044843\n 4\n 68\n 1.910411\n 0.107187\n 0.036721\n 5\n 74\n 2.066440\n 0.377136\n 0.008320\n 6\n 77\n 2.066440\n 0.388378\n 0.007955\n 7\n 75\n 2.073532\n 0.457481\n 0.006141\n n_estimators\n score\n time\n 0\n 32\n 0.988663\n 0.180521\n 1\n 128\n 0.989403\n 0.587113\n 2\n 80\n 0.989575\n 0.358446\n 3\n 56\n 0.989159\n 0.210091\n 4\n 68\n 0.989443\n 0.223102\n 5\n 74\n 0.989588\n 0.332861\n 6\n 77\n 0.989588\n 0.337432\n 7\n 75\n 0.989595\n 0.365529\n Hrm, looks like the score starts getting somewhere interesting around 68, and\ntime starts shooting up at about 80.  Let's do another with those as our bounds!\n\nn_estimators = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracy,        \n                    rfArgs, \n                    \"n_estimators\", \n                    0, \n                    68, \n                    80)\n\nbgs.showTimeScoreChartAndGraph(n_estimators)\n\n\nn_estimators\n score\n time\n scoreTimeRatio\n 0\n 68\n 6.390333\n 0.333407\n 0.135692\n 1\n 80\n 7.223667\n 1.064343\n 0.000000\n 2\n 74\n 7.307000\n 0.404471\n 0.123622\n 3\n 71\n 6.307000\n 0.064343\n 1.000000\n 4\n 72\n 6.390333\n 0.175190\n 0.325419\n n_estimators\n score\n time\n 0\n 68\n 0.989443\n 0.344220\n 1\n 80\n 0.989575\n 0.355580\n 2\n 74\n 0.989588\n 0.345324\n 3\n 71\n 0.989430\n 0.340038\n 4\n 72\n 0.989443\n 0.341761\n 71 looks like our winner!  Or close enough for our purposes while we then go\noptimize other things.  And we only had to train our model 13 times - as opposed\nto the 96 we would have with a brute-force grid search.\n\nHopefully this will become a series on using this to tune other RF\nhyperparameters - other ones have some interesting quirks that I'd like to\nexpound upon.  Or you could just look at the GitHub repo for spoilers.  Or both!","html":"<p>Ah, hyperparameter tuning.  Time &amp; compute-intensive.  Frequently containing weird non-linearities in how changing a parameter changes the score and/or the time it takes to train the model.</p><p><code>RandomizedSearchCV</code> goes noticeably faster than a full <code>GridSearchCV</code> but it still takes a while - which can be rough, because in my experience you do still need to be iterative with it and experiment with different distributions.  Plus, then you've got hyper-hyperparameters to tune - how many iterations SHOULD you run it for, anyway?</p><p>I've been experimenting with using the trusty old Binary Search to tune hyperparameters.  I'm finding it has two advantages.</p><ol><li>It's blazing fast</li><li>The performance is competitive with a Randomized Search</li><li>It gives you a rough sketch of \"the lay of the land\".  An initial binary search can then provide parameters for future searches, including with Grid or Randomized Searches.</li></ol><p>Code is <a href=\"https://github.com/mattalhonte/binary-grid-search/blob/master/binarygridsearch/binarygridsearch.py\">here</a></p><p>Notebook summary is <a href=\"https://github.com/mattalhonte/binary-grid-search/blob/master/Binary%20Search%20Interactive%20(n_estimators).ipynb\">here</a></p><p>Let's see it in action!</p><pre><code class=\"language-python\">from sklearn.ensemble import RandomForestClassifier\n</code></pre>\n<p>We'll be using a Random Forest classifier, because, as with all my code posts, it's what I've been using recently.</p><pre><code class=\"language-python\">from sklearn.datasets import load_breast_cancer\ndata = load_breast_cancer()\nX, y = data.data, data.target\n</code></pre>\n<p>We'll be using scikit-learn's breast cancer dataset, because I remembered that these packages I'm posting about have built-in demo datasets that I should be using for posts.</p><pre><code class=\"language-python\">rfArgs = {&quot;random_state&quot;: 0,\n          &quot;n_jobs&quot;: -1,\n          &quot;class_weight&quot;: &quot;balanced&quot;,\n         &quot;oob_score&quot;: True}\n</code></pre>\n<p>Let's set our <code>random_state</code> for better reproducibility.<br>We'll set <code>n_jobs=-1</code> because obviously we want to use all our cores, we are not patient people.</p><p><br>We'll have <code>class_weight=\"balanced\"</code> because that'll compensate for the fact that the breast cancer dataset (like most medical datasets) has unbalanced classes.<br>We'll use <code>oob_score</code> because we like being lazy, part of the appeal of Random Forests is the opportunity to be extra lazy (no need to normalize features!), and <code>oob</code> lets us be <em>even lazier</em> by giving some built-in cross-validation.</p><p>Now let's define a function that'll take all this, and spit out a score.  I wrote the binary search function to take a function like this as an argument - scikit-learn is usually pretty consistent when it comes to the interface it provides you, but sometimes different algorithms need to work a little differently.  For instance, since we'll be using Area Under <code>precision_recall_curve</code> as our metric (a good choice for classifiers with unbalanced classes!), it takes a teensy bit of extra fiddling to get it to play nicely with our <code>oob_decision_function_</code>.</p><pre><code class=\"language-python\">from sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import auc\n\ndef getForestAccuracy(X, y, kwargs):\n    clf = RandomForestClassifier(**kwargs)\n    clf.fit(X, y)\n    y_pred = clf.oob_decision_function_[:, 1]\n    precision, recall, _ = precision_recall_curve(y, y_pred)\n    return auc(recall, precision)\n</code></pre>\n<p>We'll try to optimize the <code>n_estimators</code> parameter first.  For two reasons:</p><ol><li>Finding a good mix between speed and accuracy here will make it easier to tune subsequent parameters.</li><li>It's the most straightforward to decide upper and lower bounds for.  Other ones (like, say, <code>max_depth</code>) require a little work to figure the potential range to search in.</li></ol><p>Okay!  So, let's put our lower limit as 32 and our upper limit as 128, because I read in a StackOverflow post that there's a paper that says to search within that range.</p><pre><code class=\"language-python\">n_estimators = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracy,        \n                    rfArgs, \n                    &quot;n_estimators&quot;, \n                    0, \n                    18, \n                    128)\n\nbgs.showTimeScoreChartAndGraph(n_estimators)\n</code></pre>\n<p>Plotting score, time, and the ratio between them - we're not just optimizing for the best score right now, we're looking for tipping points that give us good tradeoffs.  Scores and times are normalized for a more-meaningful ratio between them.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/visualization--2-.png\" class=\"kg-image\"></figure><div class=\"tableContainer\">\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>n_estimators</th>\n      <th>score</th>\n      <th>time</th>\n      <th>scoreTimeRatio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>32</td>\n      <td>1.073532</td>\n      <td>0.002459</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>128</td>\n      <td>1.867858</td>\n      <td>1.002459</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>80</td>\n      <td>2.052255</td>\n      <td>0.440060</td>\n      <td>0.006443</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>56</td>\n      <td>1.605447</td>\n      <td>0.075185</td>\n      <td>0.044843</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>68</td>\n      <td>1.910411</td>\n      <td>0.107187</td>\n      <td>0.036721</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>74</td>\n      <td>2.066440</td>\n      <td>0.377136</td>\n      <td>0.008320</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>77</td>\n      <td>2.066440</td>\n      <td>0.388378</td>\n      <td>0.007955</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>75</td>\n      <td>2.073532</td>\n      <td>0.457481</td>\n      <td>0.006141</td>\n    </tr>\n  </tbody>\n</table>\n</div><div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>n_estimators</th>\n      <th>score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>32</td>\n      <td>0.988663</td>\n      <td>0.180521</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>128</td>\n      <td>0.989403</td>\n      <td>0.587113</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>80</td>\n      <td>0.989575</td>\n      <td>0.358446</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>56</td>\n      <td>0.989159</td>\n      <td>0.210091</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>68</td>\n      <td>0.989443</td>\n      <td>0.223102</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>74</td>\n      <td>0.989588</td>\n      <td>0.332861</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>77</td>\n      <td>0.989588</td>\n      <td>0.337432</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>75</td>\n      <td>0.989595</td>\n      <td>0.365529</td>\n    </tr>\n  </tbody>\n</table>\n</div><p>Hrm, looks like the score starts getting somewhere interesting around 68, and time starts shooting up at about 80.  Let's do another with those as our bounds!</p><pre><code class=\"language-python\">n_estimators = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracy,        \n                    rfArgs, \n                    &quot;n_estimators&quot;, \n                    0, \n                    68, \n                    80)\n\nbgs.showTimeScoreChartAndGraph(n_estimators)\n</code></pre>\n<figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/max_depth.png\" class=\"kg-image\"></figure><div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>n_estimators</th>\n      <th>score</th>\n      <th>time</th>\n      <th>scoreTimeRatio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>68</td>\n      <td>6.390333</td>\n      <td>0.333407</td>\n      <td>0.135692</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>80</td>\n      <td>7.223667</td>\n      <td>1.064343</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>74</td>\n      <td>7.307000</td>\n      <td>0.404471</td>\n      <td>0.123622</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>71</td>\n      <td>6.307000</td>\n      <td>0.064343</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>72</td>\n      <td>6.390333</td>\n      <td>0.175190</td>\n      <td>0.325419</td>\n    </tr>\n  </tbody>\n</table>\n</div><div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>n_estimators</th>\n      <th>score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>68</td>\n      <td>0.989443</td>\n      <td>0.344220</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>80</td>\n      <td>0.989575</td>\n      <td>0.355580</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>74</td>\n      <td>0.989588</td>\n      <td>0.345324</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>71</td>\n      <td>0.989430</td>\n      <td>0.340038</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>72</td>\n      <td>0.989443</td>\n      <td>0.341761</td>\n    </tr>\n  </tbody>\n</table>\n</div><p>71 looks like our winner!  Or close enough for our purposes while we then go optimize other things.  And we only had to train our model 13 times - as opposed to the 96 we would have with a brute-force grid search.</p><p>Hopefully this will become a series on using this to tune other RF hyperparameters - other ones have some interesting quirks that I'd like to expound upon.  Or you could just look at the GitHub repo for spoilers.  Or both!</p>","url":"https://hackersandslackers.com/tuning-machine-learning-hyperparameters-with-binary-search/","uuid":"ca7241c3-52cd-4910-86dc-0bb5474d07af","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b8749ed4b98380b152292ea"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736e4","title":"Lynx Roundup, September 3rd","slug":"lynx-roundup-august-29th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/lynx60@2x.jpg","excerpt":"Hippocratic oath for coders!  Dynamic programming!  A delightful cartoon about the cute robot who controls a nuclear missile!","custom_excerpt":"Hippocratic oath for coders!  Dynamic programming!  A delightful cartoon about the cute robot who controls a nuclear missile!","created_at_pretty":"18 August, 2018","published_at_pretty":"03 September, 2018","updated_at_pretty":"03 September, 2018","created_at":"2018-08-18T00:54:36.000-04:00","published_at":"2018-09-03T07:00:00.000-04:00","updated_at":"2018-09-03T07:00:00.000-04:00","meta_title":"Hippocratic oath for coders!  Dynamic programming!  A delightful cartoon about the cute robot who controls a nuclear missile! | Hackers And Slackers","meta_description":"Hippocratic oath for coders!  Dynamic programming!  A delightful cartoon about the cute robot who controls a nuclear missile!","og_description":"Hippocratic oath for coders!  Dynamic programming!  A delightful cartoon about the cute robot who controls a nuclear missile!","og_image":"https://hackersandslackers.com/content/images/lynx/lynx60@2x.jpg","og_title":"Lynx Roundup, September 3rd","twitter_description":"Hippocratic oath for coders!  Dynamic programming!  A delightful cartoon about the cute robot who controls a nuclear missile!","twitter_image":"https://hackersandslackers.com/content/images/lynx/lynx60@2x.jpg","twitter_title":"Lynx Roundup, September 3rd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.fastcompany.com/90215922/why-we-spent-two-years-rewriting-the-code-of-ethics-for-computing\n\n\n\nhttps://spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/engineers-say-no-thanks-to-silicon-valley-recruiters-citing-ethical-concerns\n\n\n\nhttps://medium.com/@johnmark/why-open-source-failed-6cae5d6a9f6\n\n\n\nSome neat computing history!\n\n\n\nhttps://en.wikipedia.org/wiki/Cyc\n\n\n\nhttps://lukasmericle.github.io/dynprotut/\n\n\n\n\n\nhttps://www.nytimes.com/2018/08/10/smarter-living/how-to-negotiate-salary.html","html":"<p></p><p><a href=\"https://www.fastcompany.com/90215922/why-we-spent-two-years-rewriting-the-code-of-ethics-for-computing\">https://www.fastcompany.com/90215922/why-we-spent-two-years-rewriting-the-code-of-ethics-for-computing</a></p><p></p><p><a href=\"https://spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/engineers-say-no-thanks-to-silicon-valley-recruiters-citing-ethical-concerns\">https://spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/engineers-say-no-thanks-to-silicon-valley-recruiters-citing-ethical-concerns</a></p><p></p><p><a href=\"https://medium.com/@johnmark/why-open-source-failed-6cae5d6a9f6\">https://medium.com/@johnmark/why-open-source-failed-6cae5d6a9f6</a></p><p></p><p>Some neat computing history!</p><p></p><p><a href=\"https://en.wikipedia.org/wiki/Cyc\">https://en.wikipedia.org/wiki/Cyc</a></p><p></p><p><a href=\"https://lukasmericle.github.io/dynprotut/\">https://lukasmericle.github.io/dynprotut/</a></p><p></p><figure class=\"kg-card kg-embed-card\"><iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/KFz0xVi25LE?feature=oembed\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe></figure><p></p><p><a href=\"https://www.nytimes.com/2018/08/10/smarter-living/how-to-negotiate-salary.html\">https://www.nytimes.com/2018/08/10/smarter-living/how-to-negotiate-salary.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-august-29th/","uuid":"89994750-2b67-4432-b99a-8099fd26f184","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b77a68cec281f15796ad2a5"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736e9","title":"Lynx Roundup, September 2nd","slug":"lynx-roundup-september-2nd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/77@2x.jpg","excerpt":"A pocket calculator with all-optical circuitry!  Complaints from a Google Chrome dev!  Health checks in Distributed Systems!","custom_excerpt":"A pocket calculator with all-optical circuitry!  Complaints from a Google Chrome dev!  Health checks in Distributed Systems!","created_at_pretty":"18 August, 2018","published_at_pretty":"02 September, 2018","updated_at_pretty":"02 September, 2018","created_at":"2018-08-18T01:14:01.000-04:00","published_at":"2018-09-02T07:00:00.000-04:00","updated_at":"2018-09-02T12:41:01.000-04:00","meta_title":"A pocket calculator with all-optical circuitry!  Complaints from a Google Chrome dev!  Health checks in Distributed Systems! | Hackers And Slackers","meta_description":"A pocket calculator with all-optical circuitry!  Complaints from a Google Chrome dev!  Health checks in Distributed Systems!","og_description":"A pocket calculator with all-optical circuitry!  Complaints from a Google Chrome dev!  Health checks in Distributed Systems!","og_image":"https://hackersandslackers.com/content/images/lynx/77@2x.jpg","og_title":"Lynx Roundup, September 2nd","twitter_description":"A pocket calculator with all-optical circuitry!  Complaints from a Google Chrome dev!  Health checks in Distributed Systems!","twitter_image":"https://hackersandslackers.com/content/images/lynx/77@2x.jpg","twitter_title":"Lynx Roundup, September 2nd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://medium.com/@TeamCoworker/a-simple-guide-to-talking-about-workplace-issues-with-your-coworkers-1b0ce08c3a8a\n\n\n\nhttps://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc\n\n\n\nhttps://medium.com/@copyconstruct/health-checks-in-distributed-systems-aa8a0e8c1672\n\n\n\nhttp://www.aalto.fi/en/current/news/2018-07-30/\n\n\n\nIn my 30+ year programming career, every single, bizarrely obscure bug that took\nweeks to chase down has ended up being a one-line fix.\n\n— Josh Susser (@joshsusser) August 14, 2018\n[https://twitter.com/joshsusser/status/1029480886033506304?ref_src=twsrc%5Etfw]\n\nhttps://randomascii.wordpress.com/2018/08/16/24-core-cpu-and-i-cant-type-an-email-part-one/\n\n\n\nhttps://pudding.cool/2018/08/pockets/","html":"<p></p><p><a href=\"https://medium.com/@TeamCoworker/a-simple-guide-to-talking-about-workplace-issues-with-your-coworkers-1b0ce08c3a8a\">https://medium.com/@TeamCoworker/a-simple-guide-to-talking-about-workplace-issues-with-your-coworkers-1b0ce08c3a8a</a></p><p></p><p><a href=\"https://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc\">https://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc</a></p><p></p><p><a href=\"https://medium.com/@copyconstruct/health-checks-in-distributed-systems-aa8a0e8c1672\">https://medium.com/@copyconstruct/health-checks-in-distributed-systems-aa8a0e8c1672</a></p><p></p><p><a href=\"http://www.aalto.fi/en/current/news/2018-07-30/\">http://www.aalto.fi/en/current/news/2018-07-30/</a></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">In my 30+ year programming career, every single, bizarrely obscure bug that took weeks to chase down has ended up being a one-line fix.</p>&mdash; Josh Susser (@joshsusser) <a href=\"https://twitter.com/joshsusser/status/1029480886033506304?ref_src=twsrc%5Etfw\">August 14, 2018</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><p></p><p><a href=\"https://randomascii.wordpress.com/2018/08/16/24-core-cpu-and-i-cant-type-an-email-part-one/\">https://randomascii.wordpress.com/2018/08/16/24-core-cpu-and-i-cant-type-an-email-part-one/</a></p><p></p><p><a href=\"https://pudding.cool/2018/08/pockets/\">https://pudding.cool/2018/08/pockets/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-2nd/","uuid":"44a1e4c2-931b-4fbd-ad62-c256046373a4","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b77ab19ec281f15796ad2b4"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736e8","title":"Lynx Roundup, September 1st","slug":"lynx-roundup-september-1st","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/79-6@2x.jpg","excerpt":"Open science!  Awesome Scala tutorial!  JOINs in Postgres!","custom_excerpt":"Open science!  Awesome Scala tutorial!  JOINs in Postgres!","created_at_pretty":"18 August, 2018","published_at_pretty":"01 September, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-08-18T01:09:43.000-04:00","published_at":"2018-09-01T07:00:00.000-04:00","updated_at":"2019-02-14T05:20:33.000-05:00","meta_title":"Open science!  Awesome Scala tutorial!  JOINs in Postgres! | Hackers And Slackers","meta_description":"Open science!  Awesome Scala tutorial!  JOINs in Postgres!","og_description":"Open science!  Awesome Scala tutorial!  JOINs in Postgres!","og_image":"https://hackersandslackers.com/content/images/2019/02/79-6@2x.jpg","og_title":"Lynx Roundup, September 1st","twitter_description":"Open science!  Awesome Scala tutorial!  JOINs in Postgres!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/79-6@2x.jpg","twitter_title":"Lynx Roundup, September 1st","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://mindhacks.com/2018/08/14/open-science-essentials-preprints/\n\n\n\nhttps://www.workplacefairness.org/independent-contractors\n\n\n\nhttps://medium.com/@durga.spirit/learning-scala-from-0-60-part-i-dc095d274b78\n\n\n\nhttps://medium.com/technomancy/the-math-required-for-machine-learning-af0d90db3903\n\n\n\nhttps://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981\n\n\n\nhttps://www.brianlikespostgres.com/cost-of-a-join.html\n\n\n\nhttps://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3","html":"<p></p><p><a href=\"https://mindhacks.com/2018/08/14/open-science-essentials-preprints/\">https://mindhacks.com/2018/08/14/open-science-essentials-preprints/</a></p><p></p><p><a href=\"https://www.workplacefairness.org/independent-contractors\">https://www.workplacefairness.org/independent-contractors</a></p><p></p><p><a href=\"https://medium.com/@durga.spirit/learning-scala-from-0-60-part-i-dc095d274b78\">https://medium.com/@durga.spirit/learning-scala-from-0-60-part-i-dc095d274b78</a></p><p></p><p><a href=\"https://medium.com/technomancy/the-math-required-for-machine-learning-af0d90db3903\">https://medium.com/technomancy/the-math-required-for-machine-learning-af0d90db3903</a></p><p></p><p><a href=\"https://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981\">https://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981</a></p><p></p><p><a href=\"https://www.brianlikespostgres.com/cost-of-a-join.html\">https://www.brianlikespostgres.com/cost-of-a-join.html</a></p><p></p><p><a href=\"https://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3\">https://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3</a></p><p></p>","url":"https://hackersandslackers.com/lynx-roundup-september-1st/","uuid":"23aec75e-72d1-46a5-b388-39da35b90c79","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b77aa17ec281f15796ad2b1"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736ed","title":"Dynamic Tension! Creating and Using Dynamic Named Ranges in Excel","slug":"dynamic-named-ranges-in-excel","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/08/maxidk@2x.jpg","excerpt":"Dynamically load data in smart pivot tables.","custom_excerpt":"Dynamically load data in smart pivot tables.","created_at_pretty":"30 August, 2018","published_at_pretty":"01 September, 2018","updated_at_pretty":"02 February, 2019","created_at":"2018-08-30T17:00:23.000-04:00","published_at":"2018-08-31T21:13:00.000-04:00","updated_at":"2019-02-02T03:50:02.000-05:00","meta_title":"Dynamic Named Ranges in Excel | Hackers And Slackers","meta_description":"Use a named dynamic range and a form control to dynamically auto-populate and refresh Excel pivot tables.","og_description":"Use a named dynamic range and a form control to dynamically auto-populate and refresh Excel pivot tables.","og_image":"https://hackersandslackers.com/content/images/2018/08/maxidk@2x.jpg","og_title":"Dynamic Tension! Creating and Using Dynamic Named Ranges in Excel","twitter_description":"Use a named dynamic range and a form control to dynamically auto-populate and refresh Excel pivot tables.","twitter_image":"https://hackersandslackers.com/content/images/2018/08/maxidk@2x.jpg","twitter_title":"Dynamic Tension! Creating and Using Dynamic Named Ranges in Excel","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"First things first, 10 points to anyone who understands what the title is\nreferring to (that's either Charles Atlas' workout philosophy, or one of core\ntenants of Bokononism in Kurt Vonnegut's standout Cat's Cradle). \n\nNow, with my obscure reference quota filled for the day, let's assume that\nyou've been working as an analyst for some time now. As stated in a previous\npost, generally you're likely to get promoted into a management position, where\nyou no longer need your formidable skills of analysis, and they too, like all\ngood things, will atrophy to nothingness. However, for those of you who have\ndemonstrated such overwhelming nuance of technique that your company fears the\nloss of your truly awe-inspiring abilities more than they love adhering to the\nPeter Principle, there may indeed be another road.\n\nThis unlikely confluence of events generally begins after the fifth or sixth\ntime that you've been asked to write a step-by-step tutorial showing how you\nbuilt a specific report, only to find out that if written out in a truly \nstep-wise fashion would take up 16 pages, and thus would never EVER be looked\nat. This phenomenon serves a dual purpose: \n\n 1. It misleads your company into believing that what you do is complex.\n 2. It is taken as evidence that you are a literal wizard, and you can't train a\n    muggle to do magic. \n\nOnce your company has taken the bait, they may realize that you are a true elite\noperator, and that the loss of your abilities would result in a substantial\ndrain on your business' intelligence. Enter the Lead Analyst (also called a head\nanalyst, chief analyst, or executive analyst if where you work is incredibly far\nup it's own ass). This job title exists solely to reward those of you who have\nbuilt up enough number crunching credit to make your employer realize that if\nthey promote you to a manager, they lose, and if they don't promote you at all,\nyou can leave at any time. \n\nSo, hotshot, what does this job involve? Simply put, your company no longer\nquestions you about...basically anything (and if they ever do, say you're\ncompiling, always works) and you might even be entrusted to speak directly to\nthe notorious Dataratti that we spoke of several posts ago (they're all actually\nreally cool guys, and appreciate being able to talk to someone who understands\nwhat their job and capabilities actually are). In exchange for these two awesome\nperks, all you have to be able to do is build reports that can be used by anyone\n...\n\nNow all of you who work in the field and have to engage in this practice just\nlet out an enormous sigh, and the reason for this is because now you have to\nwrite reports that:\n\n1. Can't use macros because the end user doesn't know what a macro is.\n2. Need to have built in constraints because \"it just needs to be there to work\"\nis literally begging someone to mess up a perfectly good formula.\n3. Can't rely on the manual typing of actual formulae because explaining to\nsomeone that the \"dollar sign isn't a typo\" to someone never quite sticks.\n4. Can't utilize your own macros because the end user isn't going to have access\nto them, and finally... \n5. You can no longer say things like \"pivot out\", \"lookup\", or \"index\" and\ninstead need to break each of those things down into a series of button clicks\n(hence why the documentation becomes 16 pages).\n\nWith that being said, let's jump into one of the easiest ways that you can build\nreports that allow even the unenlightened the ability to touch the sun: using a\nnamed dynamic range and a form control to auto-populate and refresh a pivot\ntable.\n\nNow, if any of those words are unfamiliar to you, you need to go back to the\nbeginning of the series (with special attention to the post regarding naming\nranges and active-X controls) so that you know how to do the following:\n\n 1. Build a pivot table\n 2. Name a range\n\nIf you've got the tricks in the bag, let's get going. In order to get this trick\nto work the first step is building a named dynamic range. This is a glorious\ntrick that takes the convenience of naming a range (being able to grab that\ninformation from anywhere in a workbook) along with the UNLIMITED POWER of\nassociating anything that someone may plug into the range with the name. \n\nFirst, let's start with a sample data-set of super heroes and their secret\nidentities, like so (you'll need developer active for this to work): \n\nMiles Morales and Amadeus Cho notwithstandingSo, now's where the magic happens:\nclick formulas-->Name Manager\n\nNote the dialogue box.In the resulting dialog box, click \"new\":\n\nSeen here: how these become 16 page tutorialsIn the resulting dialog box, name\nthe range whatever you want (just remember...no spaces), but the magic really\nhappens at the bottom where it says \"refers to\", as shown here: \n\nPictured here: what the coolest thing looks like before it happensNow, in that\nbox, you'll notice that you can put in a formula, and this one is KEY to\nremember both for this, and anytime you want to make a dynamic range in the\nfuture, and it is: \n=OFFSET(Sheet1!$A$1,0,0,COUNTA(Sheet1!$A:$A),COUNTA(Sheet1!$1:$1))\n* substitute the name of your worksheet for sheet1. \nEssentially, OFFSET  is how you set your imaginary cursor (remember, you CAN\ntechnically do everything you see in Excel from a command line, and this is how\nit knows where you are). It requires 3-5 variables: \n\n * The first (the reference) is what you want your \"mouse\" to select before it\n   finds it's way elsewhere.\n * The second and third is the number of rows and columns you want to move in\n   order to select your next item. You can end here, but you'd just wind up\n   moving your \"cursor\" to another cell. Instead, we set this to zero for both\n   because you don't want to move anywhere. \n * The 4th is the hight (in cells) of what you're selecting (that way, you can\n   select any number of cells vertically from where your cursor wound up) and we\n   use \"COUNTA\" here to mean the number of cells that aren't blank in column A.\n * The 5th and final variable is the width which serves the same function as\n   height in the other direction. By using \"COUNTA\" here, we're selecting the\n   number of columns that aren't blank in row 1.\n\nIf you did everything right, you should end up like this: \n\nNow you can officially claim to be \"Dynamic\" on your resumeIf you're thinking\nwith portals, you may have already pieced together what we've done here: by\nnaming the range, we can substitute any variable that'll support an array with\nthe name of the range, AND by using that offset formula, we've just made it so\nthat no matter what you throw into this first sheet, it gets added to the range.\n \n\nThis by itself is very cool, and very useful, but let's take it a step further\nand I'll show you how you can use this dynamic named range to make an \"idiot\nproof\" updater for a pivot table. \n\nThe first step is to of course make a pivot table, however, we're going to do\nsomething daring: a pivot table requires an array...and we've just created an\narray that's DYNAMIC. So, click insert, pivot table, and then when it asks you\nwhat you what you want in the table, tell it that you want to put powers in\nthere (that's the name of my range) like so:\n\nNo one man should have all this power...and boom:\n\nNot for VillainsBUT IT DOESN'T END THERE FOLKS. As your range is dynamic, you\ncan add whatever rows or columns to the first page as you wish, and then if you\nrefresh your pivot table (right click, refresh) these changes will be\nreflected...watch\n\nSpecifically for VillainsIT'S DYNAMIC!So, now you've learned how to:\n\n * Create a named dynamic range\n * Use the offset function to set a virtual cursor (this becomes exceedingly\n   important if ever you decide you want to code for real).\n * Refresh a pivot table with information updated in the dynamic range. \n\nNext time, we'll take it up a notch, and remove any sort of thought needed to\nupdate these tables! \n\nIt's Munchin' Time, \n\n-Snacks","html":"<p>First things first, 10 points to anyone who understands what the title is referring to (that's either Charles Atlas' workout philosophy, or one of core tenants of Bokononism in Kurt Vonnegut's standout <em>Cat's Cradle). </em></p><p>Now, with my obscure reference quota filled for the day, let's assume that you've been working as an analyst for some time now. As stated in a previous post, generally you're likely to get promoted into a management position, where you no longer need your formidable skills of analysis, and they too, like all good things, will atrophy to nothingness. However, for those of you who have demonstrated such overwhelming nuance of technique that your company fears the loss of your truly awe-inspiring abilities more than they love adhering to the Peter Principle, there may indeed be another road.</p><p>This unlikely confluence of events generally begins after the fifth or sixth time that you've been asked to write a step-by-step tutorial showing how you built a specific report, only to find out that if written out in a <em>truly </em>step-wise fashion would take up 16 pages, and thus would never EVER be looked at. This phenomenon serves a dual purpose: </p><ol><li>It misleads your company into believing that what you do is <em>complex.</em></li><li>It is taken as evidence that you are a literal wizard, and you can't train a muggle to do magic. <em> </em></li></ol><p>Once your company has taken the bait, they may realize that you are a true elite operator, and that the loss of your abilities would result in a substantial drain on your business' intelligence. Enter the Lead Analyst (also called a head analyst, chief analyst, or executive analyst if where you work is incredibly far up it's own ass). This job title exists solely to reward those of you who have built up enough number crunching credit to make your employer realize that if they promote you to a manager, they lose, and if they don't promote you at all, you can leave at any time. </p><p>So, hotshot, what does this job involve? Simply put, your company no longer questions you about...basically anything (and if they ever do, say you're compiling, always works) and you might even be entrusted to speak directly to the notorious Dataratti that we spoke of several posts ago (they're all actually really cool guys, and appreciate being able to talk to someone who understands what their job and capabilities actually are). In exchange for these two awesome perks, all you have to be able to do is build reports that can be used by <em>anyone</em>...</p><p>Now all of you who work in the field and have to engage in this practice just let out an enormous sigh, and the reason for this is because now you have to write reports that:<br><br>1. Can't use macros because the end user doesn't know what a macro is.<br>2. Need to have built in constraints because \"it just needs to be there to work\" is literally begging someone to mess up a perfectly good formula.<br>3. Can't rely on the manual typing of actual formulae because explaining to someone that the \"dollar sign isn't a typo\" to someone never quite sticks.<br>4. Can't utilize your own macros because the end user isn't going to have access to them, and finally... <br>5. You can no longer say things like \"pivot out\", \"lookup\", or \"index\" and instead need to break each of those things down into a series of button clicks (hence why the documentation becomes 16 pages).</p><p>With that being said, let's jump into one of the easiest ways that you can build reports that allow even the unenlightened the ability to touch the sun: using a named dynamic range and a form control to auto-populate and refresh a pivot table.</p><p>Now, if any of those words are unfamiliar to you, you need to go back to the beginning of the series (with special attention to the post regarding naming ranges and active-X controls) so that you know how to do the following:</p><ol><li>Build a pivot table</li><li>Name a range</li></ol><p>If you've got the tricks in the bag, let's get going. In order to get this trick to work the first step is building a <strong>named dynamic range. </strong>This is a glorious trick that takes the convenience of naming a range (being able to grab that information from anywhere in a workbook) along with the <em>UNLIMITED POWER </em>of associating anything that someone may plug into the range with the name. </p><p>First, let's start with a sample data-set of super heroes and their secret identities, like so (you'll need developer active for this to work): </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-2.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-7.png\" class=\"kg-image\"><figcaption>Miles Morales and Amadeus Cho notwithstanding</figcaption></figure><p>So, now's where the magic happens: click formulas--&gt;Name Manager</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-8.png\" class=\"kg-image\"><figcaption>Note the dialogue box.</figcaption></figure><p>In the resulting dialog box, click \"new\":</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-9.png\" class=\"kg-image\"><figcaption>Seen here: how these become 16 page tutorials</figcaption></figure><p>In the resulting dialog box, name the range whatever you want (just remember...no spaces), but the magic really happens at the bottom where it says \"refers to\", as shown here: </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-10.png\" class=\"kg-image\"><figcaption>Pictured here: what the coolest thing looks like before it happens</figcaption></figure><p>Now, in that box, you'll notice that you can put in a formula, and this one is KEY to remember both for this, and anytime you want to make a dynamic range in the future, and it is: <code>=OFFSET(Sheet1!$A$1,0,0,COUNTA(Sheet1!$A:$A),COUNTA(Sheet1!$1:$1))</code><br>* substitute the name of your worksheet for sheet1. <br>Essentially, <strong>OFFSET</strong> is how you set your imaginary cursor (remember, you CAN technically do everything you <em>see </em>in Excel from a command line, and this is how it knows where you are). It requires 3-5 variables: </p><ul><li>The first (the reference) is what you want your \"mouse\" to select before it finds it's way elsewhere.</li><li>The second and third is the number of rows and columns you want to move in order to select your next item. You can end here, but you'd just wind up moving your \"cursor\" to another cell. Instead, we set this to zero for both because you don't want to <em>move </em>anywhere. </li><li>The 4th is the hight (in cells) of what you're selecting (that way, you can select any number of cells vertically from where your cursor wound up) and we use \"COUNTA\" here to mean the number of cells that aren't blank in column A.</li><li>The 5th and final variable is the width which serves the same function as height in the other direction. By using \"COUNTA\" here, we're selecting the number of columns that aren't blank in row 1.</li></ul><p>If you did everything right, you should end up like this: </p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-11.png\" class=\"kg-image\"><figcaption>Now you can officially claim to be \"Dynamic\" on your resume</figcaption></figure><p>If you're thinking with portals, you may have already pieced together what we've done here: by naming the range, we can substitute any variable that'll support an array with the name of the range, AND by using that offset formula, we've just made it so that no matter what you throw into this first sheet, it gets added to the range. </p><p>This by itself is very cool, and very useful, but let's take it a step further and I'll show you how you can use this dynamic named range to make an \"idiot proof\" updater for a pivot table. </p><p>The first step is to of course make a pivot table, however, we're going to do something daring: a pivot table requires an array...and we've just created an array that's DYNAMIC. So, click insert, pivot table, and then when it asks you what you what you want in the table, tell it that you want to put powers in there (that's the name of my range) like so:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-12.png\" class=\"kg-image\"><figcaption>No one man should have all this power...</figcaption></figure><p>and boom:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-13.png\" class=\"kg-image\"><figcaption>Not for Villains</figcaption></figure><p>BUT IT DOESN'T END THERE FOLKS. As your range is dynamic, you can add whatever rows or columns to the first page as you wish, and then if you refresh your pivot table (right click, refresh) these changes will be reflected...watch</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-3.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-14.png\" class=\"kg-image\"><figcaption>Specifically for Villains</figcaption></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-15.png\" class=\"kg-image\"></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://res-5.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/image-16.png\" class=\"kg-image\"><figcaption>IT'S DYNAMIC!</figcaption></figure><p>So, now you've learned how to:</p><ul><li>Create a named dynamic range</li><li>Use the offset function to set a virtual cursor (this becomes exceedingly important if ever you decide you want to code for real).</li><li>Refresh a pivot table with information updated in the dynamic range. </li></ul><p>Next time, we'll take it up a notch, and remove any sort of thought needed to update these tables! </p><p>It's Munchin' Time, </p><p>-Snacks</p>","url":"https://hackersandslackers.com/dynamic-named-ranges-in-excel/","uuid":"b7ef3b91-ecfd-42ab-8288-d2de7d4ceb32","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b885ae7075b34075786e311"}}]}},"pageContext":{"pageNumber":17,"humanPageNumber":18,"skip":204,"limit":12,"numberOfPages":33,"previousPagePath":"/page/17","nextPagePath":"/page/19"}}