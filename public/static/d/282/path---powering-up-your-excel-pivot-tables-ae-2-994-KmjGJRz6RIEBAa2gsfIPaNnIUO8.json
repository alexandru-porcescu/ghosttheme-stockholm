{"data":{"ghostPost":{"id":"Ghost__Post__5c12d7bfe875ad7bb867365c","title":"Adventures in Excel: Power to the Pivot","slug":"powering-up-your-excel-pivot-tables","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/maxexcel3-3.jpg","excerpt":"Power up your Excel Pivot Tables with these pro moves.","custom_excerpt":"Power up your Excel Pivot Tables with these pro moves.","created_at_pretty":"23 May, 2018","published_at_pretty":"25 May, 2018","updated_at_pretty":"28 February, 2019","created_at":"2018-05-23T18:57:23.000-04:00","published_at":"2018-05-24T20:35:00.000-04:00","updated_at":"2019-02-28T02:37:16.000-05:00","meta_title":"Adventures in Excel: Power to the Pivot | Hackers and Slackers","meta_description":"Power up your Excel Pivot Tables with these pro moves.","og_description":"Power up your Excel Pivot Tables with these pro moves.","og_image":"https://hackersandslackers.com/content/images/2019/02/maxexcel3-3.jpg","og_title":"Adventures in Excel: Power to the Pivot","twitter_description":"Power up your Excel Pivot Tables with these pro moves.","twitter_image":"https://hackersandslackers.com/content/images/2019/02/maxexcel3-3.jpg","twitter_title":"Adventures in Excel: Power to the Pivot","authors":[{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Max Mileaf","slug":"snacks","bio":"One of three therapists in the known universe who knows how to use a computer. Finds meaning in highly protected data, in a cave, utilizing nothing but a box of scraps. ","profile_image":"https://hackersandslackers.com/content/images/2019/03/max2.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},"tags":[{"name":"Excel","slug":"excel","description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"public"},{"name":"Data Analysis","slug":"data-analysis","description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","feature_image":null,"meta_description":"Drawing meaningful conclusions from data. Includes interpretation, dashboard creation, and data manipulation.","meta_title":"Data Analysis | Hackers and Slackers","visibility":"public"},{"name":"#Adventures in Excel","slug":"adventures-in-excel","description":"Excel secrets and magic. The kind of industry knowledge that could put financial analysts out of business.","feature_image":"https://res.cloudinary.com/hackers-and-slackers/image/upload/q_auto:good/v1/images/excelseries-1.jpg","meta_description":"Pro Excel secrets and magic. The kind of industry knowledge to put junior finance guys out of business.","meta_title":"Adventures in Excel","visibility":"internal"}],"plaintext":"During the last discussion, you've (hopefully) learned how to generate a pivot\ntable, and learned about the four \"buckets\" that can house your columns:\n\n * Filter\n * Row\n * Column\n * Value\n\nI'm also going to make the wild assumption that you've played around with your\nnewly birthed pivot table, taking your column headings from your \"raw\" data (in\nthe lingua franca of the numerically inclined, this means the data just as\nyou've received it, before you add formulae or engage in any other\nmanipulation.) Hopefully this gave you a feel of how a pivot table works, and if\nyour synapses are wired in a very specific way  you may even begin to feel out\nwhy pivot tables are such a game-changer. With this base in mind, in this post,\nwe're going to learn what each of those buckets actually do, and explore some\nreally cool ways that you can mess with your raw data within the pivot\nenvironment.\n\nBefore we go further, we must first understand some foundation facts about\nworking with Pivots that will save you heartache and frustration out of the\nprocess:\n\n 1.   Remember, any data within the pivot table does not affect the raw data,\n    this makes pivot tables the ideal way to look at your data through different\n    lenses. \n 2.   You can utilize a heading in your pivot table in multiple locations (or\n    even multiple times in the same location!) to view your data in different\n    ways. The exact way this works is difficult to explain, so try it yourself\n    and find out. \n 3.   Any changes to your raw data (especially if you didn't highlight the\n    entirety of your data) will not  be reflected in the pivot table UNLESS you\n    right click the table, and press \"refresh\", this will then take into account\n    any data changed in the raw data (assuming that the change took place within\n    the area you highlighted, if you add a column or row, you need to redo the\n    table) \n 4.   You can copy/paste any part of the pivot table, and contents that you\n    highlighted to copy will appear. HOWEVER, if you highlight all  visible\n    parts of the pivot table, you'll actually copy the whole pivot (which you\n    can continue modifying). This is very useful if you want to make a minor\n    change to a pivot table, and compare them side by side (we'll dive deeper\n    into this topic in a later post). \n 5.   This isn't exclusive to pivot tables, but remember the absolute golden\n    rule  of Excel: much like an obnoxiously large Leatherman (or a Swiss army\n    knife, depending on how over-prepared you want to be) while there are nearly\n    infinite tools or settings available, a hypermajority  of Excel users will\n    never touch even half of the options available, and are still strong in the\n    ways of magic (#wizard), so just because you can press all the buttons,\n    doesn't mean you should. \n\nWith all three of these rules in mind, let's dive into each of the buckets, what\nthey do, and how you can use this to really start to get wild with your data.\nLet's start with the most straightforward:\n\nFilters\nThe filter bucket allows you to place one (or more!) of your headings (AKA your\ncolumns in the raw data) in order to filter in or out those values out of the\nentire pivot table. For instance, If you have a column of people's names, and\nyou put names into the filter bucket, you can then choose the names that you\nwant to include the associated data. One great use for the filter bucket is if\nyou have a dataset with dates, you can filter out a specific Month/Day/Year and\nthe rest of your data will only display information from that particular time\nperiod.\n\nRows\nRows are the bread and butter of a pivot table (and as we discussed last time,\nthe thing that clicking on a heading defaults to). This is the main area where\nyour data will live. For example, if you have a dataset of Names, IDs, and\nBirthdays, and you click Names, the pivot table will show all of the DISTINCT \nnames in a column within the pivot. For example, if you have the dataset of\nnames:\n\nCOLUMN A COLUMN B Bob Sally Bob Jim Tom Larry Bob Your pivot table will display:\n\nCOLUMN A COLUMN B Bob Sally Jim Tom Larry In other words, it treats all Bobs the\nsame, and this functionality is *Muy importanté\n\nHowever, what if you want to see how many Bobs exist within your data? Well...\n\nValues\nThe values tab is perhaps the most flexible part of the pivot table. By putting\na heading within the value tab, it will default to showing you the Count, or the\nnumber of appearances that a particular value shows up within a column of your\ndataset. So for example, if you drag names into both the row and values buckets,\nyou'll wind up with this (a pivot table will always show a grand total (unless\nyou specifically tell the pivot not to, which is a possibility, however, because\nyou can copy and paste any part of the pivot, it's rarely necessary):\n\n             COLUMN ACOLUMN B        Bob3        Sally1        Bob1        Jim1\n       Tom1        **Total****7**\n\nNow, notice that above I said that by dragging a heading into the values bucket\nit'll default to a count (unless the column is all numbers, then it'll default\nto a sum), however, this is not the only possibility. By left clicking the\nheading within the value bucket and choosing \"value field settings), you can\nchoose from a mind-boggling array of possible mathematical operations, the ones\nthat you will generally use most often are probably going to be count  (the\nnumber of appearances of a given value within a dataset) and sum  (the combined\ntotal of all the numbers associated with each value in your row bucket). One\nimportant piece of advice though, you can not  sum text, Excel won't let you\n(even if the text looks like a number), so if you're using numbers, be sure to\ntell Excel that you're looking at numbers (this issue will happen more often\nthan you could possibly imagine!)\n\nOther useful operators are count distinct  (which you can only utilize if you\nchecked add to data model  when you built the table) and min or max (returning\nthe lowest or highest value associated with a particular value in your rows, and\nyou can only use this if you did not  click add to data model  when you built\nthe table). A good example of using Max or Min is when you have say names and\nsalaries, where you can show the highest and lowest salary for a particular\nname. Keep in mind that you can have more than one value operator (like min and\nmax) per heading, thus putting both the minimum and maximum value next to each\nother on the table. Which leads us to the generally least used bucket...\n\nColumns\nOne thing I intentionally left out was what a pivot table actually does  with\nyour data. A gross over-simplification of the functionality is that it\nconsolidates (picking out those distinct values), summarizes (shows totals, and\ngrand totals), and most importantly, it flips your columns and rows (hence the\nreason it's called a pivot  table.) Thus, the column bucket is generally just\nused as a place where your values go automatically when you populate the values\nbucket. The reason columns get kind of cumbersome is because it literally widens\nyour pivot by how many ever values exist in your dataset, thus, anything more\nthan say 20 values becomes almost impossible to read, let alone use in a\nmeaningful way.\n\nThere are some rare cases in which using a heading in the column bucket may make\nsense though, for instance, if you have birth months as one of your headings,\nand names for rows, you can put the months in the column bucket and then get a\ncount showing each how many people with a particular name land at a particular\nmonth in a grid or \"heat map\" (a fancy way to say a chart showing concentrations\nof something) fashion. Another use case (and one I use on the day to day) is\nfinding the numbers of providers who utilize a particular procedure for which\nthere is a known value (there are 12 that I look at). You have the procedure\nnames as the columns, and you have the providers who administer the procedures\nas the rows. You then put measure in the value bucket. This gives me a nice,\nconcise grid for which I can see which providers give how many of which of the\n12 procedures...which on it's own is sorta useful, but when combined with a\ntrick we already learned, some epic level spellcasting is afoot. Unfortunately,\nthat'll have to wait until next time.\n\nIn summary, we learned:\n\n * The purpose of the filter bucket within a pivot table\n * The purpose of the rows bucket within a pivot table and the fact that it\n   shows distinct values\n * The purpose of the values bucket within a pivot table, and how you can have\n   the column use different mathematical operators (such as count, sum, min, and\n   max) to find different information within a dataset... and\n * The purpose (or lack thereof) of the columns bucket within a pivot table, and\n   potential use case scenarios for this function.\n\nNext time, we start combining knowledge in order to get freaky with your data in\nways that the lord of Excel themselves did not consider.\n\nPivot till you puke,\n\n-Snacks","html":"<p>During the last discussion, you've (hopefully) learned how to generate a pivot table, and learned about the four \"buckets\" that can house your columns:</p><ul><li>Filter</li><li>Row</li><li>Column</li><li>Value</li></ul><p>I'm also going to make the wild assumption that you've played around with your newly birthed pivot table, taking your column headings from your \"raw\" data (in the lingua franca of the numerically inclined, this means the data just as you've received it, before you add formulae or engage in any other manipulation.) Hopefully this gave you a feel of how a pivot table works, and if your synapses are wired in a very specific way  you may even begin to feel out why pivot tables are such a game-changer. With this base in mind, in this post, we're going to learn what each of those buckets actually do, and explore some really cool ways that you can mess with your raw data within the pivot environment.</p><p>Before we go further, we must first understand some foundation facts about working with Pivots that will save you heartache and frustration out of the process:</p><ol><li> Remember, any data within the pivot table does not affect the raw data, this makes pivot tables the ideal way to look at your data through different lenses. </li><li> You can utilize a heading in your pivot table in multiple locations (or even multiple times in the same location!) to view your data in different ways. The exact way this works is difficult to explain, so try it yourself and find out. </li><li> Any changes to your raw data (especially if you didn't highlight the entirety of your data) <strong>will not</strong> be reflected in the pivot table UNLESS you right click the table, and press \"refresh\", this will then take into account any data changed in the raw data (assuming that the change took place within the area you highlighted, if you add a column or row, you need to redo the table) </li><li> You can copy/paste any part of the pivot table, and contents that you highlighted to copy will appear. HOWEVER, if you highlight <strong>all</strong> visible parts of the pivot table, you'll actually copy the whole pivot (which you can continue modifying). This is very useful if you want to make a minor change to a pivot table, and compare them side by side (we'll dive deeper into this topic in a later post). </li><li> This isn't exclusive to pivot tables, but remember the <strong>absolute golden rule</strong> of Excel: much like an obnoxiously large Leatherman (or a Swiss army knife, depending on how over-prepared you want to be) while there are nearly infinite tools or settings available, a <em>hypermajority</em> of Excel users will never touch even half of the options available, and are still strong in the ways of magic (#wizard), so just because you can press all the buttons, doesn't mean you should. </li></ol><p>With all three of these rules in mind, let's dive into each of the buckets, what they do, and how you can use this to really start to get wild with your data. Let's start with the most straightforward:</p><h3 id=\"filters\">Filters</h3><p>The filter bucket allows you to place one (or more!) of your headings (AKA your columns in the raw data) in order to filter in or out those values out of the entire pivot table. For instance, If you have a column of people's names, and you put names into the filter bucket, you can then choose the names that you want to include the associated data. One great use for the filter bucket is if you have a dataset with dates, you can filter out a specific Month/Day/Year and the rest of your data will only display information from that particular time period.</p><h3 id=\"rows\">Rows</h3><p>Rows are the bread and butter of a pivot table (and as we discussed last time, the thing that clicking on a heading defaults to). This is the main area where your data will live. For example, if you have a dataset of Names, IDs, and Birthdays, and you click Names, the pivot table will show all of the <em><strong>DISTINCT</strong></em> names in a column within the pivot. For example, if you have the dataset of names:</p><div class=\"tableContainer\">\n<table>\n  <thead>\n    <tr>\n      <th> COLUMN A </th>\n      <th> COLUMN B </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Sally </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Jim </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Tom </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Larry </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p>Your pivot table will display:</p><div class=\"tableContainer\">\n<table>\n  <thead>\n    <tr>\n      <th> COLUMN A </th>\n      <th> COLUMN B </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td> Bob </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Sally </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Jim </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Tom </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td> Larry </td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n</div><p>In other words, it treats all Bobs the same, and this functionality is *<strong>Muy importanté</strong></p><p>However, what if you want to see how many Bobs exist within your data? Well...</p><h3 id=\"values-function values() { [native code] }1\">Values</h3><p>The values tab is perhaps the most flexible part of the pivot table. By putting a heading within the value tab, it will default to showing you the <em>Count</em>, or the number of appearances that a particular value shows up within a column of your dataset. So for example, if you drag names into both the row and values buckets, you'll wind up with this (a pivot table will always show a grand total (unless you specifically tell the pivot not to, which is a possibility, however, because you can copy and paste any part of the pivot, it's rarely necessary):</p><p>            COLUMN ACOLUMN B        Bob3        Sally1        Bob1        Jim1        Tom1        **Total****7**    </p><p>Now, notice that above I said that by dragging a heading into the values bucket it'll default to a count (unless the column is all numbers, then it'll default to a sum), however, this is not the only possibility. By left clicking the heading within the value bucket and choosing \"value field settings), you can choose from a mind-boggling array of possible mathematical operations, the ones that you will generally use most often are probably going to be <em>count</em> (the number of appearances of a given value within a dataset) and <em>sum</em> (the combined total of all the numbers associated with each value in your row bucket). One important piece of advice though, you <strong>can not</strong> sum text, Excel won't let you (even if the text looks like a number), so if you're using numbers, be sure to tell Excel that you're looking at numbers (this issue will happen more often than you could possibly imagine!)</p><p>Other useful operators are <em>count distinct</em> (which you can only utilize if you checked <strong>add to data model</strong> when you built the table) and min or max (returning the lowest or highest value associated with a particular value in your rows, and you can only use this if you <strong><em>did not</em> click add to data model</strong> when you built the table). A good example of using Max or Min is when you have say names and salaries, where you can show the highest and lowest salary for a particular name. Keep in mind that you can have more than one value operator (like min and max) per heading, thus putting both the minimum and maximum value next to each other on the table. Which leads us to the generally least used bucket...</p><h3 id=\"columns\">Columns</h3><p>One thing I intentionally left out was what a pivot table actually <em>does</em> with your data. A gross over-simplification of the functionality is that it consolidates (picking out those distinct values), summarizes (shows totals, and grand totals), and most importantly, it flips your columns and rows (hence the reason it's called a <em>pivot</em> table.) Thus, the column bucket is generally just used as a place where your values go automatically when you populate the values bucket. The reason columns get kind of cumbersome is because it literally widens your pivot by how many ever values exist in your dataset, thus, anything more than say 20 values becomes almost impossible to read, let alone use in a meaningful way.</p><p>There are some rare cases in which using a heading in the column bucket may make sense though, for instance, if you have birth months as one of your headings, and names for rows, you can put the months in the column bucket and then get a count showing each how many people with a particular name land at a particular month in a grid or \"heat map\" (a fancy way to say a chart showing concentrations of something) fashion. Another use case (and one I use on the day to day) is finding the numbers of providers who utilize a particular procedure for which there is a known value (there are 12 that I look at). You have the procedure names as the columns, and you have the providers who administer the procedures as the rows. You then put measure in the value bucket. This gives me a nice, concise grid for which I can see which providers give how many of which of the 12 procedures...which on it's own is sorta useful, but when combined with a trick we already learned, some epic level spellcasting is afoot. Unfortunately, that'll have to wait until next time.</p><p>In summary, we learned:</p><ul><li>The purpose of the filter bucket within a pivot table</li><li>The purpose of the rows bucket within a pivot table and the fact that it shows distinct values</li><li>The purpose of the values bucket within a pivot table, and how you can have the column use different mathematical operators (such as count, sum, min, and max) to find different information within a dataset... and</li><li>The purpose (or lack thereof) of the columns bucket within a pivot table, and potential use case scenarios for this function.</li></ul><p>Next time, we start combining knowledge in order to get freaky with your data in ways that the lord of Excel themselves did not consider.</p><p>Pivot till you puke,</p><p>-Snacks</p>","url":"https://hackersandslackers.com/powering-up-your-excel-pivot-tables/","uuid":"d28897a1-583d-4a92-9e42-66f3176c58eb","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b05f1d389a1112d7e8bc96a"}},"pageContext":{"slug":"powering-up-your-excel-pivot-tables"}}