{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673716","title":"Lynx Roundup, October 8th","slug":"lynx-roundup-october-8th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/110@2x.jpg","excerpt":"SQL Resources!  Mathematical models of complex systems!  Data science & education outcomes!","custom_excerpt":"SQL Resources!  Mathematical models of complex systems!  Data science & education outcomes!","created_at_pretty":"27 September, 2018","published_at_pretty":"08 October, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-26T22:43:19.000-04:00","published_at":"2018-10-08T07:00:00.000-04:00","updated_at":"2018-10-17T00:13:53.000-04:00","meta_title":"Lynx Roundup, October 8th | Hackers and Slackers","meta_description":"SQL Resources!  Mathematical models of complex systems!  Data science & education outcomes!","og_description":"SQL Resources!  Mathematical models of complex systems!  Data science & education outcomes!","og_image":"https://hackersandslackers.com/content/images/lynx/110@2x.jpg","og_title":"Lynx Roundup, October 8th | Hackers and Slackers","twitter_description":"SQL Resources!  Mathematical models of complex systems!  Data science & education outcomes!","twitter_image":"https://hackersandslackers.com/content/images/lynx/110@2x.jpg","twitter_title":"Lynx Roundup, October 8th | Hackers and Slackers","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"http://code-love.com/2018/09/01/21-learn-sql/\n\nhttps://github.com/benfred/py-spy/\n\nhttps://towardsdatascience.com/data-science-takes-on-public-education-f432910ea9f0\n\nhttps://github.com/mitmproxy/pdoc\n\nhttps://phys.org/news/2018-09-mathematicians-self-organised-criticality.html\n\nhttps://rise.cs.berkeley.edu/blog/going-fast-and-cheap-how-we-made-anna-autoscale/\n\nhttps://github.com/bwasti/lazy","html":"<p></p><p><a href=\"http://code-love.com/2018/09/01/21-learn-sql/\">http://code-love.com/2018/09/01/21-learn-sql/</a></p><p><a href=\"https://github.com/benfred/py-spy/\">https://github.com/benfred/py-spy/</a></p><p><a href=\"https://towardsdatascience.com/data-science-takes-on-public-education-f432910ea9f0\">https://towardsdatascience.com/data-science-takes-on-public-education-f432910ea9f0</a></p><p><a href=\"https://github.com/mitmproxy/pdoc\">https://github.com/mitmproxy/pdoc</a></p><p><a href=\"https://phys.org/news/2018-09-mathematicians-self-organised-criticality.html\">https://phys.org/news/2018-09-mathematicians-self-organised-criticality.html</a></p><p><a href=\"https://rise.cs.berkeley.edu/blog/going-fast-and-cheap-how-we-made-anna-autoscale/\">https://rise.cs.berkeley.edu/blog/going-fast-and-cheap-how-we-made-anna-autoscale/</a></p><p><a href=\"https://github.com/bwasti/lazy\">https://github.com/bwasti/lazy</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-8th/","uuid":"c470ce02-c4ab-451d-b4c6-f7f0cb19e2b2","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bac43c75ee4c83af27dda94"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673715","title":"Lynx Roundup, October 7th","slug":"lynx-roundup-october-7th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/105.jpg","excerpt":"Google's new code-free tool for ML introspection!  Dependencies in Python applications!  Python & MongoDB!","custom_excerpt":"Google's new code-free tool for ML introspection!  Dependencies in Python applications!  Python & MongoDB!","created_at_pretty":"27 September, 2018","published_at_pretty":"07 October, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-09-26T22:40:33.000-04:00","published_at":"2018-10-07T07:00:00.000-04:00","updated_at":"2019-04-10T10:47:08.000-04:00","meta_title":"Lynx Roundup, October 7th | Hackers and Slackers","meta_description":"Google's new code-free tool for ML introspection!  Dependencies in Python applications!  Python & MongoDB!","og_description":"Google's new code-free tool for ML introspection!  Dependencies in Python applications!  Python & MongoDB!","og_image":"https://hackersandslackers.com/content/images/2019/04/105-2.jpg","og_title":"Lynx Roundup, October 7th","twitter_description":"Google's new code-free tool for ML introspection!  Dependencies in Python applications!  Python & MongoDB!","twitter_image":null,"twitter_title":"Lynx Roundup, October 7th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://blogs.scientificamerican.com/roots-of-unity/the-most-addictive-theorem-in-applied-mathematics/\n\nhttps://medium.com/@jimjh/managing-dependencies-in-python-applications-b9c93dda98c2\n\nhttps://www.mongodb.com/blog/post/pymongo-monday-setting-up-your-pymongo-environment\n\nhttps://anatomyof.ai/\n\nhttps://www.technologyreview.com/s/612004/a-mathematical-model-captures-the-political-impact-of-fake-news/\n\nhttps://www.theatlantic.com/technology/archive/2018/09/tech-labor-movement/567808/\n\nhttps://ai.googleblog.com/2018/09/the-what-if-tool-code-free-probing-of.html","html":"<p></p><p><a href=\"https://blogs.scientificamerican.com/roots-of-unity/the-most-addictive-theorem-in-applied-mathematics/\">https://blogs.scientificamerican.com/roots-of-unity/the-most-addictive-theorem-in-applied-mathematics/</a></p><p><a href=\"https://medium.com/@jimjh/managing-dependencies-in-python-applications-b9c93dda98c2\">https://medium.com/@jimjh/managing-dependencies-in-python-applications-b9c93dda98c2</a></p><p><a href=\"https://www.mongodb.com/blog/post/pymongo-monday-setting-up-your-pymongo-environment\">https://www.mongodb.com/blog/post/pymongo-monday-setting-up-your-pymongo-environment</a></p><p><a href=\"https://anatomyof.ai/\">https://anatomyof.ai/</a></p><p><a href=\"https://www.technologyreview.com/s/612004/a-mathematical-model-captures-the-political-impact-of-fake-news/\">https://www.technologyreview.com/s/612004/a-mathematical-model-captures-the-political-impact-of-fake-news/</a></p><p><a href=\"https://www.theatlantic.com/technology/archive/2018/09/tech-labor-movement/567808/\">https://www.theatlantic.com/technology/archive/2018/09/tech-labor-movement/567808/</a></p><p><a href=\"https://ai.googleblog.com/2018/09/the-what-if-tool-code-free-probing-of.html\">https://ai.googleblog.com/2018/09/the-what-if-tool-code-free-probing-of.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-7th/","uuid":"d75a29ca-da54-4587-814b-633ad2e8b30e","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bac43215ee4c83af27dda91"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673714","title":"Lynx Roundup, October 6th","slug":"lynx-roundup-october-6th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/111@2x.jpg","excerpt":"Python books!  Logging in Python!  Non-stationary time series in Python!","custom_excerpt":"Python books!  Logging in Python!  Non-stationary time series in Python!","created_at_pretty":"27 September, 2018","published_at_pretty":"06 October, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-26T22:39:05.000-04:00","published_at":"2018-10-06T07:00:00.000-04:00","updated_at":"2018-10-17T01:29:39.000-04:00","meta_title":"Python books!  Logging in Python!  Non-stationary time series in Python! | Hackers And Slackers","meta_description":"Python books!  Logging in Python!  Non-stationary time series in Python!","og_description":"Python books!  Logging in Python!  Non-stationary time series in Python!","og_image":"https://hackersandslackers.com/content/images/lynx/111@2x.jpg","og_title":"Lynx Roundup, October 6th","twitter_description":"Python books!  Logging in Python!  Non-stationary time series in Python!","twitter_image":"https://hackersandslackers.com/content/images/lynx/111@2x.jpg","twitter_title":"Lynx Roundup, October 6th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://opensource.com/article/18/9/python-programming-book-list\n\nhttps://www.oreilly.com/ideas/learn-about-data-governance-with-these-books-videos-and-tutorials\n\nhttps://blog.fishtownanalytics.com/scaling-knowledge-160f9f5a9b6c\n\nhttps://www.ineteconomics.org/perspectives/blog/why-we-should-worry-about-monopsony\n\nhttps://realpython.com/python-logging/\n\nhttps://futurism.com/neural-networks-thought-process/\n\nhttps://www.analyticsvidhya.com/blog/2018/09/non-stationary-time-series-python/","html":"<p></p><p><a href=\"https://opensource.com/article/18/9/python-programming-book-list\">https://opensource.com/article/18/9/python-programming-book-list</a></p><p><a href=\"https://www.oreilly.com/ideas/learn-about-data-governance-with-these-books-videos-and-tutorials\">https://www.oreilly.com/ideas/learn-about-data-governance-with-these-books-videos-and-tutorials</a></p><p><a href=\"https://blog.fishtownanalytics.com/scaling-knowledge-160f9f5a9b6c\">https://blog.fishtownanalytics.com/scaling-knowledge-160f9f5a9b6c</a></p><p><a href=\"https://www.ineteconomics.org/perspectives/blog/why-we-should-worry-about-monopsony\">https://www.ineteconomics.org/perspectives/blog/why-we-should-worry-about-monopsony</a></p><p><a href=\"https://realpython.com/python-logging/\">https://realpython.com/python-logging/</a></p><p><a href=\"https://futurism.com/neural-networks-thought-process/\">https://futurism.com/neural-networks-thought-process/</a></p><p><a href=\"https://www.analyticsvidhya.com/blog/2018/09/non-stationary-time-series-python/\">https://www.analyticsvidhya.com/blog/2018/09/non-stationary-time-series-python/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-6th/","uuid":"1880f3a7-c0f3-4648-a397-74c5d99a6ad7","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bac42c95ee4c83af27dda8e"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867371a","title":"Compile Frontend JavaScript with Babel and Gulp","slug":"babel-ecma-script","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/10/babel-1@2x.jpg","excerpt":"Using ECMAScript functions on the frontend the quick and dirty way.","custom_excerpt":"Using ECMAScript functions on the frontend the quick and dirty way.","created_at_pretty":"04 October, 2018","published_at_pretty":"06 October, 2018","updated_at_pretty":"02 February, 2019","created_at":"2018-10-03T23:05:08.000-04:00","published_at":"2018-10-06T06:20:00.000-04:00","updated_at":"2019-02-02T04:55:50.000-05:00","meta_title":"Frontend JavaScript with Babel | Hackers and Slackers","meta_description":"Babel looks at new ECMA syntax (like require,  const or promise) and compiles code which is logic-equivalent to these features using vanilla Javascript.","og_description":"Babel looks at new ECMA syntax (like require,  const or promise) and compiles code which is logic-equivalent to these features using vanilla Javascript.","og_image":"https://hackersandslackers.com/content/images/2018/10/babel-1@2x.jpg","og_title":"Compile Frontend JavaScript with Babel and Gulp","twitter_description":"Babel looks at new ECMA syntax (like require,  const or promise) and compiles code which is logic-equivalent to these features using vanilla Javascript.","twitter_image":"https://hackersandslackers.com/content/images/2018/10/babel-1@2x.jpg","twitter_title":"Compile Frontend JavaScript with Babel and Gulp","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"JavaScript","slug":"javascript","description":"JavaScript covering both Frontend and NodeJS. Build bundles with Webpack or Parcel, create task runners, or endure our criticism of the JavaScript ecosystem.","feature_image":null,"meta_description":"JavaScript topics, both Frontend and NodeJS. Build bundles with Webpack or Parcel, create task runners, or endure our criticism of the JavaScript ecosystem.","meta_title":"Javascript Tutorials | Hackers and Slackers","visibility":"public"},"tags":[{"name":"JavaScript","slug":"javascript","description":"JavaScript covering both Frontend and NodeJS. Build bundles with Webpack or Parcel, create task runners, or endure our criticism of the JavaScript ecosystem.","feature_image":null,"meta_description":"JavaScript topics, both Frontend and NodeJS. Build bundles with Webpack or Parcel, create task runners, or endure our criticism of the JavaScript ecosystem.","meta_title":"Javascript Tutorials | Hackers and Slackers","visibility":"public"},{"name":"NodeJS","slug":"nodejs","description":"All things related to backend JavaScript. Learn frameworks or take our word for selecting the right NPM packages.","feature_image":null,"meta_description":"All things related to backend JavaScript. Learn frameworks or take our word for selecting the right NPM packages.","meta_title":"NodeJS | Hackers and Slackers","visibility":"public"},{"name":"Software Development","slug":"software-development","description":"General software development principals and tools. Receive insights applicable to building any application.","feature_image":null,"meta_description":"General software development principals and tools. Receive insights applicable to building any application.","meta_title":"Software Development | Hackers and Slackers","visibility":"public"}],"plaintext":"NOTE: This post has not aged particularly well. This is made evident by the\npresence of the word \"Gulp\" present throughout the post.\n\n\n--------------------------------------------------------------------------------\n\nAs you may have already deduced from the occasional glaring holes in my\nprogramming knowledge, I haven’t spent as much of my life programming than,\nwell, anybody who haphazardly threw away an 8-year product management career.\nApparently, a lot can happen in 8 years... especially when it comes to\nJavaScript.\nPutting aside that whole server-side  NodeJS thing or whatever it’s called,\nthere’s years worth of mindfucks for those of us who fairly recently returned to\ndev. In our absence, the world has been Grunting, Gulping, Yarning and even\nNPMing. Let’s assume we’ve gotten past all of that... phew. Oh wait, I forgot to\nmention the monstrosity of “hey by way there’s this mess of a hardly-explained\n(protocol? organization? Fancy Github Repo?) called Babel that we all depend on\nto do meaningful shit in the browser these days.”\n\nIf you’re here because you’re trying to figure what the hell all these ‘const’\nand ‘import’ keywords are doing in modern-day browser JavaScript, consider this\nhalf focus-group and half getting-started tutorial. For the rest of you\nexperienced JS devs out there, perhaps you should stay. No, by all means, I’d\nlike you to sit here and think about the kind of ecosystem you’ve decided to\npatch together. Do it; otherwise, I might just give Kik a call to see what other\ntiny NPM modules they’d like to arbitrarily demand the removal of... remember\nthat? Exactly. Now think about what you’ve done.\n\nECMAScript and the Backwards-Compatible Web\nAny Actionscript veterans in the house? No? Just me? Great. Anyway, There’s\nsomething that ActionScript, JavaScript, and a bunch of Whatever-scripts have in\ncommon: they’re all implementations of ECMAScript: the ancestral equivalent of\ncomparing Latin to Spanish or French, but just one added detail: ECMAScript is\nstill a living language, and constantly improving. If some nation of cool cats\nstill spoke Latin as an active language and were constantly coming up with sick\nnew slang terms, those speaking French or Spanish would be powerless to come up\nwith phrases nearly as cool as “lit” or \"fam\"  (or whatever those Latin\nequivalents would be).\n\nThe problem is web browsers are inherently backward-compatible monstrosities.\nMost revenue-generating companies look at their >5% user base using Internet\nExplorer three and a half, and think “oh my god, that’s five percent of our\npotential revenue” (it isn’t, but whatever). That’s where we stand.\n\nNew features? For the INTERNET?\nI remember one particular weekend I rented a hotel room for the sole purpose of\nwrapping up an app based on MongoDB Stitch at the time. I was pretty confident I\nhad it all figured out, but found, something about Mongo’s quick start guides\nfelt off (I mean, more off than the rest of their nearly unreadable docs). Why\ndid Mongo insist on inline JavaScript? Haven’t we evolved past the days where\nPHP, HTML, CSS, and JS all lived on the same page?\n\nAs everybody-who-wasn’t-me at time already knows, JavaScript has been reaping\nthe benefits of new evolutions in ECMAScript over the years, but there’s a\ncatch: only the most modern browsers know what the hell to do with these new\nfeatures (duh), and they only do so with the dreaded  blocks thrown on HTML\npages. Attempting to use modern ECMA features in a linked JS file which hasn’t\nbeen pre-compiled is like dividing by zero. Seriously, you might die.\n\nBabel to the Rescue\nMore research only lead to more questions. Who is this Browserify wizard\n[http://browserify.org/]  and why is he dead? What is Webpack doing to fund all\ntheir highly produced branding, and why would anybody purchase a Webpack T-shirt\n[https://webpack.threadless.com/]? Finally, the biggest question of all: who the\nhell is this Babel guy who gives off as an electric explosion in your face on\nhard drugs?\n\nI can't even the difference between a compiler and a Marvel franchise anymore.I\nthink it was at this point in my journey of catching up on the last decade where\nI went truly mad and began pacing around my room, verbally assaulting inanimate\nobjects, and eventually even found myself washed up in a Wendys down the street,\nshivering and crying to myself. \n\nNow that I've been released from the psyche ward and are free to wander the\nstreets again, I've managed to piece together a bare-minimum understanding of\nwhat the hell is going on.\n\nWhat the Hell is Going On\nBecause Javascript as a language is destined to be backwards compatible to a\nyear when OJ Simpson was on trial and Windows 95 was considered cutting-edge\ntechnology, Babel  aims to \"improve\" browser Javascript. Because we can't\nactually improve or change the underlying technology, Babel looks at new-fangled\nECMA syntax (containing words like require,const  or promise) and compiles logic\nequivalent to these features with vanilla Javascript. If that sounds similar to\nhow Gulp  takes CSS preprocessors (like LESS  or SASS) and turns those files\ninto interpretable browser code, well, that's exactly what happens. \n\nGulp  is not be the only way to utilize new ECMAScript features. Babel syntax\ncan be compiled a number of ways, such as Babel's CLI\n[https://babeljs.io/docs/en/babel-cli], or from Server-side JS, or Webpack  if\nyou're Mister-Fancy-Pants. In fact, the trend across the board is that compiling\nyour site with modules via Webpack is winning dramatically. For all we know,\nthis could be the last Babel Gulp tutorial ever written.\n\nRight now we're focusing on the ability to use ECMAScript features on the\nfrontend; a common use-case for things like... well... theming the presentation\nlayer for a blog. If we can pull it off with Gulp, you probably won't struggle\nmuch with future methods.\n\nBabel NPM Packages\nAlright, so Babel isn't just a single NPM package. It's a lot. Let's see what's\nthere in a basic package.json:\n\n{\n  \"name\": \"example\",\n  \"scripts\": {\n    \"build\": \"babel src -d lib\"\n  },\n  \"presets\": [\n    \"env\"\n  ],\n  \"engines\": {\n    \"node\": \"8.12.0\"\n  },\n  \"dependencies\": {\n    \"@babel/polyfill\": \"^7.0.0\",\n    \"@babel/runtime\": \"^7.1.2\",\n    \"@babel/runtime-corejs2\": \"^7.1.2\",\n    \"babel-runtime\": \"^6.26.0\",\n    \"gulp-resolve-dependencies\": \"^2.2.0\",\n    \"gulp-sourcemaps\": \"^2.6.4\",\n    \"gulp-uglify-es\": \"^1.0.4\",\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.1.2\",\n    \"@babel/core\": \"^7.1.2\",\n    \"@babel/plugin-syntax-dynamic-import\": \"^7.0.0\",\n    \"@babel/plugin-transform-runtime\": \"^7.1.0\",\n    \"@babel/preset-env\": \"^7.1.0\",\n  }\n}\n\nLet's not go through all these in detail- in fact, let's take a look at our \ngulpfile.js:\n\n'use strict';\n\nvar gulp = require('gulp'),\n  concat = require('gulp-concat'),\n  autoprefixer = require('gulp-autoprefixer'),\n  sourcemaps = require('gulp-sourcemaps'),\n  babel = require('gulp-babel'),\n  resolveDependencies = require('gulp-resolve-dependencies'),\n\n\nvar paths = {\n  scripts: {\n    src: 'src/js/*.js',\n    dest: 'assets/js'\n  }\n};\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src)\n    .pipe(babel({\n          presets: ['@babel/env'],\n          plugins: ['@babel/transform-runtime', '@babel/plugin-syntax-dynamic-import']\n    }))\n    .on('error', console.error.bind(console))\n    .pipe(resolveDependencies({\n            pattern: /\\* @requires [\\s-]*(.*\\.js)/g\n        }))\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nNote that I've gone ahead and removed anything from the file that has nothing to\ndo with Babel - everything seen here is strictly relevant to building a\n'scripts' task. The gist is this:\n\nbabel  accepts two arrays:\n\n * Presets  refers to the version of ECMAScript we're targeting, and what we\n   have implies the latest.\n * Plugins  allow us to pass any plugins Babel supports; in this case, we're\n   rendering stuff at runtime. Let's not get into it too far.\n\nThe rest of the function is simple: we catch errors if any arise, we resolve\nrequired dependencies, and then we finally bunch everything into a single file\nand shove it in our destination folder.\n\nJust to be Clear\nWhen it comes to the best  way of achieving ECMAScript 2015 or 2016 etc in the\nbrowser,  I'm no expert. As previously mentioned, the understanding I've passed\non to you is a sort of bare minimum to start doing great things. \n\nAs far as what others are doing, I'd be willing to bet that the vast majority of\ndevs utilizing newer ECMAScript functions are running frameworks like React,\nwhile the rest have reached a consensus that Webpack is king and Gulp lame.\nThese things may be true.\n\nNo matter, this new found power of ours opens a lot of doors. Just wait until\nyou see what we do with MongoDB Stitch.","html":"<p><strong>NOTE</strong>: This post has not aged particularly well. This is made evident by the presence of the word \"Gulp\" present throughout the post.</p><hr><p>As you may have already deduced from the occasional glaring holes in my programming knowledge, I haven’t spent as much of my life programming than, well, anybody who haphazardly threw away an 8-year product management career. Apparently, a lot can happen in 8 years... especially when it comes to JavaScript.<br>Putting aside that whole server-side  NodeJS thing or whatever it’s called, there’s years worth of mindfucks for those of us who fairly recently returned to dev. In our absence, the world has been Grunting, Gulping, Yarning and even NPMing. Let’s assume we’ve gotten past all of that... phew. Oh wait, I forgot to mention the monstrosity of “hey by way there’s this mess of a hardly-explained (protocol? organization? Fancy Github Repo?) called Babel that we all depend on to do meaningful shit in the browser these days.”</p><p>If you’re here because you’re trying to figure what the hell all these ‘const’ and ‘import’ keywords are doing in modern-day browser JavaScript, consider this half focus-group and half getting-started tutorial. For the rest of you experienced JS devs out there, perhaps you should stay. No, by all means, I’d like you to sit here and think about the kind of ecosystem you’ve decided to patch together. Do it; otherwise, I might just give Kik a call to see what other tiny NPM modules they’d like to arbitrarily demand the removal of... remember that? Exactly. Now think about what you’ve done.</p><h2 id=\"ecmascript-and-the-backwards-compatible-web\">ECMAScript and the Backwards-Compatible Web</h2><p>Any Actionscript veterans in the house? No? Just me? Great. Anyway, There’s something that ActionScript, JavaScript, and a bunch of Whatever-scripts have in common: they’re all implementations of ECMAScript: the ancestral equivalent of comparing Latin to Spanish or French, but just one added detail: ECMAScript is still a living language, and constantly improving. If some nation of cool cats still spoke Latin as an active language and were constantly coming up with sick new slang terms, those speaking French or Spanish would be powerless to come up with phrases nearly as cool as “lit” or \"fam\"  (or whatever those Latin equivalents would be).</p><p>The problem is web browsers are inherently backward-compatible monstrosities. Most revenue-generating companies look at their &gt;5% user base using Internet Explorer three and a half, and think “oh my god, that’s five percent of our potential revenue” (it isn’t, but whatever). That’s where we stand.</p><h2 id=\"new-features-for-the-internet\">New features? For the INTERNET?</h2><p>I remember one particular weekend I rented a hotel room for the sole purpose of wrapping up an app based on MongoDB Stitch at the time. I was pretty confident I had it all figured out, but found, something about Mongo’s quick start guides felt off (I mean, more off than the rest of their nearly unreadable docs). Why did Mongo insist on inline JavaScript? Haven’t we evolved past the days where PHP, HTML, CSS, and JS all lived on the same page?</p><p>As everybody-who-wasn’t-me at time already knows, JavaScript has been reaping the benefits of new evolutions in ECMAScript over the years, but there’s a catch: only the most modern browsers know what the hell to do with these new features (duh), and they only do so with the dreaded  blocks thrown on HTML pages. Attempting to use modern ECMA features in a linked JS file which hasn’t been pre-compiled is like dividing by zero. Seriously, you might die.</p><h2 id=\"babel-to-the-rescue\">Babel to the Rescue</h2><p>More research only lead to more questions. Who is this <a href=\"http://browserify.org/\">Browserify wizard</a> and why is he dead? What is Webpack doing to fund all their highly produced branding, and why would anybody purchase a <a href=\"https://webpack.threadless.com/\">Webpack T-shirt</a>? Finally, the biggest question of all: who the hell is this Babel guy who gives off as an electric explosion in your face on hard drugs?</p><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/babel2-1.jpg\" class=\"kg-image\"><figcaption><em>I can't even the difference between a compiler and a Marvel franchise anymore.&nbsp;</em></figcaption></figure><p>I think it was at this point in my journey of catching up on the last decade where I went truly mad and began pacing around my room, verbally assaulting inanimate objects, and eventually even found myself washed up in a Wendys down the street, shivering and crying to myself. </p><p>Now that I've been released from the psyche ward and are free to wander the streets again, I've managed to piece together a bare-minimum understanding of what the hell is going on.</p><h3 id=\"what-the-hell-is-going-on\">What the Hell is Going On</h3><p>Because Javascript as a language is destined to be backwards compatible to a year when OJ Simpson was on trial and Windows 95 was considered cutting-edge technology, <strong>Babel</strong> aims to \"improve\" browser Javascript. Because we can't actually improve or change the underlying technology, Babel looks at new-fangled ECMA syntax (containing words like <code>require</code>,  <code>const</code> or <code>promise</code>) and compiles logic equivalent to these features with vanilla Javascript. If that sounds similar to how <strong>Gulp</strong> takes CSS preprocessors (like <em>LESS</em> or <em>SASS</em>) and turns those files into interpretable browser code, well, that's exactly what happens. </p><p><strong>Gulp</strong> is not be the only way to utilize new ECMAScript features. Babel syntax can be compiled a number of ways, such as <a href=\"https://babeljs.io/docs/en/babel-cli\">Babel's CLI</a>, or from Server-side JS, or <strong>Webpack</strong> if you're Mister-Fancy-Pants. In fact, the trend across the board is that compiling your site with modules via Webpack is winning dramatically. For all we know, this could be the last Babel Gulp tutorial ever written.</p><p>Right now we're focusing on the ability to use ECMAScript features on the frontend; a common use-case for things like... well... theming the presentation layer for a blog. If we can pull it off with Gulp, you probably won't struggle much with future methods.</p><h2 id=\"babel-npm-packages\">Babel NPM Packages</h2><p>Alright, so Babel isn't just a single NPM package. It's a lot. Let's see what's there in a basic <code>package.json</code>:</p><pre><code>{\n  \"name\": \"example\",\n  \"scripts\": {\n    \"build\": \"babel src -d lib\"\n  },\n  \"presets\": [\n    \"env\"\n  ],\n  \"engines\": {\n    \"node\": \"8.12.0\"\n  },\n  \"dependencies\": {\n    \"@babel/polyfill\": \"^7.0.0\",\n    \"@babel/runtime\": \"^7.1.2\",\n    \"@babel/runtime-corejs2\": \"^7.1.2\",\n    \"babel-runtime\": \"^6.26.0\",\n    \"gulp-resolve-dependencies\": \"^2.2.0\",\n    \"gulp-sourcemaps\": \"^2.6.4\",\n    \"gulp-uglify-es\": \"^1.0.4\",\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.1.2\",\n    \"@babel/core\": \"^7.1.2\",\n    \"@babel/plugin-syntax-dynamic-import\": \"^7.0.0\",\n    \"@babel/plugin-transform-runtime\": \"^7.1.0\",\n    \"@babel/preset-env\": \"^7.1.0\",\n  }\n}</code></pre><p>Let's not go through all these in detail- in fact, let's take a look at our <strong>gulpfile.js</strong>:</p><pre><code>'use strict';\n\nvar gulp = require('gulp'),\n  concat = require('gulp-concat'),\n  autoprefixer = require('gulp-autoprefixer'),\n  sourcemaps = require('gulp-sourcemaps'),\n  babel = require('gulp-babel'),\n  resolveDependencies = require('gulp-resolve-dependencies'),\n\n\nvar paths = {\n  scripts: {\n    src: 'src/js/*.js',\n    dest: 'assets/js'\n  }\n};\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src)\n    .pipe(babel({\n          presets: ['@babel/env'],\n          plugins: ['@babel/transform-runtime', '@babel/plugin-syntax-dynamic-import']\n    }))\n    .on('error', console.error.bind(console))\n    .pipe(resolveDependencies({\n            pattern: /\\* @requires [\\s-]*(.*\\.js)/g\n        }))\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}</code></pre><p>Note that I've gone ahead and removed anything from the file that has nothing to do with Babel - everything seen here is strictly relevant to building a 'scripts' task. The gist is this:</p><p><strong>babel</strong> accepts two arrays:</p><ul><li><em>Presets</em> refers to the version of ECMAScript we're targeting, and what we have implies the latest.</li><li><em>Plugins</em> allow us to pass any plugins Babel supports; in this case, we're rendering stuff at runtime. Let's not get into it too far.</li></ul><p>The rest of the function is simple: we catch errors if any arise, we resolve required dependencies, and then we finally bunch everything into a single file and shove it in our destination folder.</p><h2 id=\"just-to-be-clear\">Just to be Clear</h2><p>When it comes to the <em>best</em> way of achieving ECMAScript 2015 or 2016 etc in the browser,  I'm no expert. As previously mentioned, the understanding I've passed on to you is a sort of bare minimum to start doing great things. </p><p>As far as what others are doing, I'd be willing to bet that the vast majority of devs utilizing newer ECMAScript functions are running frameworks like React, while the rest have reached a consensus that Webpack is king and Gulp lame. These things may be true.</p><p>No matter, this new found power of ours opens a lot of doors. Just wait until you see what we do with <strong>MongoDB Stitch</strong>.</p><p></p><p></p>","url":"https://hackersandslackers.com/babel-ecma-script/","uuid":"04fe6342-9462-4d3c-9e6d-bc000e17824a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bb583642361b479aa119366"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673713","title":"Lynx Roundup, October 5th","slug":"lynx-roundup-october-5th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/106.jpg","excerpt":"Using Bayes & Information Theory to formalize Machine Learning!  Automatically prettifying Python code!  Good data science writing!","custom_excerpt":"Using Bayes & Information Theory to formalize Machine Learning!  Automatically prettifying Python code!  Good data science writing!","created_at_pretty":"27 September, 2018","published_at_pretty":"05 October, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-09-26T22:36:26.000-04:00","published_at":"2018-10-05T07:00:00.000-04:00","updated_at":"2019-04-10T10:48:10.000-04:00","meta_title":"Lynx Roundup, October 5th | Hackers and Slackers","meta_description":"Using Bayes & Information Theory to formalize Machine Learning!  Automatically prettifying Python code!  Good data science writing!","og_description":"Using Bayes & Information Theory to formalize Machine Learning!  Automatically prettifying Python code!  Good data science writing!","og_image":"https://hackersandslackers.com/content/images/2019/04/106-1.jpg","og_title":"Lynx Roundup, October 5th | Hackers and Slackers","twitter_description":"Using Bayes & Information Theory to formalize Machine Learning!  Automatically prettifying Python code!  Good data science writing!","twitter_image":"https://hackersandslackers.com/content/images/lynx/106@2x.jpg","twitter_title":"Lynx Roundup, October 5th | Hackers and Slackers","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://towardsdatascience.com/when-bayes-ockham-and-shannon-come-together-to-define-machine-learning-96422729a1ad\n\nhttps://github.com/ambv/black/blob/master/README.md\n\nhttps://theintercept.com/2018/09/06/nypd-surveillance-camera-skin-tone-search/\n\nhttp://www.ke.tu-darmstadt.de/lehre/archiv/ws0809/mldm/dt.pdf\n\nhttps://towardsdatascience.com/practical-advice-for-data-science-writing-cc842795ed52\n\nhttps://yihui.name/en/2018/09/notebook-war/\n\nhttp://deon.drivendata.org/","html":"<p></p><p><a href=\"https://towardsdatascience.com/when-bayes-ockham-and-shannon-come-together-to-define-machine-learning-96422729a1ad\">https://towardsdatascience.com/when-bayes-ockham-and-shannon-come-together-to-define-machine-learning-96422729a1ad</a></p><p><a href=\"https://github.com/ambv/black/blob/master/README.md\">https://github.com/ambv/black/blob/master/README.md</a></p><p><a href=\"https://theintercept.com/2018/09/06/nypd-surveillance-camera-skin-tone-search/\">https://theintercept.com/2018/09/06/nypd-surveillance-camera-skin-tone-search/</a></p><p><a href=\"http://www.ke.tu-darmstadt.de/lehre/archiv/ws0809/mldm/dt.pdf\">http://www.ke.tu-darmstadt.de/lehre/archiv/ws0809/mldm/dt.pdf</a></p><p><a href=\"https://towardsdatascience.com/practical-advice-for-data-science-writing-cc842795ed52\">https://towardsdatascience.com/practical-advice-for-data-science-writing-cc842795ed52</a></p><p><a href=\"https://yihui.name/en/2018/09/notebook-war/\">https://yihui.name/en/2018/09/notebook-war/</a></p><p><a href=\"http://deon.drivendata.org/\">http://deon.drivendata.org/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-5th/","uuid":"7db94340-a977-4d05-aa56-6ffcf4b048ac","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bac422a5ee4c83af27dda8b"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673712","title":"Lynx Roundup, October 4th","slug":"lynx-roundup-october-4th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/104-1.jpg","excerpt":"Cybernetic and automation!  Cloud-native programming language!  Dropping down to C from Python!","custom_excerpt":"Cybernetic and automation!  Cloud-native programming language!  Dropping down to C from Python!","created_at_pretty":"27 September, 2018","published_at_pretty":"04 October, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-09-26T22:34:46.000-04:00","published_at":"2018-10-04T07:00:00.000-04:00","updated_at":"2019-04-10T10:49:04.000-04:00","meta_title":"Lynx Roundup, October 4th | Hackers and Slackers","meta_description":"Cybernetic and automation!  Cloud-native programming language!  Dropping down to C from Python!","og_description":"Lynx Roundup, October 4th","og_image":"https://hackersandslackers.com/content/images/2019/04/104-1-2.jpg","og_title":"Lynx Roundup, October 4th | Hackers and Slackers","twitter_description":"Cybernetic and automation!  Cloud-native programming language!  Dropping down to C from Python!","twitter_image":null,"twitter_title":"Lynx Roundup, October 4th | Hackers and Slackers","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://libcom.org/history/father-cybernetics-norbert-wieners-letter-uaw-president-walter-reuther\n\nhttps://www.dataforprogress.org/blog/2018/9/2/data-for-politics-18-unions-are-good-as-hell\n\nhttps://ballerina.io/\n\nhttps://recast.ai/blog/how-to-speed-up-python-with-c/\n\nhttps://phys.org/news/2018-09-hidden-prime-crystal-like-materials.html\n\nhttps://www.technologynetworks.com/neuroscience/news/epigenetic-control-of-memory-strengthening-309271\n\nhttps://github.com/facebookincubator/python-nubia","html":"<p></p><p><a href=\"https://libcom.org/history/father-cybernetics-norbert-wieners-letter-uaw-president-walter-reuther\">https://libcom.org/history/father-cybernetics-norbert-wieners-letter-uaw-president-walter-reuther</a></p><p><a href=\"https://www.dataforprogress.org/blog/2018/9/2/data-for-politics-18-unions-are-good-as-hell\">https://www.dataforprogress.org/blog/2018/9/2/data-for-politics-18-unions-are-good-as-hell</a></p><p><a href=\"https://ballerina.io/\">https://ballerina.io/</a></p><p><a href=\"https://recast.ai/blog/how-to-speed-up-python-with-c/\">https://recast.ai/blog/how-to-speed-up-python-with-c/</a></p><p><a href=\"https://phys.org/news/2018-09-hidden-prime-crystal-like-materials.html\">https://phys.org/news/2018-09-hidden-prime-crystal-like-materials.html</a></p><p><a href=\"https://www.technologynetworks.com/neuroscience/news/epigenetic-control-of-memory-strengthening-309271\">https://www.technologynetworks.com/neuroscience/news/epigenetic-control-of-memory-strengthening-309271</a></p><p><a href=\"https://github.com/facebookincubator/python-nubia\">https://github.com/facebookincubator/python-nubia</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-4th/","uuid":"e613b5ea-0455-4bdf-9aa0-b7182fe662f8","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bac41c65ee4c83af27dda88"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673711","title":"Lynx Roundup, October 3rd","slug":"lynx-roundup-october-3rd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/103-copy@2x.jpg","excerpt":"Fire ants can teach us about traffic!  Serverless design patterns!  Building a tower to space!","custom_excerpt":"Fire ants can teach us about traffic!  Serverless design patterns!  Building a tower to space!","created_at_pretty":"27 September, 2018","published_at_pretty":"03 October, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-09-26T22:32:31.000-04:00","published_at":"2018-10-03T07:00:00.000-04:00","updated_at":"2019-02-14T05:05:08.000-05:00","meta_title":"Lynx Roundup, October 3rd | Hackers and Slackers","meta_description":"Fire ants can teach us about traffic!  Serverless design patterns!  Building a tower to space!","og_description":"Fire ants can teach us about traffic!  Serverless design patterns!  Building a tower to space!","og_image":"https://hackersandslackers.com/content/images/2019/02/103-copy@2x.jpg","og_title":"Lynx Roundup, October 3rd | Hackers and Slackers","twitter_description":"Fire ants can teach us about traffic!  Serverless design patterns!  Building a tower to space!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/103-copy@2x.jpg","twitter_title":"Lynx Roundup, October 3rd | Hackers and Slackers","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://functional.works-hub.com/learn/html-search-and-replace-in-clojure-d7afd\n\nhttps://codewithoutrules.com/2018/09/04/python-multiprocessing/\n\nhttps://aeon.co/ideas/what-would-it-take-to-build-a-tower-as-high-as-outer-space\n\nhttps://arstechnica.com/science/2018/08/we-can-learn-the-secrets-of-smooth-traffic-flow-by-watching-fire-ants/\n\nhttps://news.ycombinator.com/item?id=17835760\n\nhttps://www.jeremydaly.com/serverless-microservice-patterns-for-aws/\n\nhttps://medium.freecodecamp.org/building-a-full-graph-stack-f95590ade5af","html":"<p></p><p><a href=\"https://functional.works-hub.com/learn/html-search-and-replace-in-clojure-d7afd\">https://functional.works-hub.com/learn/html-search-and-replace-in-clojure-d7afd</a></p><p><a href=\"https://codewithoutrules.com/2018/09/04/python-multiprocessing/\">https://codewithoutrules.com/2018/09/04/python-multiprocessing/</a></p><p><a href=\"https://aeon.co/ideas/what-would-it-take-to-build-a-tower-as-high-as-outer-space\">https://aeon.co/ideas/what-would-it-take-to-build-a-tower-as-high-as-outer-space</a></p><p><a href=\"https://arstechnica.com/science/2018/08/we-can-learn-the-secrets-of-smooth-traffic-flow-by-watching-fire-ants/\">https://arstechnica.com/science/2018/08/we-can-learn-the-secrets-of-smooth-traffic-flow-by-watching-fire-ants/</a></p><p><a href=\"https://news.ycombinator.com/item?id=17835760\">https://news.ycombinator.com/item?id=17835760</a></p><p><a href=\"https://www.jeremydaly.com/serverless-microservice-patterns-for-aws/\">https://www.jeremydaly.com/serverless-microservice-patterns-for-aws/</a></p><p><a href=\"https://medium.freecodecamp.org/building-a-full-graph-stack-f95590ade5af\">https://medium.freecodecamp.org/building-a-full-graph-stack-f95590ade5af</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-3rd/","uuid":"8f6a832b-a388-4a3e-a659-a2f624f22016","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bac413f5ee4c83af27dda85"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673719","title":"Creating an AMI with HashiCorp Packer","slug":"hashicorp-packer","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/10/packer4@2x.jpg","excerpt":"HashiCorp's version control for infrastructure .","custom_excerpt":"HashiCorp's version control for infrastructure .","created_at_pretty":"02 October, 2018","published_at_pretty":"03 October, 2018","updated_at_pretty":"30 December, 2018","created_at":"2018-10-02T16:05:02.000-04:00","published_at":"2018-10-03T07:00:00.000-04:00","updated_at":"2018-12-30T07:00:11.000-05:00","meta_title":"Creating an AMI with HashiCorp Packer | Hackers and Slackers","meta_description":"Infrastructure as code has become part of the buzzword bingo surrounding operational teams and their desired optimal workflows.","og_description":"Infrastructure as code has become part of the buzzword bingo surrounding operational teams and their desired optimal workflows.","og_image":"https://hackersandslackers.com/content/images/2018/10/packer4@2x.jpg","og_title":"Creating an AMI with HashiCorp Packer","twitter_description":"Infrastructure as code has become part of the buzzword bingo surrounding operational teams and their desired optimal workflows.","twitter_image":"https://hackersandslackers.com/content/images/2018/10/packer4@2x.jpg","twitter_title":"Creating an AMI with HashiCorp Packer","authors":[{"name":"David Aquino","slug":"david","bio":"Spent years in the military to become a killing machine using only 2 CDJs. Automated all of life's inconveniences, including investments in the financial markets.","profile_image":"https://hackersandslackers.com/content/images/2019/03/keno2.jpg","twitter":"@_k3n0","facebook":null,"website":null}],"primary_author":{"name":"David Aquino","slug":"david","bio":"Spent years in the military to become a killing machine using only 2 CDJs. Automated all of life's inconveniences, including investments in the financial markets.","profile_image":"https://hackersandslackers.com/content/images/2019/03/keno2.jpg","twitter":"@_k3n0","facebook":null,"website":null},"primary_tag":{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"},"tags":[{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"},{"name":"AWS","slug":"aws","description":"Monolithic cloud architecture via microservices. Become familiar with AWS products, account administration, security practices, and tips to make it all easier.","feature_image":null,"meta_description":"Become familiar with AWS services, account administration, security practices, and tips to make it all easier.","meta_title":"Learn AWS | Hackers and Slackers","visibility":"public"},{"name":"Hashicorp","slug":"hashicorp","description":"Automate serverless architecture for enterprise AWS Cloud instances with Terraform, or leverage products such as Vault and Packer to improve your ecosystem.","feature_image":null,"meta_description":"Automate serverless architecture for enterprise AWS Cloud instances with Terraform, or leverage products such as Vault and Packer to improve your ecosystem.","meta_title":"Hashicorp Suite | Hackers and Slackers","visibility":"public"}],"plaintext":"Why use Packer [https://www.packer.io/]? Infrastructure as code has become part\nof the buzzword bingo surrounding operational teams and their desired optimal\nworkflows.\n\nOne could theoretically just start with a base AMI and manually update it and\nthen re-save it as a new AMI, but this process is not repeatable.  We can check\nin our desired infrastructure states as code to version control.  This is good\npractice for change control management.  We can readily see what worked before\nand what was changed in the latest update.  If something catastrophic happens or\nwe encounter unforeseen issues, we can always rollback to a previous state.\n\nI'm the first new guy on our ops team in a few years.  We work with a base image\nto create our EC2 instances and that image does not have my ssh keys.  In our\ncurrent workflow, when I spin up a new instance using our latest base AMI, I\ncan't ssh to the box because my key isn't on there.  Amazon has also released\nAmazon Linux 2, so we had a card to update the base AMI in the backlog.  I\npicked up this task and found the HashiCorp tool to be very powerful and useful.\n\n{\n  \"description\": \"Builds a Base Image for EC2 AWS provisioner\",\n  \"variables\":{\n    \"hostname\": \"cne-aws-trusty64\",\n    \"config_dir\": \".\"\n  },\n\n  \"builders\": [\n    {\n      \"type\": \"amazon-ebs\",\n      \"region\": \"us-east-1\",\n      \"source_ami\": \"ami-04681a1dbd79675a5\",\n      \"instance_type\": \"m5.xlarge\",\n      \"ssh_username\": \"ec2-user\",\n      \"ami_name\": \"snapdragon-v3.6.9\",\n      \"subnet_id\": \"subnet-0000000000\",\n      \"tags\": {\n        \"OS_Version\": \"Amazon Linux 2\",\n        \"Release\": \"2017-12\",\n        \"Builder\": \"packer\"\n      },\n      \"ssh_timeout\": \"60m\"\n    }\n  ],\n\n  \"provisioners\": [\n    {\n      \"type\": \"shell\",\n        \"scripts\": [\n          \"scripts/setup-example.sh\"\n        ]\n    } \n  ]\n}\n\n\nIn our setup script, we install dependencies and a configuration management tool\nadds users, and updates permissions as needed for all of our applications.  It's\nbasically the equivalent of whatever you would do manually to achieve a desired\nstate.","html":"<p><strong>Why use <a href=\"https://www.packer.io/\">Packer</a>? </strong>Infrastructure as code has become part of the buzzword bingo surrounding operational teams and their desired optimal workflows.</p><p>One could theoretically just start with a base AMI and manually update it and then re-save it as a new AMI, but this process is not repeatable.  We can check in our desired infrastructure states as code to version control.  This is good practice for change control management.  We can readily see what worked before and what was changed in the latest update.  If something catastrophic happens or we encounter unforeseen issues, we can always rollback to a previous state.</p><p>I'm the first new guy on our ops team in a few years.  We work with a base image to create our EC2 instances and that image does not have my ssh keys.  In our current workflow, when I spin up a new instance using our latest base AMI, I can't ssh to the box because my key isn't on there.  Amazon has also released Amazon Linux 2, so we had a card to update the base AMI in the backlog.  I picked up this task and found the HashiCorp tool to be very powerful and useful.</p><pre><code>{\n  &quot;description&quot;: &quot;Builds a Base Image for EC2 AWS provisioner&quot;,\n  &quot;variables&quot;:{\n    &quot;hostname&quot;: &quot;cne-aws-trusty64&quot;,\n    &quot;config_dir&quot;: &quot;.&quot;\n  },\n\n  &quot;builders&quot;: [\n    {\n      &quot;type&quot;: &quot;amazon-ebs&quot;,\n      &quot;region&quot;: &quot;us-east-1&quot;,\n      &quot;source_ami&quot;: &quot;ami-04681a1dbd79675a5&quot;,\n      &quot;instance_type&quot;: &quot;m5.xlarge&quot;,\n      &quot;ssh_username&quot;: &quot;ec2-user&quot;,\n      &quot;ami_name&quot;: &quot;snapdragon-v3.6.9&quot;,\n      &quot;subnet_id&quot;: &quot;subnet-0000000000&quot;,\n      &quot;tags&quot;: {\n        &quot;OS_Version&quot;: &quot;Amazon Linux 2&quot;,\n        &quot;Release&quot;: &quot;2017-12&quot;,\n        &quot;Builder&quot;: &quot;packer&quot;\n      },\n      &quot;ssh_timeout&quot;: &quot;60m&quot;\n    }\n  ],\n\n  &quot;provisioners&quot;: [\n    {\n      &quot;type&quot;: &quot;shell&quot;,\n        &quot;scripts&quot;: [\n          &quot;scripts/setup-example.sh&quot;\n        ]\n    } \n  ]\n}\n</code></pre>\n<p>In our setup script, we install dependencies and a configuration management tool adds users, and updates permissions as needed for all of our applications.  It's basically the equivalent of whatever you would do manually to achieve a desired state.</p>","url":"https://hackersandslackers.com/hashicorp-packer/","uuid":"0c50713b-1c8c-4071-b65d-e57fd87f3536","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bb3cf6e7ae39d0d60547523"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673710","title":"Lynx Roundup, October 2nd","slug":"lynx-roundup-october-2nd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/113@2x.jpg","excerpt":"Else & Elif in Python!  Git practices in data science!  Telepathically controlling drone swarms!","custom_excerpt":"Else & Elif in Python!  Git practices in data science!  Telepathically controlling drone swarms!","created_at_pretty":"27 September, 2018","published_at_pretty":"02 October, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-26T22:30:55.000-04:00","published_at":"2018-10-02T07:00:00.000-04:00","updated_at":"2018-10-17T01:46:49.000-04:00","meta_title":"Lynx Roundup, October 2nd | Hackers and Slackers","meta_description":"Else & Elif in Python!  Git practices in data science!  Telepathically controlling drone swarms!","og_description":"Else & Elif in Python!  Git practices in data science!  Telepathically controlling drone swarms!","og_image":"https://hackersandslackers.com/content/images/lynx/113@2x.jpg","og_title":"Lynx Roundup, October 2nd","twitter_description":"Else & Elif in Python!  Git practices in data science!  Telepathically controlling drone swarms!","twitter_image":"https://hackersandslackers.com/content/images/lynx/113@2x.jpg","twitter_title":"Lynx Roundup, October 2nd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://github.com/crew102/reprexpy\n\nhttps://realpython.com/python-conditional-statements/#the-else-and-elif-clauses\n\nhttps://towardsdatascience.com/implementing-git-in-data-science-11528f0fb4a7\n\nhttps://www.defenseone.com/technology/2018/09/its-now-possible-telepathically-communicate-drone-swarm/151068/\n\nhttps://blog.zysset.me/introduction-to-druid/\n\nhttps://erikbern.com/2017/07/06/optimizing-for-iteration-speed.html\n\nhttps://github.com/facebookincubator/Bowler","html":"<p></p><p><a href=\"https://github.com/crew102/reprexpy\">https://github.com/crew102/reprexpy</a></p><p><a href=\"https://realpython.com/python-conditional-statements/#the-else-and-elif-clauses\">https://realpython.com/python-conditional-statements/#the-else-and-elif-clauses</a></p><p><a href=\"https://towardsdatascience.com/implementing-git-in-data-science-11528f0fb4a7\">https://towardsdatascience.com/implementing-git-in-data-science-11528f0fb4a7</a></p><p><a href=\"https://www.defenseone.com/technology/2018/09/its-now-possible-telepathically-communicate-drone-swarm/151068/\">https://www.defenseone.com/technology/2018/09/its-now-possible-telepathically-communicate-drone-swarm/151068/</a></p><p><a href=\"https://blog.zysset.me/introduction-to-druid/\">https://blog.zysset.me/introduction-to-druid/</a></p><p><a href=\"https://erikbern.com/2017/07/06/optimizing-for-iteration-speed.html\">https://erikbern.com/2017/07/06/optimizing-for-iteration-speed.html</a></p><p><a href=\"https://github.com/facebookincubator/Bowler\">https://github.com/facebookincubator/Bowler</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-2nd/","uuid":"292af620-54d2-400b-972a-33317ed8bdc9","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bac40df5ee4c83af27dda82"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867370f","title":"Lynx Roundup, October 1st","slug":"lynx-roundup-october-1st","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/98-1@2x.jpg","excerpt":"Computer Vision can make you look like you can dance!  Physicists creating ghost images!  Python multiprocessing!","custom_excerpt":"Computer Vision can make you look like you can dance!  Physicists creating ghost images!  Python multiprocessing!","created_at_pretty":"27 September, 2018","published_at_pretty":"01 October, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-26T22:26:56.000-04:00","published_at":"2018-10-01T07:00:00.000-04:00","updated_at":"2018-10-16T23:46:38.000-04:00","meta_title":"Lynx Roundup, October 1st | Hackers and Slackers","meta_description":"Computer Vision can make you look like you can dance!  Physicists creating ghost images!  Python multiprocessing!","og_description":"Computer Vision can make you look like you can dance!  Physicists creating ghost images!  Python multiprocessing!","og_image":"https://hackersandslackers.com/content/images/lynx/98-1@2x.jpg","og_title":"Lynx Roundup, October 1st","twitter_description":"Computer Vision can make you look like you can dance!  Physicists creating ghost images!  Python multiprocessing!","twitter_image":"https://hackersandslackers.com/content/images/lynx/98-1@2x.jpg","twitter_title":"Lynx Roundup, October 1st","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://twitter.com/vrohani/status/930631332396273665\n\nhttps://multithreaded.stitchfix.com/blog/2018/09/05/datahighway/\n\nhttps://www.technologyreview.com/s/611941/easy-to-make-videos-can-show-you-dancing-like-the-stars/\n\nhttps://www.technologyreview.com/s/611936/physicists-hack-the-human-visual-system-to-create-ghost-images/\n\nhttps://codewithoutrules.com/2018/09/04/python-multiprocessing/\n\nhttps://towardsdatascience.com/minimizing-repair-costs-for-industrial-trucks-machine-learning-for-mechanical-engineers-ba755fb0108b\n\nhttps://github.com/kennethreitz/pytheory","html":"<p></p><p><a href=\"https://twitter.com/vrohani/status/930631332396273665\">https://twitter.com/vrohani/status/930631332396273665</a></p><p><a href=\"https://multithreaded.stitchfix.com/blog/2018/09/05/datahighway/\">https://multithreaded.stitchfix.com/blog/2018/09/05/datahighway/</a></p><p><a href=\"https://www.technologyreview.com/s/611941/easy-to-make-videos-can-show-you-dancing-like-the-stars/\">https://www.technologyreview.com/s/611941/easy-to-make-videos-can-show-you-dancing-like-the-stars/</a></p><p><a href=\"https://www.technologyreview.com/s/611936/physicists-hack-the-human-visual-system-to-create-ghost-images/\">https://www.technologyreview.com/s/611936/physicists-hack-the-human-visual-system-to-create-ghost-images/</a></p><p><a href=\"https://codewithoutrules.com/2018/09/04/python-multiprocessing/\">https://codewithoutrules.com/2018/09/04/python-multiprocessing/</a></p><p><a href=\"https://towardsdatascience.com/minimizing-repair-costs-for-industrial-trucks-machine-learning-for-mechanical-engineers-ba755fb0108b\">https://towardsdatascience.com/minimizing-repair-costs-for-industrial-trucks-machine-learning-for-mechanical-engineers-ba755fb0108b</a></p><p><a href=\"https://github.com/kennethreitz/pytheory\">https://github.com/kennethreitz/pytheory</a></p>","url":"https://hackersandslackers.com/lynx-roundup-october-1st/","uuid":"595dbaa0-aec6-4f4b-8ea5-139c999f885c","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bac3ff05ee4c83af27dda7f"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867370e","title":"Lynx Roundup, September 30th","slug":"lynx-roundup-september-30th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/93-1@2x.jpg","excerpt":"Bayesian Optimization for ML Hyperparameters!  Deploying an ML model as an API!  Genomics-compression algorithms!","custom_excerpt":"Bayesian Optimization for ML Hyperparameters!  Deploying an ML model as an API!  Genomics-compression algorithms!","created_at_pretty":"27 September, 2018","published_at_pretty":"30 September, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-09-26T22:24:39.000-04:00","published_at":"2018-09-30T07:00:00.000-04:00","updated_at":"2019-02-14T05:05:43.000-05:00","meta_title":"Lynx Roundup, September 30th | Hackers and Slackers","meta_description":"Bayesian Optimization for ML Hyperparameters!  Deploying an ML model as an API!  Genomics-compression algorithms!","og_description":"Bayesian Optimization for ML Hyperparameters!  Deploying an ML model as an API!  Genomics-compression algorithms!","og_image":"https://hackersandslackers.com/content/images/2019/02/93-1@2x.jpg","og_title":"Lynx Roundup, September 30th","twitter_description":"Bayesian Optimization for ML Hyperparameters!  Deploying an ML model as an API!  Genomics-compression algorithms!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/93-1@2x.jpg","twitter_title":"Lynx Roundup, September 30th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://blog.algorithmia.com/introduction-to-dataset-augmentation-and-expansion/\n\nhttps://spectrum.ieee.org/computing/software/the-desperate-quest-for-genomic-compression-algorithms\n\nhttps://towardsdatascience.com/deploying-a-machine-learning-model-as-a-rest-api-4a03b865c166\n\nhttps://towardsdatascience.com/making-music-when-simple-probabilities-outperform-deep-learning-75f4ee1b8e69\n\nhttps://github.com/scikit-optimize/scikit-optimize\n\nhttps://github.com/WillKoehrsen/hyperparameter-optimization/blob/master/Introduction\nto Bayesian Optimization with Hyperopt.ipynb\n[https://github.com/WillKoehrsen/hyperparameter-optimization/blob/master/Introduction%20to%20Bayesian%20Optimization%20with%20Hyperopt.ipynb]\n\nhttps://github.com/hyperopt/hyperopt","html":"<p></p><p><a href=\"https://blog.algorithmia.com/introduction-to-dataset-augmentation-and-expansion/\">https://blog.algorithmia.com/introduction-to-dataset-augmentation-and-expansion/</a></p><p><a href=\"https://spectrum.ieee.org/computing/software/the-desperate-quest-for-genomic-compression-algorithms\">https://spectrum.ieee.org/computing/software/the-desperate-quest-for-genomic-compression-algorithms</a></p><p><a href=\"https://towardsdatascience.com/deploying-a-machine-learning-model-as-a-rest-api-4a03b865c166\">https://towardsdatascience.com/deploying-a-machine-learning-model-as-a-rest-api-4a03b865c166</a></p><p><a href=\"https://towardsdatascience.com/making-music-when-simple-probabilities-outperform-deep-learning-75f4ee1b8e69\">https://towardsdatascience.com/making-music-when-simple-probabilities-outperform-deep-learning-75f4ee1b8e69</a></p><p><a href=\"https://github.com/scikit-optimize/scikit-optimize\">https://github.com/scikit-optimize/scikit-optimize</a></p><p><a href=\"https://github.com/WillKoehrsen/hyperparameter-optimization/blob/master/Introduction%20to%20Bayesian%20Optimization%20with%20Hyperopt.ipynb\">https://github.com/WillKoehrsen/hyperparameter-optimization/blob/master/Introduction to Bayesian Optimization with Hyperopt.ipynb</a></p><p><a href=\"https://github.com/hyperopt/hyperopt\">https://github.com/hyperopt/hyperopt</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-30th/","uuid":"10f5c267-8ced-4095-99b3-d37e5c423a37","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bac3f675ee4c83af27dda7c"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867370d","title":"Lynx Roundup, September 29th","slug":"lynx-roundup-september-29th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/92-1@2x.jpg","excerpt":"Magnetic tape!  Good SQL-learning resource!  When to use SQL vs Pandas!","custom_excerpt":"Magnetic tape!  Good SQL-learning resource!  When to use SQL vs Pandas!","created_at_pretty":"27 September, 2018","published_at_pretty":"29 September, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-26T21:51:48.000-04:00","published_at":"2018-09-29T07:00:00.000-04:00","updated_at":"2018-10-16T23:42:08.000-04:00","meta_title":"Lynx Roundup, September 29th | Hackers and Slackers","meta_description":"Magnetic tape!  Good SQL-learning resource!  When to use SQL vs Pandas!","og_description":"Magnetic tape!  Good SQL-learning resource!  When to use SQL vs Pandas!","og_image":"https://hackersandslackers.com/content/images/lynx/92-1@2x.jpg","og_title":"Lynx Roundup, September 29th","twitter_description":"Magnetic tape!  Good SQL-learning resource!  When to use SQL vs Pandas!","twitter_image":"https://hackersandslackers.com/content/images/lynx/92-1@2x.jpg","twitter_title":"Lynx Roundup, September 29th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://blog.regehr.org/archives/1603\n\nhttp://www.sciencemag.org/news/2018/09/european-science-funders-ban-grantees-publishing-paywalled-journals\n\nhttps://spectrum.ieee.org/computing/hardware/why-the-future-of-data-storage-is-still-magnetic-tape\n\nhttps://selectstarsql.com/\n\nhttps://thebaffler.com/latest/which-side-are-they-on-banks\n\nhttps://machinelearningmastery.com/how-to-score-probability-predictions-in-python/\n\nhttps://www.quora.com/In-what-situations-should-you-use-SQL-instead-of-Pandas-as-a-data-scientist","html":"<p></p><p><a href=\"https://blog.regehr.org/archives/1603\">https://blog.regehr.org/archives/1603</a></p><p><a href=\"http://www.sciencemag.org/news/2018/09/european-science-funders-ban-grantees-publishing-paywalled-journals\">http://www.sciencemag.org/news/2018/09/european-science-funders-ban-grantees-publishing-paywalled-journals</a></p><p><a href=\"https://spectrum.ieee.org/computing/hardware/why-the-future-of-data-storage-is-still-magnetic-tape\">https://spectrum.ieee.org/computing/hardware/why-the-future-of-data-storage-is-still-magnetic-tape</a></p><p><a href=\"https://selectstarsql.com/\">https://selectstarsql.com/</a></p><p><a href=\"https://thebaffler.com/latest/which-side-are-they-on-banks\">https://thebaffler.com/latest/which-side-are-they-on-banks</a></p><p><a href=\"https://machinelearningmastery.com/how-to-score-probability-predictions-in-python/\">https://machinelearningmastery.com/how-to-score-probability-predictions-in-python/</a></p><p><a href=\"https://www.quora.com/In-what-situations-should-you-use-SQL-instead-of-Pandas-as-a-data-scientist\">https://www.quora.com/In-what-situations-should-you-use-SQL-instead-of-Pandas-as-a-data-scientist</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-29th/","uuid":"3caf2cd4-e571-4517-9163-ccfa58338a62","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bac37b45ee4c83af27dda79"}}]}},"pageContext":{"pageNumber":14,"humanPageNumber":15,"skip":168,"limit":12,"numberOfPages":33,"previousPagePath":"/page/14","nextPagePath":"/page/16"}}