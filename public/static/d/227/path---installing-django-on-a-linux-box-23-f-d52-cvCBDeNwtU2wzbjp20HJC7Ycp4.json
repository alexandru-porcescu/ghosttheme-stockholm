{"data":{"ghostPost":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673633","title":"Installing Django on Ubuntu","slug":"installing-django-on-a-linux-box","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/django2-1.jpg","excerpt":"Get started with the Python MVC framework that started it all.","custom_excerpt":"Get started with the Python MVC framework that started it all.","created_at_pretty":"18 November, 2017","published_at_pretty":"18 November, 2017","updated_at_pretty":"28 March, 2019","created_at":"2017-11-18T06:07:00.000-05:00","published_at":"2017-11-18T06:12:07.000-05:00","updated_at":"2019-03-28T04:43:32.000-04:00","meta_title":"Installing Django on Ubuntu | Hackers and Slackers","meta_description":"Get started with the Python MVC framework that started it all","og_description":"Get started with the Python MVC framework that started it all","og_image":"https://hackersandslackers.com/content/images/2019/03/django2-1.jpg","og_title":"Installing Django on Ubuntu","twitter_description":"Get started with the Python MVC framework that started it all","twitter_image":"https://hackersandslackers.com/content/images/2019/03/django2-1.jpg","twitter_title":"Installing Django on Ubuntu","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"#Getting into Django","slug":"starting-django","description":"Getting started with Django: the original daddy of Python frameworks.","feature_image":"https://hackersandslackers.com/content/images/2019/03/django2.jpg","meta_description":"Getting started with Django: the original daddy of Python frameworks.","meta_title":"Setting up Django","visibility":"internal"},{"name":"Software Development","slug":"software-development","description":"General software development principals and tools. Receive insights applicable to building any application.","feature_image":null,"meta_description":"General software development principals and tools. Receive insights applicable to building any application.","meta_title":"Software Development | Hackers and Slackers","visibility":"public"}],"plaintext":"Django is the OG Grandaddy of all Python frameworks: it's by far Python's most\nfully-featured MVC framework out of the box. Today we're going to look at the\nrelatively painless process of setting up Django on a Ubuntu server.\n\nStack\n * Ubuntu\n * Python 3\n * Pip 3\n * Nginx\n * Django (latest)\n\nInstall all Dependencies\nWe'll start with the obligatory update to ensure we're getting the latest\npackages.\n\n$ apt-get update\n$ apt-get upgrade\n\n\nLet's verify that the latest version of Python 3 is installed on your box:\n\n$ python3 --version\nPython 3.6.3\n\n\nRegardless, it's probably a good idea to download the latest anyway:\n\napt-get install python3 python3-pip python3-dev\n\n\nI highly recommend setting up a Python virtual environment before moving forward\nwith any installs. If you're living in the stone age, virtualenv  and \nvirtualenvwrapper  will probably server you fine. If you're a gentleman, use \npipenv  or poetry  instead.\n\nNow let's go ahead and install Django. We can find out what the latest\ndistribution is by checking Django's download page: \nhttps://www.djangoproject.com/download/\n\nWith the version number in hand, we'll install Django using pip:\n\npip3 install Django==2.1.7\n\n\nNote that we’re using pip3  here as opposed to pip, which explicitly downloads\nDjango under our Python3 installation. If we’re installing inside our virtual\nenvironment, specifying pip3  is redundant; pip  will work under the assumption\nthat we’re using the only Python version installed to our environment.\n\nLet's verify that you've installed Django correctly. Open your Python3 shell and\ninput the following:\n\n$ python3\n>>> import django\n>>> print(django.get_version())\n1.11\n\n\nIf you receive an error along the lines of ModuleNotFoundError: No module named\n'Django', Django was probably installed on Python2 as opposed to 3. Make sure\nthat you used pip3 instead of pip to install Django, and try again.\n\nWhy is This Somewhat Convoluted?\nAll major Linux distributions come with Python 2.7 pre-installed. Python2 is\nstill critical to the core functionality of most linux distributions, therefore\nPython2 must be left intact and cannot be deleted or modified without suffering\ndamage to the operating system.\n\nUnfortunately, the python and pip commands will forever refer to Python 2 as a\nresult, thus forcing Python 3 users to forever utilize the python3  and pip3 \ncommands. This isn't that big of a deal, but is a common pitfall for those\nswitching over to the light side.","html":"<p>Django is the OG Grandaddy of all Python frameworks: it's by far Python's most fully-featured MVC framework out of the box. Today we're going to look at the relatively painless process of setting up Django on a Ubuntu server.</p><h3 id=\"stack\">Stack</h3><ul><li>Ubuntu</li><li>Python 3</li><li>Pip 3</li><li>Nginx</li><li>Django (latest)</li></ul><h2 id=\"install-all-dependencies\">Install all Dependencies</h2><p>We'll start with the obligatory update to ensure we're getting the latest packages.</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ apt-get update\n$ apt-get upgrade\n</code></pre>\n<!--kg-card-end: markdown--><p>Let's verify that the latest version of Python 3 is installed on your box:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ python3 --version\nPython 3.6.3\n</code></pre>\n<!--kg-card-end: markdown--><p>Regardless, it's probably a good idea to download the latest anyway:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">apt-get install python3 python3-pip python3-dev\n</code></pre>\n<!--kg-card-end: markdown--><p>I highly recommend setting up a Python virtual environment before moving forward with any installs. If you're living in the stone age, <code>virtualenv</code> and <code>virtualenvwrapper</code> will probably server you fine. If you're a gentleman, use <code>pipenv</code> or <code>poetry</code> instead.</p><p>Now let's go ahead and install Django. We can find out what the latest distribution is by checking Django's download page: <a href=\"https://www.djangoproject.com/download/\">https://www.djangoproject.com/download/</a></p><p>With the version number in hand, we'll install Django using pip:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">pip3 install Django==2.1.7\n</code></pre>\n<!--kg-card-end: markdown--><p>Note that we’re using <strong>pip3</strong> here as opposed to <strong>pip</strong>, which explicitly downloads Django under our Python3 installation. If we’re installing inside our virtual environment, specifying <strong>pip3</strong> is redundant; <strong>pip</strong> will work under the assumption that we’re using the only Python version installed to our environment.</p><p>Let's verify that you've installed Django correctly. Open your Python3 shell and input the following:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ python3\n&gt;&gt;&gt; import django\n&gt;&gt;&gt; print(django.get_version())\n1.11\n</code></pre>\n<!--kg-card-end: markdown--><p>If you receive an error along the lines of <code>ModuleNotFoundError: No module named 'Django'</code>, Django was probably installed on Python2 as opposed to 3. Make sure that you used pip3 instead of pip to install Django, and try again.</p><h2 id=\"why-is-this-somewhat-convoluted\">Why is This Somewhat Convoluted?</h2><p>All major Linux distributions come with Python 2.7 pre-installed. Python2 is still critical to the core functionality of most linux distributions, therefore Python2 must be left intact and cannot be deleted or modified without suffering damage to the operating system.</p><p>Unfortunately, the python and pip commands will forever refer to Python 2 as a result, thus forcing Python 3 users to forever utilize the <em>python3</em> and <em>pip3</em> commands. This isn't that big of a deal, but is a common pitfall for those switching over to the light side.</p>","url":"https://hackersandslackers.com/installing-django-on-a-linux-box/","uuid":"77609409-5552-418d-b742-c549a2ccf01b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5a101454d201b772c140d36e"}},"pageContext":{"slug":"installing-django-on-a-linux-box"}}