{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c80c9fa665ce4577adfafea","title":"Lynx Roundup, March 28th","slug":"lynx-roundup-march-28th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/155-3.jpg","excerpt":"Intro to Quantum Computing!  Gut bacteria news!  Visualizing Likert scales!","custom_excerpt":"Intro to Quantum Computing!  Gut bacteria news!  Visualizing Likert scales!","created_at_pretty":"07 March, 2019","published_at_pretty":"28 March, 2019","updated_at_pretty":"28 March, 2019","created_at":"2019-03-07T02:36:26.000-05:00","published_at":"2019-03-28T04:06:00.000-04:00","updated_at":"2019-03-28T04:06:07.000-04:00","meta_title":"Lynx Roundup, March 28th | Hackers and Slackers","meta_description":"Intro to Quantum Computing!  Gut bacteria news!  Visualizing Likert scales!","og_description":"Intro to Quantum Computing!  Gut bacteria news!  Visualizing Likert scales!","og_image":"https://hackersandslackers.com/content/images/2019/03/155-3.jpg","og_title":"Lynx Roundup, March 28th","twitter_description":"Intro to Quantum Computing!  Gut bacteria news!  Visualizing Likert scales!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/155-2.jpg","twitter_title":"Lynx Roundup, March 28th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://www.jacobinmag.com/2015/04/uber-exploitation-worker-cooperative-socialize\n\nhttps://code-love.com/2019/02/25/intro-to-quantum-computing/\n\nhttps://packetriot.com/\n\nhttps://phys.org/news/2019-02-interspecies-strategy-gut-bacteria-mammalian.html\n\nhttps://www.recode.net/2019/2/21/18235161/google-workplace-dispute-end-forced-arbitration\n\nhttps://tigercosmos.xyz/lets-build-dbms/days/1.html\n\nhttps://dynamicecology.wordpress.com/2019/01/28/comparison-of-ways-of-visualizing-individual-level-likert-data-line-plots-and-heat-maps-and-mosaic-plots-oh-my/","html":"<p></p><p><a href=\"https://www.jacobinmag.com/2015/04/uber-exploitation-worker-cooperative-socialize\">https://www.jacobinmag.com/2015/04/uber-exploitation-worker-cooperative-socialize</a></p><p><a href=\"https://code-love.com/2019/02/25/intro-to-quantum-computing/\">https://code-love.com/2019/02/25/intro-to-quantum-computing/</a></p><p><a href=\"https://packetriot.com/\">https://packetriot.com/</a></p><p><a href=\"https://phys.org/news/2019-02-interspecies-strategy-gut-bacteria-mammalian.html\">https://phys.org/news/2019-02-interspecies-strategy-gut-bacteria-mammalian.html</a></p><p><a href=\"https://www.recode.net/2019/2/21/18235161/google-workplace-dispute-end-forced-arbitration\">https://www.recode.net/2019/2/21/18235161/google-workplace-dispute-end-forced-arbitration</a></p><p><a href=\"https://tigercosmos.xyz/lets-build-dbms/days/1.html\">https://tigercosmos.xyz/lets-build-dbms/days/1.html</a></p><p><a href=\"https://dynamicecology.wordpress.com/2019/01/28/comparison-of-ways-of-visualizing-individual-level-likert-data-line-plots-and-heat-maps-and-mosaic-plots-oh-my/\">https://dynamicecology.wordpress.com/2019/01/28/comparison-of-ways-of-visualizing-individual-level-likert-data-line-plots-and-heat-maps-and-mosaic-plots-oh-my/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-28th/","uuid":"e458ba71-90b4-40c8-a2a7-cf2597bd98f8","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c9fa665ce4577adfafea"}},{"node":{"id":"Ghost__Post__5c80c970665ce4577adfafdf","title":"Lynx Roundup, March 27th","slug":"lynx-roundup-march-27th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/lynx43.jpg","excerpt":"Dashboarding in Python!  Data exploration in Python!  Interactive controls in Jupyter!","custom_excerpt":"Dashboarding in Python!  Data exploration in Python!  Interactive controls in Jupyter!","created_at_pretty":"07 March, 2019","published_at_pretty":"27 March, 2019","updated_at_pretty":"28 March, 2019","created_at":"2019-03-07T02:34:08.000-05:00","published_at":"2019-03-27T07:00:00.000-04:00","updated_at":"2019-03-28T04:05:51.000-04:00","meta_title":"Lynx Roundup, March 27th | Hackers and Slackers","meta_description":"Dashboarding in Python!  Data exploration in Python!  Interactive controls in Jupyter!","og_description":"Dashboarding in Python!  Data exploration in Python!  Interactive controls in Jupyter!","og_image":"https://hackersandslackers.com/content/images/2019/03/lynx43.jpg","og_title":"Lynx Roundup, March 27th","twitter_description":"Dashboarding in Python!  Data exploration in Python!  Interactive controls in Jupyter!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/lynx43-2.jpg","twitter_title":"Lynx Roundup, March 27th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://youtu.be/xRfS4aN0Wfg\n\nhttps://medium.com/@grassfedcode/goodbye-virtual-environments-b9f8115bc2b6\n\nhttps://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python\n\nhttps://towardsdatascience.com/interactive-controls-for-jupyter-notebooks-f5c94829aee6\n\nhttps://medium.com/@drimik99/a-python-programmers-guide-to-dashboarding-part-1-8db0c48eee9d\n\nhttps://julien.danjou.info/high-performance-in-python-with-zero-copy-and-the-buffer-protocol/\n\nhttps://medium.com/@dmfutcher/you-dont-need-all-that-complex-expensive-distracting-infrastructure-a70dbe0dbccb","html":"<p></p><p><a href=\"https://youtu.be/xRfS4aN0Wfg\">https://youtu.be/xRfS4aN0Wfg</a></p><p><a href=\"https://medium.com/@grassfedcode/goodbye-virtual-environments-b9f8115bc2b6\">https://medium.com/@grassfedcode/goodbye-virtual-environments-b9f8115bc2b6</a></p><p><a href=\"https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python\">https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python</a></p><p><a href=\"https://towardsdatascience.com/interactive-controls-for-jupyter-notebooks-f5c94829aee6\">https://towardsdatascience.com/interactive-controls-for-jupyter-notebooks-f5c94829aee6</a></p><p><a href=\"https://medium.com/@drimik99/a-python-programmers-guide-to-dashboarding-part-1-8db0c48eee9d\">https://medium.com/@drimik99/a-python-programmers-guide-to-dashboarding-part-1-8db0c48eee9d</a></p><p><a href=\"https://julien.danjou.info/high-performance-in-python-with-zero-copy-and-the-buffer-protocol/\">https://julien.danjou.info/high-performance-in-python-with-zero-copy-and-the-buffer-protocol/</a></p><p><a href=\"https://medium.com/@dmfutcher/you-dont-need-all-that-complex-expensive-distracting-infrastructure-a70dbe0dbccb\">https://medium.com/@dmfutcher/you-dont-need-all-that-complex-expensive-distracting-infrastructure-a70dbe0dbccb</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-27th/","uuid":"c90ab58f-c901-41bf-b72e-7653449a5b88","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c970665ce4577adfafdf"}},{"node":{"id":"Ghost__Post__5c80c8cc665ce4577adfafd5","title":"Lynx Roundup, March 26th","slug":"lynx-roundup-march-26th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/41-1.jpg","excerpt":"Tech co-ops!  History of the alphabet!  Foundations for a general theory of neural nets!  ","custom_excerpt":"Tech co-ops!  History of the alphabet!  Foundations for a general theory of neural nets!  ","created_at_pretty":"07 March, 2019","published_at_pretty":"26 March, 2019","updated_at_pretty":"10 April, 2019","created_at":"2019-03-07T02:31:24.000-05:00","published_at":"2019-03-26T07:00:00.000-04:00","updated_at":"2019-04-10T01:56:16.000-04:00","meta_title":"Lynx Roundup, March 26th | Hackers and Slackers","meta_description":"Tech co-ops!  History of the alphabet!  Foundations for a general theory of neural nets!  ","og_description":"Tech co-ops!  History of the alphabet!  Foundations for a general theory of neural nets!  ","og_image":"https://hackersandslackers.com/content/images/2019/04/41-1-2.jpg","og_title":"Lynx Roundup, March 26th","twitter_description":"Tech co-ops!  History of the alphabet!  Foundations for a general theory of neural nets!  ","twitter_image":"https://hackersandslackers.com/content/images/2019/04/41-1-1.jpg","twitter_title":"Lynx Roundup, March 26th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://github.com/hng/tech-coops\n\nhttps://stackabuse.com/linked-lists-in-detail-with-python-examples-single-linked-lists/\n\nhttps://mymodernmet.com/history-of-the-alphabet-usefulcharts/\n\nhttps://www.quantamagazine.org/how-our-universe-could-emerge-as-a-hologram-20190221/\n\nhttps://arxiv.org/pdf/1711.10455.pdf\n\nhttps://www.quantamagazine.org/foundations-built-for-a-general-theory-of-neural-networks-20190131\n\nhttps://mymodernmet.com/scale-model-ancient-rome/","html":"<p></p><p><a href=\"https://github.com/hng/tech-coops\">https://github.com/hng/tech-coops</a></p><p><a href=\"https://stackabuse.com/linked-lists-in-detail-with-python-examples-single-linked-lists/\">https://stackabuse.com/linked-lists-in-detail-with-python-examples-single-linked-lists/</a></p><p><a href=\"https://mymodernmet.com/history-of-the-alphabet-usefulcharts/\">https://mymodernmet.com/history-of-the-alphabet-usefulcharts/</a></p><p><a href=\"https://www.quantamagazine.org/how-our-universe-could-emerge-as-a-hologram-20190221/\">https://www.quantamagazine.org/how-our-universe-could-emerge-as-a-hologram-20190221/</a></p><p><a href=\"https://arxiv.org/pdf/1711.10455.pdf\">https://arxiv.org/pdf/1711.10455.pdf</a></p><p><a href=\"https://www.quantamagazine.org/foundations-built-for-a-general-theory-of-neural-networks-20190131\">https://www.quantamagazine.org/foundations-built-for-a-general-theory-of-neural-networks-20190131</a></p><p><a href=\"https://mymodernmet.com/scale-model-ancient-rome/\">https://mymodernmet.com/scale-model-ancient-rome/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-26th/","uuid":"0fe03d31-714d-46d8-9996-c89779ef3222","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c8cc665ce4577adfafd5"}},{"node":{"id":"Ghost__Post__5c80c878665ce4577adfafcb","title":"Lynx Roundup, March 25th","slug":"lynx-roundup-march-25th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/lynx39.jpg","excerpt":"Data vs entity!  Excel diffs in Pandas!  Data science for good!","custom_excerpt":"Data vs entity!  Excel diffs in Pandas!  Data science for good!","created_at_pretty":"07 March, 2019","published_at_pretty":"25 March, 2019","updated_at_pretty":"25 March, 2019","created_at":"2019-03-07T02:30:00.000-05:00","published_at":"2019-03-25T15:04:00.000-04:00","updated_at":"2019-03-25T15:04:25.000-04:00","meta_title":"Lynx Roundup, March 25th | Hackers and Slackers","meta_description":"Data vs entity!  Excel diffs in Pandas!  Data science for good!","og_description":"Data vs entity!  Excel diffs in Pandas!  Data science for good!","og_image":"https://hackersandslackers.com/content/images/2019/03/lynx39.jpg","og_title":"Lynx Roundup, March 25th","twitter_description":"Data vs entity!  Excel diffs in Pandas!  Data science for good!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/lynx39.jpg","twitter_title":"Lynx Roundup, March 25th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttp://pbpython.com/excel-diff-pandas-update.html\n\nhttps://repl.it/\n\nhttps://www.nasa.gov/content/dtn\n\nhttps://neurosciencenews.com/cortical-connectivity-10654/\n\nhttps://lispcast.com/tension-between-data-and-entity/\n\nhttps://www.mattermore.io/\n\nhttps://www.citylab.com/life/2019/02/global-megaregions-economic-powerhouse-megalopolis/583729/","html":"<p></p><p><a href=\"http://pbpython.com/excel-diff-pandas-update.html\">http://pbpython.com/excel-diff-pandas-update.html</a></p><p><a href=\"https://repl.it/\">https://repl.it/</a></p><p><a href=\"https://www.nasa.gov/content/dtn\">https://www.nasa.gov/content/dtn</a></p><p><a href=\"https://neurosciencenews.com/cortical-connectivity-10654/\">https://neurosciencenews.com/cortical-connectivity-10654/</a></p><p><a href=\"https://lispcast.com/tension-between-data-and-entity/\">https://lispcast.com/tension-between-data-and-entity/</a></p><p><a href=\"https://www.mattermore.io/\">https://www.mattermore.io/</a></p><p><a href=\"https://www.citylab.com/life/2019/02/global-megaregions-economic-powerhouse-megalopolis/583729/\">https://www.citylab.com/life/2019/02/global-megaregions-economic-powerhouse-megalopolis/583729/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-25th/","uuid":"e998007f-f83c-4eaf-a287-e536db6dccbf","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c878665ce4577adfafcb"}},{"node":{"id":"Ghost__Post__5c80c6c5665ce4577adfafbf","title":"Lynx Roundup, March 24th","slug":"lynx-roundup-march-24th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/114-2.jpg","excerpt":"When to use Pandas vs SQL!  The Apollo Guidance Computer Core!  Learning Spark!","custom_excerpt":"When to use Pandas vs SQL!  The Apollo Guidance Computer Core!  Learning Spark!","created_at_pretty":"07 March, 2019","published_at_pretty":"24 March, 2019","updated_at_pretty":"24 March, 2019","created_at":"2019-03-07T02:22:45.000-05:00","published_at":"2019-03-24T00:51:00.000-04:00","updated_at":"2019-03-24T00:51:31.000-04:00","meta_title":"Lynx Roundup, March 24th | Hackers and Slackers","meta_description":"When to use Pandas vs SQL!  The Apollo Guidance Computer Core!  Learning Spark!","og_description":"When to use Pandas vs SQL!  The Apollo Guidance Computer Core!  Learning Spark!","og_image":"https://hackersandslackers.com/content/images/2019/03/114-2.jpg","og_title":"Lynx Roundup, March 24th","twitter_description":"When to use Pandas vs SQL!  The Apollo Guidance Computer Core!  Learning Spark!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/114-1.jpg","twitter_title":"Lynx Roundup, March 24th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://tdhopper.com/blog/some-reflections-on-being-turned-down-for-a-lot-of-data-science-jobs/\n\nhttp://cci.esa.int/data\n\nhttps://www.reddit.com/r/datascience/comments/ajio6o/learn_spark/\n\nhttps://medium.com/@jeremy.noring/regrettable-code-episode-1-767dc1b92bd1\n\nhttps://blogs.the451group.com/techdeals/ma/hellman-friedmans-ultimate-hr-deal/\n\nhttp://www.righto.com/2019/01/inside-apollo-guidance-computers-core.html\n\nhttps://medium.com/carwow-product-engineering/sql-vs-pandas-how-to-balance-tasks-between-server-and-client-side-9e2f6c95677","html":"<p></p><p><a href=\"https://tdhopper.com/blog/some-reflections-on-being-turned-down-for-a-lot-of-data-science-jobs/\">https://tdhopper.com/blog/some-reflections-on-being-turned-down-for-a-lot-of-data-science-jobs/</a></p><p><a href=\"http://cci.esa.int/data\">http://cci.esa.int/data</a></p><p><a href=\"https://www.reddit.com/r/datascience/comments/ajio6o/learn_spark/\">https://www.reddit.com/r/datascience/comments/ajio6o/learn_spark/</a></p><p><a href=\"https://medium.com/@jeremy.noring/regrettable-code-episode-1-767dc1b92bd1\">https://medium.com/@jeremy.noring/regrettable-code-episode-1-767dc1b92bd1</a></p><p><a href=\"https://blogs.the451group.com/techdeals/ma/hellman-friedmans-ultimate-hr-deal/\">https://blogs.the451group.com/techdeals/ma/hellman-friedmans-ultimate-hr-deal/</a></p><p><a href=\"http://www.righto.com/2019/01/inside-apollo-guidance-computers-core.html\">http://www.righto.com/2019/01/inside-apollo-guidance-computers-core.html</a></p><p><a href=\"https://medium.com/carwow-product-engineering/sql-vs-pandas-how-to-balance-tasks-between-server-and-client-side-9e2f6c95677\">https://medium.com/carwow-product-engineering/sql-vs-pandas-how-to-balance-tasks-between-server-and-client-side-9e2f6c95677</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-24th/","uuid":"658c866c-9120-407a-9a51-96308129bd20","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c6c5665ce4577adfafbf"}},{"node":{"id":"Ghost__Post__5c80c61c665ce4577adfafb5","title":"Lynx Roundup, March 23rd","slug":"lynx-roundup-march-23rd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/110-2.jpg","excerpt":"From Cassandra to S3 to Spark!  Automating experimental replication!  New versions of the Periodic Table!","custom_excerpt":"From Cassandra to S3 to Spark!  Automating experimental replication!  New versions of the Periodic Table!","created_at_pretty":"07 March, 2019","published_at_pretty":"23 March, 2019","updated_at_pretty":"24 March, 2019","created_at":"2019-03-07T02:19:56.000-05:00","published_at":"2019-03-23T03:29:00.000-04:00","updated_at":"2019-03-24T00:51:54.000-04:00","meta_title":"Lynx Roundup, March 23rd | Hackers and Slackers","meta_description":"From Cassandra to S3 to Spark!  Automating experimental replication!  New versions of the Periodic Table!","og_description":"From Cassandra to S3 to Spark!  Automating experimental replication!  New versions of the Periodic Table!","og_image":"https://hackersandslackers.com/content/images/2019/03/110-2.jpg","og_title":"Lynx Roundup, March 23rd","twitter_description":"From Cassandra to S3 to Spark!  Automating experimental replication!  New versions of the Periodic Table!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/110-1.jpg","twitter_title":"Lynx Roundup, March 23rd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://becominghuman.ai/exporting-cassandra-time-series-data-to-s3-for-data-analysis-using-spark-ca9337990a21\n\nhttps://www.wired.com/story/darpa-wants-to-solve-sciences-replication-crisis-with-robots/\n\nhttps://www.nature.com/articles/d41586-019-00546-7\n\nhttp://www.1-9-9-1.com/\n\nhttp://dataphys.org/list/\n\nhttps://www.newscientist.com/article/mg24132190-400-three-reasons-why-the-periodic-table-needs-a-redesign/\n\nhttps://twitter.com/SwiftOnSecurity/status/975263380369010688","html":"<p></p><p><a href=\"https://becominghuman.ai/exporting-cassandra-time-series-data-to-s3-for-data-analysis-using-spark-ca9337990a21\">https://becominghuman.ai/exporting-cassandra-time-series-data-to-s3-for-data-analysis-using-spark-ca9337990a21</a></p><p><a href=\"https://www.wired.com/story/darpa-wants-to-solve-sciences-replication-crisis-with-robots/\">https://www.wired.com/story/darpa-wants-to-solve-sciences-replication-crisis-with-robots/</a></p><p><a href=\"https://www.nature.com/articles/d41586-019-00546-7\">https://www.nature.com/articles/d41586-019-00546-7</a></p><p><a href=\"http://www.1-9-9-1.com/\">http://www.1-9-9-1.com/</a></p><p><a href=\"http://dataphys.org/list/\">http://dataphys.org/list/</a></p><p><a href=\"https://www.newscientist.com/article/mg24132190-400-three-reasons-why-the-periodic-table-needs-a-redesign/\">https://www.newscientist.com/article/mg24132190-400-three-reasons-why-the-periodic-table-needs-a-redesign/</a></p><p><a href=\"https://twitter.com/SwiftOnSecurity/status/975263380369010688\">https://twitter.com/SwiftOnSecurity/status/975263380369010688</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-23rd/","uuid":"2adc5eb5-b899-45c6-b432-70d7908fbaee","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c61c665ce4577adfafb5"}},{"node":{"id":"Ghost__Post__5c80c5a4665ce4577adfafa5","title":"Lynx Roundup, March 22nd","slug":"lynx-roundup-march-22nd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/153-2.jpg","excerpt":"Game workers unite!  Irregular data in Pandas!  Alan Kay's CS curriculum!","custom_excerpt":"Game workers unite!  Irregular data in Pandas!  Alan Kay's CS curriculum!","created_at_pretty":"07 March, 2019","published_at_pretty":"22 March, 2019","updated_at_pretty":"23 March, 2019","created_at":"2019-03-07T02:17:56.000-05:00","published_at":"2019-03-22T07:00:00.000-04:00","updated_at":"2019-03-22T20:47:36.000-04:00","meta_title":"Lynx Roundup, March 22nd | Hackers and Slackers","meta_description":"Game workers unite!  Irregular data in Pandas!  Alan Kay's CS curriculum!","og_description":"Game workers unite!  Irregular data in Pandas!  Alan Kay's CS curriculum!","og_image":"https://hackersandslackers.com/content/images/2019/03/153-2.jpg","og_title":"Lynx Roundup, March 22nd","twitter_description":"Game workers unite!  Irregular data in Pandas!  Alan Kay's CS curriculum!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/153-1.jpg","twitter_title":"Lynx Roundup, March 22nd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://towardsdatascience.com/making-sense-of-startup-valuations-with-data-science-1dededaf18bb\n\nhttps://www.gameworkersunite.org/get-involved\n\nhttps://blog.esciencecenter.nl/irregular-data-in-pandas-using-c-88ce311cb9ef\n\nhttps://towardsdatascience.com/expose-endpoints-using-jupyter-kernel-gateway-e55951b0f5ad\n\nhttps://www.quora.com/If-Alan-Kay-made-an-introductory-technical-course-syllabus-to-teach-real-computer-science-to-undergraduates-what-would-be-on-it/answer/Alan-Kay-11\n\nhttps://www.techworker.coop/\n\nhttp://www.math.utah.edu/~pa/math.html","html":"<p></p><p><a href=\"https://towardsdatascience.com/making-sense-of-startup-valuations-with-data-science-1dededaf18bb\">https://towardsdatascience.com/making-sense-of-startup-valuations-with-data-science-1dededaf18bb</a></p><p><a href=\"https://www.gameworkersunite.org/get-involved\">https://www.gameworkersunite.org/get-involved</a></p><p><a href=\"https://blog.esciencecenter.nl/irregular-data-in-pandas-using-c-88ce311cb9ef\">https://blog.esciencecenter.nl/irregular-data-in-pandas-using-c-88ce311cb9ef</a></p><p><a href=\"https://towardsdatascience.com/expose-endpoints-using-jupyter-kernel-gateway-e55951b0f5ad\">https://towardsdatascience.com/expose-endpoints-using-jupyter-kernel-gateway-e55951b0f5ad</a></p><p><a href=\"https://www.quora.com/If-Alan-Kay-made-an-introductory-technical-course-syllabus-to-teach-real-computer-science-to-undergraduates-what-would-be-on-it/answer/Alan-Kay-11\">https://www.quora.com/If-Alan-Kay-made-an-introductory-technical-course-syllabus-to-teach-real-computer-science-to-undergraduates-what-would-be-on-it/answer/Alan-Kay-11</a></p><p><a href=\"https://www.techworker.coop/\">https://www.techworker.coop/</a></p><p><a href=\"http://www.math.utah.edu/~pa/math.html\">http://www.math.utah.edu/~pa/math.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-22nd/","uuid":"147d1c6b-46a0-4d06-a5bd-ff277bc6996b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c5a4665ce4577adfafa5"}},{"node":{"id":"Ghost__Post__5c80c525665ce4577adfaf9b","title":"Lynx Roundup, March 21st","slug":"lynx-roundup-march-21st","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/154-1-3.jpg","excerpt":"Scaling Postgres!  Demystifying join algos!  Testing Pandas!","custom_excerpt":"Scaling Postgres!  Demystifying join algos!  Testing Pandas!","created_at_pretty":"07 March, 2019","published_at_pretty":"21 March, 2019","updated_at_pretty":"21 March, 2019","created_at":"2019-03-07T02:15:49.000-05:00","published_at":"2019-03-21T07:00:00.000-04:00","updated_at":"2019-03-21T19:24:58.000-04:00","meta_title":"Lynx Roundup, March 21st | Hackers and Slackers","meta_description":"Scaling Postgres!  Demystifying join algos!  Testing Pandas!","og_description":"Scaling Postgres!  Demystifying join algos!  Testing Pandas!","og_image":"https://hackersandslackers.com/content/images/2019/03/154-1-3.jpg","og_title":"Lynx Roundup, March 21st","twitter_description":"Scaling Postgres!  Demystifying join algos!  Testing Pandas!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/154-1-2.jpg","twitter_title":"Lynx Roundup, March 21st","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://www.tweag.io/posts/2019-02-28-jupyter-with.html\n\nhttps://www.gamesindustry.biz/articles/2019-02-25-activisions-bobby-kotick-and-eas-andrew-wilson-among-most-overpaid-ceos-in-us\n\nhttps://medium.com/@gajus/lessons-learned-scaling-postgresql-database-to-1-2bn-records-month-edc5449b3067\n\nhttp://blog.felipe.rs/2019/01/29/demystifying-join-algorithms/\n\nhttps://dev.to/wemake-services/1-minute-guide-to-real-constants-in-python-2bpk\n\nhttps://realpython.com/python-for-loop/\n\nhttps://engineering.hexacta.com/testing-pandas-b65c0ea8a28e","html":"<p></p><p><a href=\"https://www.tweag.io/posts/2019-02-28-jupyter-with.html\">https://www.tweag.io/posts/2019-02-28-jupyter-with.html</a></p><p><a href=\"https://www.gamesindustry.biz/articles/2019-02-25-activisions-bobby-kotick-and-eas-andrew-wilson-among-most-overpaid-ceos-in-us\">https://www.gamesindustry.biz/articles/2019-02-25-activisions-bobby-kotick-and-eas-andrew-wilson-among-most-overpaid-ceos-in-us</a></p><p><a href=\"https://medium.com/@gajus/lessons-learned-scaling-postgresql-database-to-1-2bn-records-month-edc5449b3067\">https://medium.com/@gajus/lessons-learned-scaling-postgresql-database-to-1-2bn-records-month-edc5449b3067</a></p><p><a href=\"http://blog.felipe.rs/2019/01/29/demystifying-join-algorithms/\">http://blog.felipe.rs/2019/01/29/demystifying-join-algorithms/</a></p><p><a href=\"https://dev.to/wemake-services/1-minute-guide-to-real-constants-in-python-2bpk\">https://dev.to/wemake-services/1-minute-guide-to-real-constants-in-python-2bpk</a></p><p><a href=\"https://realpython.com/python-for-loop/\">https://realpython.com/python-for-loop/</a></p><p><a href=\"https://engineering.hexacta.com/testing-pandas-b65c0ea8a28e\">https://engineering.hexacta.com/testing-pandas-b65c0ea8a28e</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-21st/","uuid":"81a3476f-5980-4b49-81ce-cc88300a495e","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c525665ce4577adfaf9b"}},{"node":{"id":"Ghost__Post__5c80c4a2665ce4577adfaf90","title":"Lynx Roundup, March 20th","slug":"lynx-roundup-march-20th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/152-2.jpg","excerpt":"Python doing your taxes!  1970s videophones!  How humans and AI can complement each other!","custom_excerpt":"Python doing your taxes!  1970s videophones!  How humans and AI can complement each other!","created_at_pretty":"07 March, 2019","published_at_pretty":"20 March, 2019","updated_at_pretty":"20 March, 2019","created_at":"2019-03-07T02:13:38.000-05:00","published_at":"2019-03-20T07:00:00.000-04:00","updated_at":"2019-03-20T16:27:59.000-04:00","meta_title":"Lynx Roundup, March 20th | Hackers and Slackers","meta_description":"Python doing your taxes!  1970s videophones!  How humans and AI can complement each other!","og_description":"Python doing your taxes!  1970s videophones!  How humans and AI can complement each other!","og_image":"https://hackersandslackers.com/content/images/2019/03/152-2.jpg","og_title":"Lynx Roundup, March 20th","twitter_description":"Python doing your taxes!  1970s videophones!  How humans and AI can complement each other!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/152-1.jpg","twitter_title":"Lynx Roundup, March 20th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://github.com/pyTaxPrep/taxes-2018\n\nhttps://www.slideshare.net/kristw/kristw-datavis-summitfinal\n\nhttps://www.livescience.com/64844-quarks-emc-effect-nucleus.html\n\nhttps://www.thelondoneconomic.com/news/study-suggests-a-key-assumption-of-economic-theory-may-be-wrong/20/02/\n\nhttps://a16z.com/2019/02/22/humanity-ai-better-together/\n\nhttps://paleofuture.gizmodo.com/rare-at-t-videophones-from-the-1970s-go-up-for-auction-1832968162\n\nhttps://physics.aps.org/articles/v12/13","html":"<p></p><p><a href=\"https://github.com/pyTaxPrep/taxes-2018\">https://github.com/pyTaxPrep/taxes-2018</a></p><p><a href=\"https://www.slideshare.net/kristw/kristw-datavis-summitfinal\">https://www.slideshare.net/kristw/kristw-datavis-summitfinal</a></p><p><a href=\"https://www.livescience.com/64844-quarks-emc-effect-nucleus.html\">https://www.livescience.com/64844-quarks-emc-effect-nucleus.html</a></p><p><a href=\"https://www.thelondoneconomic.com/news/study-suggests-a-key-assumption-of-economic-theory-may-be-wrong/20/02/\">https://www.thelondoneconomic.com/news/study-suggests-a-key-assumption-of-economic-theory-may-be-wrong/20/02/</a></p><p><a href=\"https://a16z.com/2019/02/22/humanity-ai-better-together/\">https://a16z.com/2019/02/22/humanity-ai-better-together/</a></p><p><a href=\"https://paleofuture.gizmodo.com/rare-at-t-videophones-from-the-1970s-go-up-for-auction-1832968162\">https://paleofuture.gizmodo.com/rare-at-t-videophones-from-the-1970s-go-up-for-auction-1832968162</a></p><p><a href=\"https://physics.aps.org/articles/v12/13\">https://physics.aps.org/articles/v12/13</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-20th/","uuid":"dc13cacd-3126-4c01-848f-d72c6ba271d5","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c4a2665ce4577adfaf90"}},{"node":{"id":"Ghost__Post__5c82cfe75af763016e85082e","title":"Working With GraphQL Fragments and Mutations","slug":"creating-updating-and-deleting-data-via-graphql-mutations","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/graphql-mutations-1-3.jpg","excerpt":"Make your GraphQL queries more dynamic with Fragments, plus get started with Mutations.","custom_excerpt":"Make your GraphQL queries more dynamic with Fragments, plus get started with Mutations.","created_at_pretty":"08 March, 2019","published_at_pretty":"19 March, 2019","updated_at_pretty":"20 March, 2019","created_at":"2019-03-08T15:26:15.000-05:00","published_at":"2019-03-19T16:34:38.000-04:00","updated_at":"2019-03-20T18:39:27.000-04:00","meta_title":"Working With GraphQL Fragments and Mutations | Hackers and Slackers","meta_description":"Make your GraphQL queries more dynamic with Fragments, plus get started with Mutations.","og_description":"Make your GraphQL queries more dynamic with Fragments, plus get started with Mutations.","og_image":"https://hackersandslackers.com/content/images/2019/03/graphql-mutations-1-3.jpg","og_title":"Working With GraphQL Fragments and Mutations","twitter_description":"Make your GraphQL queries more dynamic with Fragments, plus get started with Mutations.","twitter_image":"https://hackersandslackers.com/content/images/2019/03/graphql-mutations-1-2.jpg","twitter_title":"Working With GraphQL Fragments and Mutations","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"GraphQL","slug":"graphql","description":"Ditch REST endpoints and build APIs that make sense with your workflow. Get started with Prisma or Apollo toolkits, and join the GraphQL bandwagon.","feature_image":null,"meta_description":"Ditch REST endpoints and build APIs that make sense with your workflow. Get started with Prisma or Apollo toolkits, and join the GraphQL bandwagon.","meta_title":"Build a GraphQL API | Hackers and Slackers","visibility":"public"},"tags":[{"name":"GraphQL","slug":"graphql","description":"Ditch REST endpoints and build APIs that make sense with your workflow. Get started with Prisma or Apollo toolkits, and join the GraphQL bandwagon.","feature_image":null,"meta_description":"Ditch REST endpoints and build APIs that make sense with your workflow. Get started with Prisma or Apollo toolkits, and join the GraphQL bandwagon.","meta_title":"Build a GraphQL API | Hackers and Slackers","visibility":"public"},{"name":"Data Engineering","slug":"dataengineering","description":"The systematic collection and transformation of data via the creation of tools and pipelines.","feature_image":null,"meta_description":null,"meta_title":"Data Engineering | Hackers and Slackers","visibility":"public"},{"name":"Software Development","slug":"software-development","description":"General software development principals and tools. Receive insights applicable to building any application.","feature_image":null,"meta_description":"General software development principals and tools. Receive insights applicable to building any application.","meta_title":"Software Development | Hackers and Slackers","visibility":"public"},{"name":"#GraphQL Hype","slug":"graphql-hype","description":"Learn GraphQL syntax and see the reasons why the future of APIs is here to stay. We walk through everything from server/client setup to intricate tricks.","feature_image":"https://hackersandslackers.com/content/images/2019/03/graphqlseries.jpg","meta_description":"Learn GraphQL syntax and see the reasons why the future of APIs is here to stay. We walk through everything from server/client setup to intricate tricks.","meta_title":"GraphQL Hype","visibility":"internal"}],"plaintext":"Last week we encountered a genuine scenario when working with GraphQL clients.\nWhen building real applications consuming data via GraphQL, we usually don't\nknow precisely the query we're going to want to run at runtime. Imagine a user\ncruising through your application, setting preferences, and arriving at core\npieces of functionality under a content which is specific only to them. Say\nwe're building a GrubHub knockoff (we hate profits and love entering\nimpenetrable parts of the market, it's not that uncommon really.) At its core,\nthe information we're serving will always be restaurants; we'll always want to\nreturn things like the restaurant address, name, rating, etc. Because we want\nour app to be intelligent, this means that circumstances in which User 1  makes\na query are vastly different than User 2. Aside from the obvious facts (residing\nin different locales), perhaps there's more metadata we can leverage from User 1\n's longterm app usage, versus User 2  who is a total noob to our knockoff app.\n\nYet, the information we're serving will always be restaurants. There's a core\nquery being reused at the heart of our requests: we need to be dynamic enough to\naccount for the fact that User 1  has checked off 13 different cuisines and\nstrict delivery time windows, whereas User 2  doesn't give a shit. User 2  just\nwants pizza.\n\nThis is where GraphQL Fragments  come in to play. We've already seen how we can\npass variables through our queries to receive contextual data: the next step is\ncreating blocks of reusable code which may never change, which become the\nfoundational building blocks of all future queries.\n\nWhen to Use Fragments\nBack to our JIRA example, I demonstrated precisely the sort of thing one should\nnever do: making more than one GraphQL request to serve a single purpose.\n\nTo recap, we're pulling in JIRA issues to a Kanban board. Our board has 4\ncolumns: one per \"status.\" Here's a god-awful way of hardcoding a query like\nthat:\n\nquery JiraIssuesByStatus($project: String, $status: String) {\n\tbacklog: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n  todo: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n  progress: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n  done: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n }\n\nSeems like a lot of repetition, yeah? What if we could define chunks of queries\nto be reused to simplify things?\n\n# Write your query or mutation here\nfragment JiraFields on jiraIssue {\n  key\n  summary\n  epic_color\n  epic_name\n  status\n  priority_rank\n  priority_url\n  issuetype_name\n  issuetype_url\n  assignee_name\n  assignee_url \n}\n\nquery JiraIssuesViaFragments($project: String) {\n  backlog: jiraIssues(where: {status: \"Backlog\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n  todo: jiraIssues(where: {status: \"To Do\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n  progress: jiraIssues(where: {status: \"In Progress\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n  done: jiraIssues(where: {status: \"Done\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n}\n\nProgress! Instead of reiterating the fields we want to query for each time, we\nset these once.  We do this by creating a fragment  named JiraFields  (naming\nconventions for fragments are totally up to you- these don't relate to\nanything). To make this easier to visualize, let's just look at the parts:\n\nfragment [GivenNameToYourFragment] on [DatamodelToQuery(SINGULAR)] {\n  [fields] \n}\n\nTake note of [nameOfDatamodelToQuery(SINGULAR)]. Our fragment will refer to data\nmodel in the singular syntax  - this is important.\n\nOur New Query Using a Fragment\nAgain, let's simply what we're looking at:\n\nquery [GivenNameToYourQuery]($project: String) {\n  [subsetName]: [DatamodelToQuery(PLURAL)](where: {status: \"Backlog\", project: $project}) {\n    ...[GivenNameToYourFragment]\n  }\n}\n\n * [subsetName]  is the name of the embedded JSON object to be returned in the\n   response. The naming is up to us.\n * [DatamodelToQuery(PLURAL)]  contrasts the singular data model we specified in\n   our fragment.\n * Finally, ...[GivenNameToYourFragment]  is the syntax for dumping a fragment\n   into a query. Yes, the ...  is intentional.\n\nHere's how we managed to get on:\n\nNow we're talkin'.Implementing On The Client Side\nWith the big picture in hand, this is still all theoretical until we have some\nreal code making real dynamic queries. So which GraphQL client tools should we\nuse?!?! Sweet baby Jesus have mercy, I wish I had a straight answer.\n\nAs we all know, Apollo [https://github.com/apollographql/apollo-client]  is\ncrushing the game with their seemingly endless libraries doing... a lot of\nsimilar stuff? Then there's Prisma\n[https://www.prisma.io/docs/prisma-client/basic-data-access/reading-data-JAVASCRIPT-rsc2/]\n, the new hotshot looking to make a buck. But what about this repo\n[https://github.com/smooth-code/fraql]? It seems totally fine, but why won't it\nfreakin work?! And what about this Lokka [https://github.com/kadirahq/lokka] \nthing? Also, apparently you can just use node-fetch\n[https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher] \n anyway?\n\nFor somebody looking for simplicity, this gets very frustrating. Most clients\nare immediately concerned with integrating with React as fast as possible\n(totally understandable), but a small-town country boy like me just wants to\nstart with simple. I'm just trying to write a god damn tutorial!\n\nAnyway. The GraphQL ecosystem is was it is: we'd be foolish to think anything\nrelated to JavaScript could be cohesive or straightforward. Instead of wrestling\nwith that reality, now's as good a time as ever to move on to the part of\nGraphQL we've failed to speak of: modifying data.\n\nGraphQL Mutation Cheatsheet\nAny form of creating, changing, or deleting data in GraphQL falls under the\numbrella of mutations. The structure is similar to queries, except that we take\ndata in (presumably through variables) and spit out whichever fields you'd like\nto see as a result of that.\n\nCreating Records\nA functioning \"create\" mutation with the resulting response:\n\nSimple enough.And the mutation itself, just in case anybody is copy/pasting out\nthere:\n\nmutation CreateJiraIssue($key: String!, $summary: String!, $status: String!) {\n  createjiraissues(data: {key: $key, status: $status, summary: $summary}) {\n    key\n    status\n    summary\n  }\n}\n\nUpdating Records\nWe can update records (aka nodes) by specifying the target node using where: {},\nand the data to be updated within data: {}\n\nSyntax is just like creating nodes, but with an added where:{} statement.mutation UpdateJIRAIssue($summary: String, $status: String) {\n  updatejiraIssue(data: {status: $status, summary: $summary}, where:{key: \"HACK-10\"}) {\n    key\n    status\n    summary\n    project\n    issuetype_name\n    epic_name\n  }\n}\n\nDeleting Records\nYou can even specify which fields you want returned from the node you're in the\nact of ruthlessly murdering! \n\nAnd with its final breath, the node shouted out \"Hack-9999, Backlog, Test issue\nwith GraphQL\" to please its master once last time.mutation DeleteJiraIssue ($key: String!){\n    deletejiraissues(where: {key: $key}){\n    key\n    status\n    summary\n  }\n}\n\nEnough For Now\nHopefully, I'm not the only one to have bee deceived by the simplicity of\nGraphQL's syntax at first glance. The minimalism of GraphQL queries and\nmutations would lead one to believe that they're simple to understand right off\nthe bat. The problem with that logic is the syntax is so  simplistic, that\nthere's hardly any way of telling what nearly identical queries or mutations\nmight do from one character to the next. Even in JSON, the combination of \nexplicit quotations, key:value relationships, and  comma-separation  affords us\na lot of inferred knowledge we take for granted.\n\nI'm not saying GraphQL is wrong, or painstakingly difficult to pick up, as much\nas it can easily be frustrating to newcomers (and rightfully so). As long as\npeople keep reading, I'll keep posting, so let's chip away at this thing week by\nweek.","html":"<p>Last week we encountered a genuine scenario when working with GraphQL clients. When building real applications consuming data via GraphQL, we usually don't know precisely the query we're going to want to run at runtime. Imagine a user cruising through your application, setting preferences, and arriving at core pieces of functionality under a content which is specific only to them. Say we're building a GrubHub knockoff (we hate profits and love entering impenetrable parts of the market, it's not that uncommon really.) At its core, the information we're serving will always be restaurants; we'll always want to return things like the restaurant address, name, rating, etc. Because we want our app to be intelligent, this means that circumstances in which <strong>User 1</strong> makes a query are vastly different than <strong>User 2</strong>. Aside from the obvious facts (residing in different locales), perhaps there's more metadata we can leverage from <strong>User 1</strong>'s longterm app usage, versus <strong>User 2</strong> who is a total noob to our knockoff app.</p><p>Yet, <em>the information we're serving will always be restaurants</em>. There's a core query being reused at the heart of our requests: we need to be dynamic enough to account for the fact that <strong>User 1</strong> has checked off 13 different cuisines and strict delivery time windows, whereas <strong>User 2</strong> doesn't give a shit. <strong>User 2</strong> just wants pizza.</p><p>This is where GraphQL <em><strong>Fragments</strong></em> come in to play. We've already seen how we can pass variables through our queries to receive contextual data: the next step is creating blocks of reusable code which may never change, which become the foundational building blocks of all future queries.</p><h2 id=\"when-to-use-fragments\">When to Use Fragments</h2><p>Back to our JIRA example, I demonstrated precisely the sort of thing one should never do: making more than one GraphQL request to serve a single purpose.</p><p>To recap, we're pulling in JIRA issues to a Kanban board. Our board has 4 columns: one per \"status.\" Here's a god-awful way of hardcoding a query like that:</p><!--kg-card-begin: code--><pre><code>query JiraIssuesByStatus($project: String, $status: String) {\n\tbacklog: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n  todo: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n  progress: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n  done: jiraIssues(where: {project: $project, status: $status}, orderBy: updated_DESC, first: 6) {\n\tkey\n    summary\n    epic_color\n    epic_name\n    status\n    priority_rank\n    priority_url\n    issuetype_name\n    issuetype_url\n    assignee_name\n    assignee_url \n   }\n }</code></pre><!--kg-card-end: code--><p>Seems like a lot of repetition, yeah? What if we could define chunks of queries to be reused to simplify things?</p><!--kg-card-begin: code--><pre><code># Write your query or mutation here\nfragment JiraFields on jiraIssue {\n  key\n  summary\n  epic_color\n  epic_name\n  status\n  priority_rank\n  priority_url\n  issuetype_name\n  issuetype_url\n  assignee_name\n  assignee_url \n}\n\nquery JiraIssuesViaFragments($project: String) {\n  backlog: jiraIssues(where: {status: \"Backlog\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n  todo: jiraIssues(where: {status: \"To Do\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n  progress: jiraIssues(where: {status: \"In Progress\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n  done: jiraIssues(where: {status: \"Done\", project: $project}, orderBy: updated_DESC, first: 6) {\n    ...JiraFields\n  }\n}</code></pre><!--kg-card-end: code--><p>Progress! Instead of reiterating the fields we want to query for each time, we set these <em>once.</em> We do this by creating a <code>fragment</code> named <strong>JiraFields</strong> (naming conventions for fragments are totally up to you- these don't relate to anything). To make this easier to visualize, let's just look at the parts:</p><!--kg-card-begin: code--><pre><code>fragment [GivenNameToYourFragment] on [DatamodelToQuery(SINGULAR)] {\n  [fields] \n}</code></pre><!--kg-card-end: code--><p>Take note of <code>[nameOfDatamodelToQuery(SINGULAR)]</code>. Our fragment will refer to data model in the singular syntax  - this is important.</p><h3 id=\"our-new-query-using-a-fragment\">Our New Query Using a Fragment</h3><p>Again, let's simply what we're looking at:</p><!--kg-card-begin: code--><pre><code>query [GivenNameToYourQuery]($project: String) {\n  [subsetName]: [DatamodelToQuery(PLURAL)](where: {status: \"Backlog\", project: $project}) {\n    ...[GivenNameToYourFragment]\n  }\n}</code></pre><!--kg-card-end: code--><ul><li><code>[subsetName]</code> is the name of the embedded JSON object to be returned in the response. The naming is up to us.</li><li><code>[DatamodelToQuery(PLURAL)]</code> contrasts the singular data model we specified in our fragment.</li><li>Finally, <code>...[GivenNameToYourFragment]</code> is the syntax for dumping a fragment into a query. Yes, the <code>...</code> is intentional.</li></ul><p>Here's how we managed to get on:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/03/Screen-Shot-2019-03-18-at-8.15.19-AM.png\" class=\"kg-image\"><figcaption>Now we're talkin'.</figcaption></figure><!--kg-card-end: image--><h2 id=\"implementing-on-the-client-side\">Implementing On The Client Side</h2><p>With the big picture in hand, this is still all theoretical until we have some real code making real dynamic queries. So which GraphQL client tools should we use?!?! Sweet baby Jesus have mercy, I wish I had a straight answer.</p><p>As we all know, <a href=\"https://github.com/apollographql/apollo-client\"><strong>Apollo</strong></a> is crushing the game with their seemingly endless libraries doing... a lot of similar stuff? Then there's <strong><a href=\"https://www.prisma.io/docs/prisma-client/basic-data-access/reading-data-JAVASCRIPT-rsc2/\">Prisma</a></strong>, the new hotshot looking to make a buck. But what about <a href=\"https://github.com/smooth-code/fraql\"><strong>this repo</strong></a>? It seems totally fine, but why won't it freakin work?! And what about this <strong><a href=\"https://github.com/kadirahq/lokka\">Lokka</a></strong> thing? Also, <a href=\"https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher\">apparently you can just use <strong>node-fetch</strong></a> anyway?</p><p>For somebody looking for simplicity, this gets very frustrating. Most clients are immediately concerned with integrating with React as fast as possible (totally understandable), but a small-town country boy like me just wants to start with simple. I'm just trying to write a god damn tutorial!</p><p>Anyway. The GraphQL ecosystem is was it is: we'd be foolish to think anything related to JavaScript could be cohesive or straightforward. Instead of wrestling with that reality, now's as good a time as ever to move on to the part of GraphQL we've failed to speak of: modifying data.</p><h2 id=\"graphql-mutation-cheatsheet\">GraphQL Mutation Cheatsheet</h2><p>Any form of creating, changing, or deleting data in GraphQL falls under the umbrella of mutations. The structure is similar to queries, except that we take data in (presumably through variables) and spit out whichever fields you'd like to see as a result of that.</p><h3 id=\"creating-records\">Creating Records</h3><p>A functioning \"create\" mutation with the resulting response:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/03/Screen-Shot-2019-03-08-at-4.02.41-PM.png\" class=\"kg-image\"><figcaption>Simple enough.</figcaption></figure><!--kg-card-end: image--><p>And the mutation itself, just in case anybody is copy/pasting out there:</p><!--kg-card-begin: code--><pre><code>mutation CreateJiraIssue($key: String!, $summary: String!, $status: String!) {\n  createjiraissues(data: {key: $key, status: $status, summary: $summary}) {\n    key\n    status\n    summary\n  }\n}</code></pre><!--kg-card-end: code--><h3 id=\"updating-records\">Updating Records</h3><p>We can update records (aka nodes) by specifying the target node using <code>where: {}</code>, and the data to be updated within <code>data: {}</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/03/Screen-Shot-2019-03-19-at-1.23.28-PM.png\" class=\"kg-image\"><figcaption>Syntax is just like creating nodes, but with an added where:{} statement.</figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: code--><pre><code>mutation UpdateJIRAIssue($summary: String, $status: String) {\n  updatejiraIssue(data: {status: $status, summary: $summary}, where:{key: \"HACK-10\"}) {\n    key\n    status\n    summary\n    project\n    issuetype_name\n    epic_name\n  }\n}</code></pre><!--kg-card-end: code--><h3 id=\"deleting-records\">Deleting Records</h3><p>You can even specify which fields you want returned from the node you're in the act of ruthlessly murdering! </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/03/Screen-Shot-2019-03-08-at-4.02.20-PM.png\" class=\"kg-image\"><figcaption>And with its final breath, the node shouted out \"Hack-9999, Backlog, Test issue with GraphQL\" to please its master once last time.</figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: code--><pre><code>mutation DeleteJiraIssue ($key: String!){\n    deletejiraissues(where: {key: $key}){\n    key\n    status\n    summary\n  }\n}</code></pre><!--kg-card-end: code--><h3 id=\"enough-for-now\">Enough For Now</h3><p>Hopefully, I'm not the only one to have bee deceived by the simplicity of GraphQL's syntax at first glance. The minimalism of GraphQL queries and mutations would lead one to believe that they're simple to understand right off the bat. The problem with that logic is the syntax is <em>so</em> simplistic, that there's hardly any way of telling what nearly identical queries or mutations might do from one character to the next. Even in JSON, the combination of <strong>explicit quotations</strong>, <strong>key:value relationships</strong>, and<strong> comma-separation</strong> affords us a lot of inferred knowledge we take for granted.</p><p>I'm not saying GraphQL is wrong, or painstakingly difficult to pick up, as much as it can easily be frustrating to newcomers (and rightfully so). As long as people keep reading, I'll keep posting, so let's chip away at this thing week by week.</p><p></p>","url":"https://hackersandslackers.com/creating-updating-and-deleting-data-via-graphql-mutations/","uuid":"a042692b-1812-49a1-a2fb-c0bd97973edf","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c82cfe75af763016e85082e"}},{"node":{"id":"Ghost__Post__5c80c429665ce4577adfaf86","title":"Lynx Roundup, March 19th","slug":"lynx-roundup-march-19th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/151.jpg","excerpt":"Graphing your hiccups!  When to use Python's data stack vs SQL!  Bots that write & review Facebook code!  ","custom_excerpt":"Graphing your hiccups!  When to use Python's data stack vs SQL!  Bots that write & review Facebook code!  ","created_at_pretty":"07 March, 2019","published_at_pretty":"19 March, 2019","updated_at_pretty":"19 March, 2019","created_at":"2019-03-07T02:11:37.000-05:00","published_at":"2019-03-19T05:32:00.000-04:00","updated_at":"2019-03-19T05:32:37.000-04:00","meta_title":"Lynx Roundup, March 19th | Hackers and Slackers","meta_description":"Graphing your hiccups!  When to use Python's data stack vs SQL!  Bots that write & review Facebook code!  ","og_description":"Graphing your hiccups!  When to use Python's data stack vs SQL!  Bots that write & review Facebook code!  ","og_image":"https://hackersandslackers.com/content/images/2019/03/151.jpg","og_title":"Lynx Roundup, March 19th","twitter_description":"Graphing your hiccups!  When to use Python's data stack vs SQL!  Bots that write & review Facebook code!  ","twitter_image":"https://hackersandslackers.com/content/images/2019/03/151.jpg","twitter_title":"Lynx Roundup, March 19th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttps://www.reddit.com/r/dataisbeautiful/comments/aotbmd/i_got_a_case_of_the_hiccups_last_night_so_i/\n\nhttps://www.infoq.com/presentations/architectures-panel\n\nhttps://towardsdatascience.com/python-vs-sql-comparison-for-data-pipelines-8ca727b34032\n\nhttps://spectrum.ieee.org/tech-talk/computing/software/meet-the-bots-that-review-and-write-snippets-of-facebooks-code\n\nhttps://ieeexplore.ieee.org/document/6030491\n\nhttps://arxiv.org/pdf/1902.01046.pdf\n\nhttps://medium.com/@ThatMrE/a-guide-to-diybio-updated-2019-abd0956cdf74","html":"<p></p><p><a href=\"https://www.reddit.com/r/dataisbeautiful/comments/aotbmd/i_got_a_case_of_the_hiccups_last_night_so_i/\">https://www.reddit.com/r/dataisbeautiful/comments/aotbmd/i_got_a_case_of_the_hiccups_last_night_so_i/</a></p><p><a href=\"https://www.infoq.com/presentations/architectures-panel\">https://www.infoq.com/presentations/architectures-panel</a></p><p><a href=\"https://towardsdatascience.com/python-vs-sql-comparison-for-data-pipelines-8ca727b34032\">https://towardsdatascience.com/python-vs-sql-comparison-for-data-pipelines-8ca727b34032</a></p><p><a href=\"https://spectrum.ieee.org/tech-talk/computing/software/meet-the-bots-that-review-and-write-snippets-of-facebooks-code\">https://spectrum.ieee.org/tech-talk/computing/software/meet-the-bots-that-review-and-write-snippets-of-facebooks-code</a></p><p><a href=\"https://ieeexplore.ieee.org/document/6030491\">https://ieeexplore.ieee.org/document/6030491</a></p><p><a href=\"https://arxiv.org/pdf/1902.01046.pdf\">https://arxiv.org/pdf/1902.01046.pdf</a></p><p><a href=\"https://medium.com/@ThatMrE/a-guide-to-diybio-updated-2019-abd0956cdf74\">https://medium.com/@ThatMrE/a-guide-to-diybio-updated-2019-abd0956cdf74</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-19th/","uuid":"2bcd286b-249e-41e2-b5f2-86d7aa8ce1bc","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c429665ce4577adfaf86"}},{"node":{"id":"Ghost__Post__5c80c3c8665ce4577adfaf7c","title":"Lynx Roundup, March 18th","slug":"lynx-roundup-march-18th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/03/lynx26.jpg","excerpt":"Functors!  Word embeddings!  Slides for Oxford stats classes!","custom_excerpt":"Functors!  Word embeddings!  Slides for Oxford stats classes!","created_at_pretty":"07 March, 2019","published_at_pretty":"18 March, 2019","updated_at_pretty":"18 March, 2019","created_at":"2019-03-07T02:10:00.000-05:00","published_at":"2019-03-18T05:39:00.000-04:00","updated_at":"2019-03-18T05:39:05.000-04:00","meta_title":"Lynx Roundup, March 18th | Hackers and Slackers","meta_description":"Functors!  Word embeddings!  Slides for Oxford stats classes!","og_description":"Functors!  Word embeddings!  Slides for Oxford stats classes!","og_image":"https://hackersandslackers.com/content/images/2019/03/lynx26.jpg","og_title":"Lynx Roundup, March 18th","twitter_description":"Functors!  Word embeddings!  Slides for Oxford stats classes!","twitter_image":"https://hackersandslackers.com/content/images/2019/03/lynx26.jpg","twitter_title":"Lynx Roundup, March 18th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"\n\nhttp://tulpinteractive.com/on-time-every-time/\n\nhttps://www.stats.ox.ac.uk/student-resources/bammath/course-materials/\n\nhttps://www.geodose.com/2019/01/realtime-flight-tracking-pandas-bokeh-python.html\n\nhttps://lilianweng.github.io/lil-log/2017/10/15/learning-word-embedding.html\n\nhttps://www.matthewgerstman.com/what-the-functor/\n\nhttps://veekaybee.github.io/2018/09/24/the-case-of-the-broken-lambda/\n\nhttps://towardsdatascience.com/accelerating-deep-learning-using-distributed-sgd-an-overview-e66c4aee1a0c","html":"<p></p><p><a href=\"http://tulpinteractive.com/on-time-every-time/\">http://tulpinteractive.com/on-time-every-time/</a></p><p><a href=\"https://www.stats.ox.ac.uk/student-resources/bammath/course-materials/\">https://www.stats.ox.ac.uk/student-resources/bammath/course-materials/</a></p><p><a href=\"https://www.geodose.com/2019/01/realtime-flight-tracking-pandas-bokeh-python.html\">https://www.geodose.com/2019/01/realtime-flight-tracking-pandas-bokeh-python.html</a></p><p><a href=\"https://lilianweng.github.io/lil-log/2017/10/15/learning-word-embedding.html\">https://lilianweng.github.io/lil-log/2017/10/15/learning-word-embedding.html</a></p><p><a href=\"https://www.matthewgerstman.com/what-the-functor/\">https://www.matthewgerstman.com/what-the-functor/</a></p><p><a href=\"https://veekaybee.github.io/2018/09/24/the-case-of-the-broken-lambda/\">https://veekaybee.github.io/2018/09/24/the-case-of-the-broken-lambda/</a></p><p><a href=\"https://towardsdatascience.com/accelerating-deep-learning-using-distributed-sgd-an-overview-e66c4aee1a0c\">https://towardsdatascience.com/accelerating-deep-learning-using-distributed-sgd-an-overview-e66c4aee1a0c</a></p>","url":"https://hackersandslackers.com/lynx-roundup-march-18th/","uuid":"6a8c3650-be6f-4f3e-9e5e-dd60d8671cb3","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5c80c3c8665ce4577adfaf7c"}}]}},"pageContext":{"pageNumber":1,"humanPageNumber":2,"skip":12,"limit":12,"numberOfPages":33,"previousPagePath":"/","nextPagePath":"/page/3"}}