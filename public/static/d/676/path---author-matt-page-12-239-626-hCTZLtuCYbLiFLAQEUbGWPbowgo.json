{"data":{"ghostAuthor":{"slug":"matt","name":"Matthew Alhonte","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","cover_image":"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/q_auto/v1/images/lynxcover_o.jpg","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","location":"Center of the Universe","website":null,"twitter":"@MattAlhonte","facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867370b","title":"Lynx Roundup, September 27th","slug":"lynx-roundup-september-27th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/102-1.jpg","excerpt":"How to contribute to Open Source!  Tracking illegal fishing!  Flat Earth Math!","custom_excerpt":"How to contribute to Open Source!  Tracking illegal fishing!  Flat Earth Math!","created_at_pretty":"27 September, 2018","published_at_pretty":"27 September, 2018","updated_at_pretty":"10 April, 2019","created_at":"2018-09-26T21:45:10.000-04:00","published_at":"2018-09-27T07:00:00.000-04:00","updated_at":"2019-04-10T10:43:12.000-04:00","meta_title":"Lynx Roundup, September 27th | Hackers and Slackers","meta_description":"How to contribute to Open Source!  Tracking illegal fishing!  Flat Earth Math!","og_description":"How to contribute to Open Source!  Tracking illegal fishing!  Flat Earth Math!","og_image":"https://hackersandslackers.com/content/images/2019/04/102-1-2.jpg","og_title":"Lynx Roundup, September 27th","twitter_description":"How to contribute to Open Source!  Tracking illegal fishing!  Flat Earth Math!","twitter_image":"https://hackersandslackers.com/content/images/2019/04/102-1-1.jpg","twitter_title":"Lynx Roundup, September 27th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://medium.com/@altjsus/how-to-start-to-contribute-to-opensource-properly-step-1-6fa3c19749b3\n\nhttps://www.forbes.com/sites/rachelcrowell/2018/08/31/researchers-solve-first-problem-from-mathematical-physics-wish-list/\n\nhttps://eos.org/articles/illegal-seafood-supply-chains-can-now-be-tracked-by-satellite\n\nhttps://neurosciencenews.com/neurobiology-thinking-9772/\n\nhttps://medium.com/sameer-saxena/python-implementation-of-machine-learning-course-d7ef6073bd33\n\nhttps://www.r-bloggers.com/flat-earth-mathematics-in-the-r-language/\n\nhttps://www.datainnovation.org/2018/05/how-policymakers-can-foster-algorithmic-accountability/","html":"<p></p><p><a href=\"https://medium.com/@altjsus/how-to-start-to-contribute-to-opensource-properly-step-1-6fa3c19749b3\">https://medium.com/@altjsus/how-to-start-to-contribute-to-opensource-properly-step-1-6fa3c19749b3</a></p><p><a href=\"https://www.forbes.com/sites/rachelcrowell/2018/08/31/researchers-solve-first-problem-from-mathematical-physics-wish-list/\">https://www.forbes.com/sites/rachelcrowell/2018/08/31/researchers-solve-first-problem-from-mathematical-physics-wish-list/</a></p><p><a href=\"https://eos.org/articles/illegal-seafood-supply-chains-can-now-be-tracked-by-satellite\">https://eos.org/articles/illegal-seafood-supply-chains-can-now-be-tracked-by-satellite</a></p><p><a href=\"https://neurosciencenews.com/neurobiology-thinking-9772/\">https://neurosciencenews.com/neurobiology-thinking-9772/</a></p><p><a href=\"https://medium.com/sameer-saxena/python-implementation-of-machine-learning-course-d7ef6073bd33\">https://medium.com/sameer-saxena/python-implementation-of-machine-learning-course-d7ef6073bd33</a></p><p><a href=\"https://www.r-bloggers.com/flat-earth-mathematics-in-the-r-language/\">https://www.r-bloggers.com/flat-earth-mathematics-in-the-r-language/</a></p><p><a href=\"https://www.datainnovation.org/2018/05/how-policymakers-can-foster-algorithmic-accountability/\">https://www.datainnovation.org/2018/05/how-policymakers-can-foster-algorithmic-accountability/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-27th/","uuid":"0f1b12e4-dbe4-4c54-8280-c9b1a1151ff3","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5bac36265ee4c83af27dda73"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb867370a","title":"Lynx Roundup, September 26th","slug":"lynx-roundup-september-26th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/89@2x.jpg","excerpt":"Data Science at Uber!  Math & Music!  ROC Curves & Precision/Recall Curves!","custom_excerpt":"Data Science at Uber!  Math & Music!  ROC Curves & Precision/Recall Curves!","created_at_pretty":"27 September, 2018","published_at_pretty":"27 September, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-26T21:40:47.000-04:00","published_at":"2018-09-26T21:42:50.000-04:00","updated_at":"2018-10-16T23:40:50.000-04:00","meta_title":"Lynx Roundup, September 26th | Hackers and Slackers","meta_description":"Data Science at Uber!  Math & Music!  ROC Curves & Precision/Recall Curves!","og_description":"Data Science at Uber!  Math & Music!  ROC Curves & Precision/Recall Curves!","og_image":"https://hackersandslackers.com/content/images/lynx/89@2x.jpg","og_title":"Lynx Roundup, September 26th","twitter_description":"Data Science at Uber!  Math & Music!  ROC Curves & Precision/Recall Curves!","twitter_image":"https://hackersandslackers.com/content/images/lynx/89@2x.jpg","twitter_title":"Lynx Roundup, September 26th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://github.com/iodide-project/pyodide\n\nhttps://github.com/ironmussa/Optimus\n\nhttps://eng.uber.com/databook/\n\nhttps://arxiv.org/abs/1808.03322\n\nhttps://machinelearningmastery.com/roc-curves-and-precision-recall-curves-for-classification-in-python/\n\nhttps://enlight.nyc/random-forest\n\nhttps://blogs.scientificamerican.com/roots-of-unity/how-math-helped-me-learn-early-music/","html":"<p></p><p><a href=\"https://github.com/iodide-project/pyodide\">https://github.com/iodide-project/pyodide</a></p><p><a href=\"https://github.com/ironmussa/Optimus\">https://github.com/ironmussa/Optimus</a></p><p><a href=\"https://eng.uber.com/databook/\">https://eng.uber.com/databook/</a></p><p><a href=\"https://arxiv.org/abs/1808.03322\">https://arxiv.org/abs/1808.03322</a></p><p><a href=\"https://machinelearningmastery.com/roc-curves-and-precision-recall-curves-for-classification-in-python/\">https://machinelearningmastery.com/roc-curves-and-precision-recall-curves-for-classification-in-python/</a></p><p><a href=\"https://enlight.nyc/random-forest\">https://enlight.nyc/random-forest</a></p><p><a href=\"https://blogs.scientificamerican.com/roots-of-unity/how-math-helped-me-learn-early-music/\">https://blogs.scientificamerican.com/roots-of-unity/how-math-helped-me-learn-early-music/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-26th/","uuid":"e39b45ff-135f-4570-b821-78d2a706350a","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5bac351f5ee4c83af27dda70"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673708","title":"Lynx Roundup, September 25th","slug":"lynx-roundup-september-25th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/114@2x.jpg","excerpt":"Cracked software!  Sophisticated software!  Pandas tricks!","custom_excerpt":"Cracked software!  Sophisticated software!  Pandas tricks!","created_at_pretty":"19 September, 2018","published_at_pretty":"25 September, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-19T01:43:24.000-04:00","published_at":"2018-09-25T07:00:00.000-04:00","updated_at":"2018-10-17T08:31:43.000-04:00","meta_title":"Lynx Roundup, September 25th | Hackers and Slackers","meta_description":"Cracked software!  Sophisticated software!  Pandas tricks!","og_description":"Cracked software!  Sophisticated software!  Pandas tricks!","og_image":"https://hackersandslackers.com/content/images/lynx/114@2x.jpg","og_title":"Lynx Roundup, September 25th","twitter_description":"Cracked software!  Sophisticated software!  Pandas tricks!","twitter_image":"https://hackersandslackers.com/content/images/lynx/114@2x.jpg","twitter_title":"Lynx Roundup, September 25th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.quora.com/How-are-cracked-versions-of-software-created-and-why-are-developers-not-able-to-prevent-it\n\n\n\nhttps://www.quora.com/What-is-the-most-sophisticated-piece-of-software-code-ever-written\n\n\n\nhttps://www.quora.com/What-are-the-main-differences-between-a-principal-component-analysis-and-a-factor-analysis\n\n\n\nhttps://peerj.com/articles/5518/\n\n\n\nhttps://realpython.com/python-pandas-tricks/\n\n\n\nhttps://github.com/trekhleb/learn-python/blob/master/README.md\n\n\n\nOur beautiful fellow workers are out here with comrades from @techworkersco\n[https://twitter.com/techworkersco?ref_src=twsrc%5Etfw], @MobToMeltICE\n[https://twitter.com/MobToMeltICE?ref_src=twsrc%5Etfw], and others in front of \n@tableau [https://twitter.com/tableau?ref_src=twsrc%5Etfw]  to ask them to stop\nworking with ICE! pic.twitter.com/jZwQYdsdkh [https://t.co/jZwQYdsdkh]\n\n— Seattle IWW (@SeattleIWW) August 30, 2018\n[https://twitter.com/SeattleIWW/status/1035244554801176576?ref_src=twsrc%5Etfw]","html":"<p></p><p><a href=\"https://www.quora.com/How-are-cracked-versions-of-software-created-and-why-are-developers-not-able-to-prevent-it\">https://www.quora.com/How-are-cracked-versions-of-software-created-and-why-are-developers-not-able-to-prevent-it</a></p><p></p><p><a href=\"https://www.quora.com/What-is-the-most-sophisticated-piece-of-software-code-ever-written\">https://www.quora.com/What-is-the-most-sophisticated-piece-of-software-code-ever-written</a></p><p></p><p><a href=\"https://www.quora.com/What-are-the-main-differences-between-a-principal-component-analysis-and-a-factor-analysis\">https://www.quora.com/What-are-the-main-differences-between-a-principal-component-analysis-and-a-factor-analysis</a></p><p></p><p><a href=\"https://peerj.com/articles/5518/\">https://peerj.com/articles/5518/</a></p><p></p><p><a href=\"https://realpython.com/python-pandas-tricks/\">https://realpython.com/python-pandas-tricks/</a></p><p></p><p><a href=\"https://github.com/trekhleb/learn-python/blob/master/README.md\">https://github.com/trekhleb/learn-python/blob/master/README.md</a></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Our beautiful fellow workers are out here with comrades from <a href=\"https://twitter.com/techworkersco?ref_src=twsrc%5Etfw\">@techworkersco</a>, <a href=\"https://twitter.com/MobToMeltICE?ref_src=twsrc%5Etfw\">@MobToMeltICE</a>, and others in front of <a href=\"https://twitter.com/tableau?ref_src=twsrc%5Etfw\">@tableau</a> to ask them to stop working with ICE! <a href=\"https://t.co/jZwQYdsdkh\">pic.twitter.com/jZwQYdsdkh</a></p>&mdash; Seattle IWW (@SeattleIWW) <a href=\"https://twitter.com/SeattleIWW/status/1035244554801176576?ref_src=twsrc%5Etfw\">August 30, 2018</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure>","url":"https://hackersandslackers.com/lynx-roundup-september-25th/","uuid":"1d2d5829-1fec-42c0-8407-5b15a347940e","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5ba1e1fc4cb12061ced46c9d"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673709","title":"Using Random Forests for Feature Selection with Categorical Features","slug":"random-forests-for-feature-selection","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/09/codesnippertsomething@2x.jpg","excerpt":"Python helper functions for adding feature importance, and displaying them as a single variable.","custom_excerpt":"Python helper functions for adding feature importance, and displaying them as a single variable.","created_at_pretty":"24 September, 2018","published_at_pretty":"24 September, 2018","updated_at_pretty":"14 April, 2019","created_at":"2018-09-23T20:23:32.000-04:00","published_at":"2018-09-24T07:30:00.000-04:00","updated_at":"2019-04-14T14:35:02.000-04:00","meta_title":"Using Random Forests for Feature Selection | Hackers and Slackers","meta_description":"Helper functions in Python to gauge  importance of Categorical Features for Random Forests in Scikit-learn","og_description":"Helper functions in Python to gauge  importance of Categorical Features for Random Forests in Scikit-learn","og_image":"https://hackersandslackers.com/content/images/2018/09/codesnippertsomething@2x.jpg","og_title":"Using Random Forests for Feature Selection","twitter_description":"Helper functions in Python to gauge  importance of Categorical Features for Random Forests in Scikit-learn","twitter_image":"https://hackersandslackers.com/content/images/2018/09/codesnippertsomething@2x.jpg","twitter_title":"Using Random Forests for Feature Selection","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},"tags":[{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"},{"name":"Machine Learning","slug":"machine-learning","description":"The latest developments in machine learning tools and technology available to data scientists.","feature_image":null,"meta_description":"The latest developments in machine learning tools and technology available to data scientists.","meta_title":"Machine Learning | Hackers and Slackers","visibility":"public"},{"name":"#Code Snippet Corner","slug":"code-snippet-corner","description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o_o.jpg","meta_description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","meta_title":"Python Code Snippet Corner","visibility":"internal"}],"plaintext":"Notebook here\n[https://github.com/mattalhonte/random_forest_categorical_feature_imprtance/blob/master/Categorical%20Feature%20Importance.ipynb]\n.  Helper functions here\n[https://github.com/mattalhonte/random_forest_categorical_feature_imprtance/blob/master/foresthelpers/featureimportance.py]\n.\n\nOne of the best features of Random Forests is that it has built-in Feature\nSelection.  Explicability is one of the things we often lose when we go from\ntraditional statistics to Machine Learning, but Random Forests lets us actually\nget some insight into our dataset instead of just having to treat our model as a\nblack box.\n\nOne problem, though - it doesn't work that well for categorical features.  Since\nyou'll generally have to One-Hot Encode a categorical feature (for instance,\nturn something with 7 categories into 7 variables that are a \"True/False\"),\nyou'll wind up with a bunch of small features.  This gets tough to read,\nespecially if you're dealing with a lot of categories.  It also makes that\nfeature look less important than it is - rather than appearing near the top,\nyou'll maybe have 17 weak-seeming features near the bottom - which gets worse if\nyou're filtering it so that you only see features above a certain threshold.\n\nSoo, here's some helper functions for adding up their importance and displaying\nthem as a single variable.  I did have to \"reinvent the wheel\" a bit and roll my\nmy own One-Hot function, rather than using Scikit's builtin one.\n\nFirst, let's grab a dataset.  I'm using this\n[https://www.kaggle.com/c/avazu-ctr-prediction]  Kaggle dataset because it has a\ngood number of categorical predictors.  I'm also only using the first 500 rows\nbecause the whole dataset is like ~ 1 GB.\n\nimport pandas as pd\n\ndf = pd.read_csv(\"train.csv\", \n                   nrows=500)\n\n\nLet's just use the Categorical variables as our predictors because that's what\nwe're focusing on, but in actual usage you don't have to make them the same.\n\npredVars = [\n    \"site_category\",\n    \"app_category\",\n    \"device_model\",\n    \"device_type\",\n    \"device_conn_type\",\n]\n\nX = (df\n     .dropna()\n     [predVars]\n     .pipe((fh.oneHotEncodeMultipleVars, \"df\"),\n           varList = predVars) #Change this if you don't have solely categoricals\n    )\n\nlabels = X.columns\n\ny = (df\n     .dropna()\n     [\"click\"]\n     .values)\n\n\nLet's use log_loss  as our metric, because I saw this\n[https://blog.myyellowroad.com/using-categorical-data-in-machine-learning-with-python-from-dummy-variables-to-deep-category-66041f734512] \n blog post that used it for this dataset.\n\nfrom sklearn.ensemble import RandomForestClassifierfrom sklearn.metrics import log_loss\nfi.displayFeatureImportances(X,y,labels,log_loss,{\"n_estimators\": 18,\"oob_score\": True},)\nScore is 3.6297600214665064 \n\n\nVariable\n Importance\n 0\n device_model\n 0.843122\n 1\n site_category\n 0.083392\n 2\n app_category\n 0.037216\n 3\n device_type\n 0.025057\n 4\n device_conn_type\n 0.011213","html":"<p><em>Notebook <a href=\"https://github.com/mattalhonte/random_forest_categorical_feature_imprtance/blob/master/Categorical%20Feature%20Importance.ipynb\">here</a>.  Helper functions <a href=\"https://github.com/mattalhonte/random_forest_categorical_feature_imprtance/blob/master/foresthelpers/featureimportance.py\">here</a>.</em></p><p>One of the best features of Random Forests is that it has built-in Feature Selection.  Explicability is one of the things we often lose when we go from traditional statistics to Machine Learning, but Random Forests lets us actually get some insight into our dataset instead of just having to treat our model as a black box.</p><p>One problem, though - it doesn't work that well for categorical features.  Since you'll generally have to One-Hot Encode a categorical feature (for instance, turn something with 7 categories into 7 variables that are a \"True/False\"), you'll wind up with a bunch of small features.  This gets tough to read, especially if you're dealing with a lot of categories.  It also makes that feature look less important than it is - rather than appearing near the top, you'll maybe have 17 weak-seeming features near the bottom - which gets worse if you're filtering it so that you only see features above a certain threshold.</p><p>Soo, here's some helper functions for adding up their importance and displaying them as a single variable.  I did have to \"reinvent the wheel\" a bit and roll my my own One-Hot function, rather than using Scikit's builtin one.</p><p>First, let's grab a dataset.  I'm using <a href=\"https://www.kaggle.com/c/avazu-ctr-prediction\">this</a> Kaggle dataset because it has a good number of categorical predictors.  I'm also only using the first 500 rows because the whole dataset is like ~ 1 GB.</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">import pandas as pd\n\ndf = pd.read_csv(&quot;train.csv&quot;, \n                   nrows=500)\n</code></pre>\n<!--kg-card-end: markdown--><p>Let's just use the Categorical variables as our predictors because that's what we're focusing on, but in actual usage you don't have to make them the same.</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">predVars = [\n    &quot;site_category&quot;,\n    &quot;app_category&quot;,\n    &quot;device_model&quot;,\n    &quot;device_type&quot;,\n    &quot;device_conn_type&quot;,\n]\n\nX = (df\n     .dropna()\n     [predVars]\n     .pipe((fh.oneHotEncodeMultipleVars, &quot;df&quot;),\n           varList = predVars) #Change this if you don't have solely categoricals\n    )\n\nlabels = X.columns\n\ny = (df\n     .dropna()\n     [&quot;click&quot;]\n     .values)\n</code></pre>\n<!--kg-card-end: markdown--><p>Let's use <code>log_loss</code> as our metric, because I saw <a href=\"https://blog.myyellowroad.com/using-categorical-data-in-machine-learning-with-python-from-dummy-variables-to-deep-category-66041f734512\">this</a> blog post that used it for this dataset.</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">from sklearn.ensemble import RandomForestClassifierfrom sklearn.metrics import log_loss\nfi.displayFeatureImportances(X,y,labels,log_loss,{&quot;n_estimators&quot;: 18,&quot;oob_score&quot;: True},)\nScore is 3.6297600214665064 \n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Variable</th>\n      <th>Importance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>device_model</td>\n      <td>0.843122</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>site_category</td>\n      <td>0.083392</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>app_category</td>\n      <td>0.037216</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>device_type</td>\n      <td>0.025057</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>device_conn_type</td>\n      <td>0.011213</td>\n    </tr>\n  </tbody>\n</table>\n</div><!--kg-card-end: html-->","url":"https://hackersandslackers.com/random-forests-for-feature-selection/","uuid":"26ebccb3-ab41-44cf-8d57-bf995100b088","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5ba82e84a1cf0b13cf2e9886"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673707","title":"Lynx Roundup, September 24th","slug":"lynx-roundup-september-24th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/94@2x.jpg","excerpt":"Useful Python tricks!  Turing Machines!  The first programming language!","custom_excerpt":"Useful Python tricks!  Turing Machines!  The first programming language!","created_at_pretty":"19 September, 2018","published_at_pretty":"24 September, 2018","updated_at_pretty":"22 October, 2018","created_at":"2018-09-18T23:58:50.000-04:00","published_at":"2018-09-24T07:00:00.000-04:00","updated_at":"2018-10-22T17:22:50.000-04:00","meta_title":"Lynx Roundup, September 24th | Hackers and Slackers","meta_description":"Useful Python tricks!  Turing Machines!  The first programming language!","og_description":"Useful Python tricks!  Turing Machines!  The first programming language!","og_image":"https://hackersandslackers.com/content/images/lynx/94@2x.jpg","og_title":"Lynx Roundup, September 24th","twitter_description":"Useful Python tricks!  Turing Machines!  The first programming language!","twitter_image":"https://hackersandslackers.com/content/images/lynx/94@2x.jpg","twitter_title":"Lynx Roundup, September 24th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.ostechnix.com/bat-a-cat-clone-with-syntax-highlighting-and-git-integration/\n\n\n\nhttps://github.com/maiavictor/abstract-calculus\n\n\n\nhttps://blogs.scientificamerican.com/observations/the-power-of-anomalies/\n\n\n\nhttps://medium.freecodecamp.org/an-a-z-of-useful-python-tricks-b467524ee747\n\n\n\nhttp://www.sfexaminer.com/category/the-city/sf-news-columns/nato-green/\n\n\n\nhttps://www.quora.com/If-a-programming-language-is-also-written-in-a-programming-language-how-was-the-first-programming-language-written\n\n\n\nhttps://www.quora.com/What-is-the-significance-of-the-Turing-Machine","html":"<p></p><p><a href=\"https://www.ostechnix.com/bat-a-cat-clone-with-syntax-highlighting-and-git-integration/\">https://www.ostechnix.com/bat-a-cat-clone-with-syntax-highlighting-and-git-integration/</a></p><p></p><p><a href=\"https://github.com/maiavictor/abstract-calculus\">https://github.com/maiavictor/abstract-calculus</a></p><p></p><p><a href=\"https://blogs.scientificamerican.com/observations/the-power-of-anomalies/\">https://blogs.scientificamerican.com/observations/the-power-of-anomalies/</a></p><p></p><p><a href=\"https://medium.freecodecamp.org/an-a-z-of-useful-python-tricks-b467524ee747\">https://medium.freecodecamp.org/an-a-z-of-useful-python-tricks-b467524ee747</a></p><p></p><p><a href=\"http://www.sfexaminer.com/category/the-city/sf-news-columns/nato-green/\">http://www.sfexaminer.com/category/the-city/sf-news-columns/nato-green/</a></p><p></p><p><a href=\"https://www.quora.com/If-a-programming-language-is-also-written-in-a-programming-language-how-was-the-first-programming-language-written\">https://www.quora.com/If-a-programming-language-is-also-written-in-a-programming-language-how-was-the-first-programming-language-written</a></p><p></p><p><a href=\"https://www.quora.com/What-is-the-significance-of-the-Turing-Machine\">https://www.quora.com/What-is-the-significance-of-the-Turing-Machine</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-24th/","uuid":"506d39e7-3238-46bf-95a9-db163ac91087","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5ba1c97ae172635d4ba51554"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673706","title":"Lynx Roundup, September 23rd","slug":"lynx-roundup-september-23rd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/92-1@2x.jpg","excerpt":"Dealing with outliers in ML!  Training big Random Forests without big iron!  Nice maps of cloud layouts!","custom_excerpt":"Dealing with outliers in ML!  Training big Random Forests without big iron!  Nice maps of cloud layouts!","created_at_pretty":"19 September, 2018","published_at_pretty":"23 September, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-09-18T23:00:33.000-04:00","published_at":"2018-09-23T07:00:00.000-04:00","updated_at":"2019-02-14T05:06:17.000-05:00","meta_title":"Dealing with outliers in ML!  Training big Random Forests without big iron!  Nice maps of cloud layouts! | Hackers And Slackers","meta_description":"Dealing with outliers in ML!  Training big Random Forests without big iron!  Nice maps of cloud layouts!","og_description":"Dealing with outliers in ML!  Training big Random Forests without big iron!  Nice maps of cloud layouts!","og_image":"https://hackersandslackers.com/content/images/2019/02/92-1@2x.jpg","og_title":"Lynx Roundup, September 23rd","twitter_description":"Dealing with outliers in ML!  Training big Random Forests without big iron!  Nice maps of cloud layouts!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/92-1@2x.jpg","twitter_title":"Lynx Roundup, September 23rd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"Training Big Random Forests with Little Resources\n[https://arxiv.org/pdf/1802.06394.pdf]\n\n\n\n\n\nhttps://arcentry.com/blog/announcing-the-arcentry-api/\n\n\n\n\n\nhttps://tech.gadventures.com/modern-functions-in-python-3-80208c44ce47\n\n\n\n\n\nhttps://medium.freecodecamp.org/how-to-set-up-pyspark-for-your-jupyter-notebook-7399dd3cb389\n\n\n\n\n\npic.twitter.com/7Fhru5HbQb [https://t.co/7Fhru5HbQb]\n\n— kitties mp4 (@kittiesmp4) August 28, 2018\n[https://twitter.com/kittiesmp4/status/1034243523892191234?ref_src=twsrc%5Etfw]\n\n\n\nhttps://medium.com/open-graphql/create-a-multiuser-graphql-crud-l-app-in-10-minutes-with-the-new-aws-amplify-cli-and-in-a-few-73aef3d49545\n\n\n\n\n\nhttps://www.kdnuggets.com/2018/08/make-machine-learning-models-robust-outliers.html","html":"<p></p><p><a href=\"https://arxiv.org/pdf/1802.06394.pdf\">Training Big Random Forests with Little Resources</a></p><p></p><p></p><p><a href=\"https://arcentry.com/blog/announcing-the-arcentry-api/\">https://arcentry.com/blog/announcing-the-arcentry-api/</a></p><p></p><p></p><p><a href=\"https://tech.gadventures.com/modern-functions-in-python-3-80208c44ce47\">https://tech.gadventures.com/modern-functions-in-python-3-80208c44ce47</a></p><p></p><p></p><p><a href=\"https://medium.freecodecamp.org/how-to-set-up-pyspark-for-your-jupyter-notebook-7399dd3cb389\">https://medium.freecodecamp.org/how-to-set-up-pyspark-for-your-jupyter-notebook-7399dd3cb389</a></p><p></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"und\" dir=\"ltr\"><a href=\"https://t.co/7Fhru5HbQb\">pic.twitter.com/7Fhru5HbQb</a></p>&mdash; kitties mp4 (@kittiesmp4) <a href=\"https://twitter.com/kittiesmp4/status/1034243523892191234?ref_src=twsrc%5Etfw\">August 28, 2018</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><p></p><p></p><p><a href=\"https://medium.com/open-graphql/create-a-multiuser-graphql-crud-l-app-in-10-minutes-with-the-new-aws-amplify-cli-and-in-a-few-73aef3d49545\">https://medium.com/open-graphql/create-a-multiuser-graphql-crud-l-app-in-10-minutes-with-the-new-aws-amplify-cli-and-in-a-few-73aef3d49545</a></p><p></p><p></p><p><a href=\"https://www.kdnuggets.com/2018/08/make-machine-learning-models-robust-outliers.html\">https://www.kdnuggets.com/2018/08/make-machine-learning-models-robust-outliers.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-23rd/","uuid":"af27d85d-2141-4470-aa31-3c9140898a69","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5ba1bbd1e172635d4ba51551"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673705","title":"Lynx Roundup, September 22nd","slug":"lynx-roundup-september-22nd","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/84@2x.jpg","excerpt":"Feature engineering!  Visualizing Random Forests!  How to add Machine Learning to your project!","custom_excerpt":"Feature engineering!  Visualizing Random Forests!  How to add Machine Learning to your project!","created_at_pretty":"19 September, 2018","published_at_pretty":"22 September, 2018","updated_at_pretty":"17 October, 2018","created_at":"2018-09-18T22:57:15.000-04:00","published_at":"2018-09-22T07:00:00.000-04:00","updated_at":"2018-10-17T08:34:05.000-04:00","meta_title":"Lynx Roundup, September 22nd | Hackers and Slackers","meta_description":"Feature engineering!  Visualizing Random Forests!  How to add Machine Learning to your project!","og_description":"Feature engineering!  Visualizing Random Forests!  How to add Machine Learning to your project!","og_image":"https://hackersandslackers.com/content/images/lynx/84@2x.jpg","og_title":"Lynx Roundup, September 22nd","twitter_description":"Feature engineering!  Visualizing Random Forests!  How to add Machine Learning to your project!","twitter_image":"https://hackersandslackers.com/content/images/lynx/84@2x.jpg","twitter_title":"Lynx Roundup, September 22nd","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"Feature Engineering - Getting most out of data for predictive models - TDC 2017\n[https://www.slideshare.net/gabrielspmoreira/feature-engineering-getting-most-out-of-data-for-predictive-models-tdc-2017] \n from Gabriel Moreira [https://www.slideshare.net/gabrielspmoreira]  \n\n\n\nhttps://towardsdatascience.com/multi-class-text-classification-with-pyspark-7d78d022ed35\n\n\n\n\n\nhttps://github.com/kkyon/databot\n\n\n\nhttps://medium.com/the-lever/no-machine-learning-in-your-product-start-here-2df776d10a5c\n\n\n\n\n\nhttps://aysent.github.io/2015/11/08/random-forest-leaf-visualization.html\n\n\n\n\n\nhttps://thenewstack.io/redis-how-probabilistic-data-structures-support-state-of-the-art-apps/\n\n\n\n\n\nhttps://medium.com/@svarlamov/the-7-minute-programmer-workout-8f811fb90589","html":"<p></p><figure class=\"kg-card kg-embed-card\"><iframe src=\"https://www.slideshare.net/slideshow/embed_code/key/djpVSOEuCAFzhV\" width=\"427\" height=\"356\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"https://www.slideshare.net/gabrielspmoreira/feature-engineering-getting-most-out-of-data-for-predictive-models-tdc-2017\" title=\"Feature Engineering - Getting most out of data for predictive models - TDC 2017\" target=\"_blank\">Feature Engineering - Getting most out of data for predictive models - TDC 2017</a> </strong> from <strong><a href=\"https://www.slideshare.net/gabrielspmoreira\" target=\"_blank\">Gabriel Moreira</a></strong> </div>\n\n</figure><p></p><p></p><p><a href=\"https://towardsdatascience.com/multi-class-text-classification-with-pyspark-7d78d022ed35\">https://towardsdatascience.com/multi-class-text-classification-with-pyspark-7d78d022ed35</a></p><p></p><p></p><p><a href=\"https://github.com/kkyon/databot\">https://github.com/kkyon/databot</a></p><p></p><p><a href=\"https://medium.com/the-lever/no-machine-learning-in-your-product-start-here-2df776d10a5c\">https://medium.com/the-lever/no-machine-learning-in-your-product-start-here-2df776d10a5c</a></p><p></p><p></p><p><a href=\"https://aysent.github.io/2015/11/08/random-forest-leaf-visualization.html\">https://aysent.github.io/2015/11/08/random-forest-leaf-visualization.html</a></p><p></p><p></p><p><a href=\"https://thenewstack.io/redis-how-probabilistic-data-structures-support-state-of-the-art-apps/\">https://thenewstack.io/redis-how-probabilistic-data-structures-support-state-of-the-art-apps/</a></p><p></p><p></p><p><a href=\"https://medium.com/@svarlamov/the-7-minute-programmer-workout-8f811fb90589\">https://medium.com/@svarlamov/the-7-minute-programmer-workout-8f811fb90589</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-22nd/","uuid":"c6bbb47c-430e-497d-aaad-6a0c356edfc4","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5ba1bb0be172635d4ba5154e"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673704","title":"Lynx Roundup, September 21st","slug":"lynx-roundup-september-21st","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/88-1@2x.jpg","excerpt":"Google for colors!  Interview with a guy who's been making power electronics for 50 years!  Multi-class text classification!","custom_excerpt":"Google for colors!  Interview with a guy who's been making power electronics for 50 years!  Multi-class text classification!","created_at_pretty":"19 September, 2018","published_at_pretty":"21 September, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-09-18T22:53:16.000-04:00","published_at":"2018-09-21T07:00:00.000-04:00","updated_at":"2019-02-14T05:06:51.000-05:00","meta_title":"Lynx Roundup, September 21st | Hackers and Slackers","meta_description":"Google for colors!  Interview with a guy who's been making power electronics for 50 years!  Multi-class text classification!","og_description":"Google for colors!  Interview with a guy who's been making power electronics for 50 years!  Multi-class text classification!","og_image":"https://hackersandslackers.com/content/images/2019/02/88-1@2x.jpg","og_title":"Lynx Roundup, September 21st","twitter_description":"Google for colors!  Interview with a guy who's been making power electronics for 50 years!  Multi-class text classification!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/88-1@2x.jpg","twitter_title":"Lynx Roundup, September 21st","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://www.oreilly.com/ideas/sea-change-what-happens-when-jupyter-becomes-pervasive-at-a-university\n\n\n\n\n\nhttps://picular.co/\n\n\n\n\n\nhttps://danielmullen.info/projects/\n\n\n\n\n\n“To get started, I suggest coming up with a simple but reasonable model for\nmissingness, then simulate fake complete data followed by a fake missingness\npattern, and check that you can recover your missing-data model and your\ncomplete data model in that fake-data situation. You can then proceed from\nthere. But if you can’t even do it with fake data, you’re sunk.”\n[https://andrewgelman.com/2018/08/27/get-started-suggest-coming-simple-reasonable-model-missingness-simulate-fake-complete-data-followed-fake-missingness-pattern-check-can-recover-mi/]\n\n\n\n\n\nhttps://medium.com/wintoncentre/bizarre-conclusions-from-alcohol-study-853ea236992e\n\n\n\n\n\nhttps://www.powerelectronics.com/industry/my-50-years-power-electronics\n\n\n\n\n\nhttps://www.kdnuggets.com/2018/08/multi-class-text-classification-scikit-learn.html","html":"<p></p><p><a href=\"https://www.oreilly.com/ideas/sea-change-what-happens-when-jupyter-becomes-pervasive-at-a-university\">https://www.oreilly.com/ideas/sea-change-what-happens-when-jupyter-becomes-pervasive-at-a-university</a></p><p></p><p></p><p><a href=\"https://picular.co/\">https://picular.co/</a></p><p></p><p></p><p><a href=\"https://danielmullen.info/projects/\">https://danielmullen.info/projects/</a></p><p></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"https://andrewgelman.com/2018/08/27/get-started-suggest-coming-simple-reasonable-model-missingness-simulate-fake-complete-data-followed-fake-missingness-pattern-check-can-recover-mi/\">&#8220;To get started, I suggest coming up with a simple but reasonable model for missingness, then simulate fake complete data followed by a fake missingness pattern, and check that you can recover your missing-data model and your complete data model in that fake-data situation.  You can then proceed from there.  But if you can&#8217;t even do it with fake data, you&#8217;re sunk.&#8221;</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++){if(d=i[c],!d.getAttribute(\"data-secret\"))f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f);if(g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(~~g<200)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://andrewgelman.com/2018/08/27/get-started-suggest-coming-simple-reasonable-model-missingness-simulate-fake-complete-data-followed-fake-missingness-pattern-check-can-recover-mi/embed/\" width=\"600\" height=\"338\" title=\"&#8220;&#8220;To get started, I suggest coming up with a simple but reasonable model for missingness, then simulate fake complete data followed by a fake missingness pattern, and check that you can recover your missing-data model and your complete data model in that fake-data situation.  You can then proceed from there.  But if you can&#8217;t even do it with fake data, you&#8217;re sunk.&#8221;&#8221; &#8212; Statistical Modeling, Causal Inference, and Social Science\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><p></p><p></p><p><a href=\"https://medium.com/wintoncentre/bizarre-conclusions-from-alcohol-study-853ea236992e\">https://medium.com/wintoncentre/bizarre-conclusions-from-alcohol-study-853ea236992e</a></p><p></p><p></p><p><a href=\"https://www.powerelectronics.com/industry/my-50-years-power-electronics\">https://www.powerelectronics.com/industry/my-50-years-power-electronics</a></p><p></p><p></p><p><a href=\"https://www.kdnuggets.com/2018/08/multi-class-text-classification-scikit-learn.html\">https://www.kdnuggets.com/2018/08/multi-class-text-classification-scikit-learn.html</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-21st/","uuid":"f40f248e-d2b4-4901-b45f-8d89c8b6f151","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5ba1ba1ce172635d4ba5154b"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673703","title":"Lynx Roundup, September 20th","slug":"lynx-roundup-september-20th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/87@2x.jpg","excerpt":"Map projections!  Jupyter stuff!  A new kind of neuron!","custom_excerpt":"Map projections!  Jupyter stuff!  A new kind of neuron!","created_at_pretty":"19 September, 2018","published_at_pretty":"20 September, 2018","updated_at_pretty":"20 September, 2018","created_at":"2018-09-18T22:43:29.000-04:00","published_at":"2018-09-20T13:00:00.000-04:00","updated_at":"2018-09-20T13:00:00.000-04:00","meta_title":"Lynx Roundup, September 20th | Hackers and Slackers","meta_description":"Map projections!  Jupyter stuff!  A new kind of neuron!","og_description":"Map projections!  Jupyter stuff!  A new kind of neuron!","og_image":"https://hackersandslackers.com/content/images/lynx/87@2x.jpg","og_title":"Lynx Roundup, September 20th","twitter_description":"Map projections!  Jupyter stuff!  A new kind of neuron!","twitter_image":"https://hackersandslackers.com/content/images/lynx/87@2x.jpg","twitter_title":"Lynx Roundup, September 20th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"What is this weird Twitter army of Amazon drones cheerfully defending warehouse\nwork?\n[https://techcrunch.com/2018/08/23/what-is-this-weird-twitter-army-of-amazon-drones-cheerfully-defending-warehouse-work/]\n\n\n\nhttp://willcrichton.net/notes/lessons-from-jupytercon/\n\n\n\n\n\nEqual Earth map projection\n[https://www.johndcook.com/blog/2018/08/10/equal-earth-projection/]\n\n\n\nhttps://www.wired.com/story/meet-the-rosehip-cell-a-new-kind-of-neuron\n\n\n\n\n\nPareto’s 80-20 rule\n[https://www.johndcook.com/blog/2018/08/27/pareto-80-20-rule/]\n\nEarlier this week, I was at the Second Joint Congress on Evolutionary Biology\n[https://www.evolutionmontpellier2018.org/]  (Evol2018). It was overwhelming,\nbut very educational. \n\nMany of the talks were about very specific evolutionary mechanisms in very\nspecific model organisms. This diversity of questions and approaches to answers\nreminded me of the importance of bouquets of heuristic models in biology. But\nwhat made this particularly overwhelming for me as a non-biologist was the lack\nof unifying formal framework to make sense of what was happening. Without the\nencyclopedic knowledge of a good naturalist, I had a very difficult time linking\ntopics to each other. I was experiencing the pluralistic nature of biology. This\nwas stressed by Laura Nuño De La Rosa [https://lauranrg.wordpress.com/]‘s slide\nthat contrasts the pluralism of biology with the theory reduction of physics:\n\n  [https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg]\n\nThat’s right, to highlight the pluralism, there were great talks from\nphilosophers of biology along side all the experimental and theoretical biology\nat Evol2018.\n\nAs I’ve discussed before, I think that theoretical computer science can provide\nthe unifying formal framework that biology needs\n[https://egtheory.wordpress.com/2013/09/09/cstheory-of-biology/]. In particular,\nthe cstheory approach to reductions is the more robust (compared to physics)\nnotion of ‘theory reduction’ that a pluralistic discipline like evolutionary\nbiology could benefit from. However, I still don’t have any idea of how such a\nformal framework would look in practice. Hence, throughout Evol2018 I needed\nrefuge from the overwhelming overstimulation of organisms and mechanisms that\nwere foreign to me. \n\nOne of the places I sought refuge was in talks on computational studies. There,\nI heard speakers emphasize several times that they weren’t “just simulating\nevolution” but that their programs were evolution (or evolving) in a computer.\nNot only were they looking at evolution in a computer, but this model organism\ngave them an advantage over other systems because of its transparency: they\ncould track every lineage, every offspring, every mutation, and every random\nevent. Plus, computation is cheaper and easier than culturing E.coli, brewing\nyeast, or raising fruit flies. And just like those model organisms,\ncomputational models could test evolutionary hypotheses and generate new ones.\n\nThis defensive emphasis surprised me. It suggested that these researchers have\noften been questioned on the usefulness of their simulations for the study of\nevolution. \n\nIn this post, I want to reflect on some reasons for such questioning. \n\n\n\nLet’s rewind to a time before computers. To a time before Darwin’s evolution by\nnatural selection. Just to stress that this debate could have been had (and to\nsome extent, has been had) before either computers or evolution. Let’s rewind to\nthe time of Thomas Hobbes. \n\nWhen Hobbes was writing, clocks and watches were some of the best examples of\ntechnology; and the hottest idea was the new science of mechanistic physics.\nExcept Hobbes wanted to write about politics — more than that, he wanted to\nwrite a science of politics. The problem was that by looking at the\ncommonwealth, he saw the importance of its form and the relative unimportance of\nits matter. If he was a pure Aristotelian, this would be no issue, but he\naccepted the new science’s eliminate of form as an explanatory tool. For the\nmechanistic physics, formal cause was not seen as an acceptable mode of\nexplanation. \n\nThis forced Hobbes to distinguish between two kinds of knowledge. First, there\nwas knowledge of things that we have made ourselves — for him, the central\nexamples of this were geometry and the state. Second, there was knowledge of\nthings that we did not make — i.e., the domain of mechanistic physics. In the\ncase of physics, we could not deconstruct the machine because different\nmechanisms can produce the same effect. Thus, if we tried to reason from effects\nto causes, we could only arrive at reasonable conjectures and hypotheses. But\nfor the state, we could  know the causes because we had constructed them\nourselves. With this move, Hobbes could avoid the problem of underdetermination.\n\nThis is also the move that a computational modeler employs. By explicitly\nspecifying all the rules that the digital organism follows, she is making its\nworld. Thus, she can then dismantle the machine and understand all of its parts\nand how they contribute to the effect of interest. Unlike Hobbes, she has the\nextra advantage of not having had the State build around her and being able to\ndismantle her simulation at will. Of course, in practice, just like Hobbes, most\ncomputer modelers usually don’t fully understand the code they’ve written.\nStill, this powerful determination is the computational modeler’s cake.\n\nUnfortunately, the modeler wants to eat her cake, too. By appealing to multiple\nrealizability, the modeler can claim that evolution does not need to be realized\nin DNA but can also be in silico. In other words, that evolution is\nunderdetermined. She will usually proceed further by saying that a big advantage\nof a computational model is that it can be run in conditions that aren’t easily\naccessible to wet-lab experiments. In other words, she wants to assume a set of\nrules — which are underdetermined by a set of intuitions of real experiments —\nand then extrapolate their effects to carry out unreal experiments.\n\nI think it is this tension between having your cake and eating it that causes\nthe criticisms of “just a simulation”. All the advantages of peering\nunder-the-hood come from determination, but all the applicability to\nnon-simulations comes from underdetermination. And since we don’t usually\ninherently care about in silico  organisms, we have to embrace the\nunderdeterminism for the sake of applicability. Once we do that, all the power\nof peering under-the-hood disappears: since the detailed mechanisms are just\nconjectural. This is made worse by the curse of computing\n[https://egtheory.wordpress.com/2013/05/14/curse-of-computing/]  in big\nsimulations, where the modeler doesn’t actually understand all the details of\nthe mechanism they implemented — for example, when the organisms are arbitrary\nprograms in some simple specification language.\n\nSome of this critique can be avoided by replacing in silico  with in logico. And\nI think computational modelers often offer this defence, too. For this, let’s\nturn again to Hobbes. \n\nAfter sidestepping the problem of underdetermination, Hobbes could imagine the\nState as a giant watch or more general automaton. But he did not see the gears\nof that watch as the humans that make up society. Instead he compares artificial\nconstructs like “wealth of the population” to strength of the automaton,\ncounselors to memory, and reward/punishment to nerves. In this way, he was not\nimplementing the State through physical processes (which would then make its\nstudy the extension of physical mechanics) but through conceptual human-made\nprocesses.\n\nWe can do a similar move with simulations. We can recognize that the physical\nworld is separate from our descriptions of it. And that evolution is our way of\nmaking sense of the order and diversity in the physical world. As such,\nevolution is a concept which we can implement with other concepts. A computer\nsimulation is then just the physical model of those concepts. Much like a clock\nwas — for a long time — often used as a physical model of our astronomical\nhypotheses. This is the same sort of separation of theory and reality that I\ntried to do with Post’s variant of the Church-Turing thesis\n[https://egtheory.wordpress.com/2014/09/11/transcendental-idealism-and-posts-variant-of-the-church-turing-thesis/]\n. And this provide a way to interpret evolutionary simulations as \nimplementations of theory\n[https://egtheory.wordpress.com/2018/07/14/heuristics-and-abstraction/].\n\nI think that modelers make the above argument when they point out that what\nmatters is not the DNA/RNA/squishy-stuff of biology, but some set of logical\nprocess-based rules that defines the applicability of evolution. However, I\nthink that when we make this argument, we have to be mindful of the\nunderdetermination of our theory. In particular, that our goal is to improve how\nthe theory is determined. In practice, I think that this can only be done if we\nprovide an opportunity to directly link to systems of interest. We want our\nprocesses to have operationalizations that apply both in our computational model\nand other model organisms or natural organisms. For me, this can mean giving up\nsome of the peaking under the hood in favor of an effective theory rather than\na\nreductive one\n[https://egtheory.wordpress.com/2018/07/17/jms-reductive-vs-effective/].\n\nOf course, the above considerations are not limited to computer models. Model\norganisms in conditions designed for the purpose of a particular experiment are\nboth conceptual and physical systems. And although computer models are also both\nconceptual and physical systems, these two aspects of them are usually easier to\ndisentangle than for model organisms. This means that the above considerations\ncould be repeated for experimental systems, but more care would be required.\n\n\n\n\n\nhttps://www.oreilly.com/ideas/jupyter-notebooks-and-the-intersection-of-data-science-and-data-engineering","html":"<p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"https://techcrunch.com/2018/08/23/what-is-this-weird-twitter-army-of-amazon-drones-cheerfully-defending-warehouse-work/\">What is this weird Twitter army of Amazon drones cheerfully defending warehouse work?</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++){if(d=i[c],!d.getAttribute(\"data-secret\"))f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f);if(g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(~~g<200)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://techcrunch.com/2018/08/23/what-is-this-weird-twitter-army-of-amazon-drones-cheerfully-defending-warehouse-work/embed/\" width=\"600\" height=\"338\" title=\"&#8220;What is this weird Twitter army of Amazon drones cheerfully defending warehouse work?&#8221; &#8212; TechCrunch\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><p></p><p><a href=\"http://willcrichton.net/notes/lessons-from-jupytercon/\">http://willcrichton.net/notes/lessons-from-jupytercon/</a></p><p></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"https://www.johndcook.com/blog/2018/08/10/equal-earth-projection/\">Equal Earth map projection</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++){if(d=i[c],!d.getAttribute(\"data-secret\"))f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f);if(g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(~~g<200)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://www.johndcook.com/blog/2018/08/10/equal-earth-projection/embed/\" width=\"600\" height=\"338\" title=\"&#8220;Equal Earth map projection&#8221; &#8212; John D. Cook\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><p></p><p><a href=\"https://www.wired.com/story/meet-the-rosehip-cell-a-new-kind-of-neuron\">https://www.wired.com/story/meet-the-rosehip-cell-a-new-kind-of-neuron</a></p><p></p><p></p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"wp-embedded-content\"><a href=\"https://www.johndcook.com/blog/2018/08/27/pareto-80-20-rule/\">Pareto&#8217;s 80-20 rule</a></blockquote>\n<script type=\"text/javascript\">\n<!--//--><![CDATA[//><!--\n\t\t!function(a,b){\"use strict\";function c(){if(!e){e=!0;var a,c,d,f,g=-1!==navigator.appVersion.indexOf(\"MSIE 10\"),h=!!navigator.userAgent.match(/Trident.*rv:11\\./),i=b.querySelectorAll(\"iframe.wp-embedded-content\");for(c=0;c<i.length;c++){if(d=i[c],!d.getAttribute(\"data-secret\"))f=Math.random().toString(36).substr(2,10),d.src+=\"#?secret=\"+f,d.setAttribute(\"data-secret\",f);if(g||h)a=d.cloneNode(!0),a.removeAttribute(\"security\"),d.parentNode.replaceChild(a,d)}}}var d=!1,e=!1;if(b.querySelector)if(a.addEventListener)d=!0;if(a.wp=a.wp||{},!a.wp.receiveEmbedMessage)if(a.wp.receiveEmbedMessage=function(c){var d=c.data;if(d.secret||d.message||d.value)if(!/[^a-zA-Z0-9]/.test(d.secret)){var e,f,g,h,i,j=b.querySelectorAll('iframe[data-secret=\"'+d.secret+'\"]'),k=b.querySelectorAll('blockquote[data-secret=\"'+d.secret+'\"]');for(e=0;e<k.length;e++)k[e].style.display=\"none\";for(e=0;e<j.length;e++)if(f=j[e],c.source===f.contentWindow){if(f.removeAttribute(\"style\"),\"height\"===d.message){if(g=parseInt(d.value,10),g>1e3)g=1e3;else if(~~g<200)g=200;f.height=g}if(\"link\"===d.message)if(h=b.createElement(\"a\"),i=b.createElement(\"a\"),h.href=f.getAttribute(\"src\"),i.href=d.value,i.host===h.host)if(b.activeElement===f)a.top.location.href=d.value}else;}},d)a.addEventListener(\"message\",a.wp.receiveEmbedMessage,!1),b.addEventListener(\"DOMContentLoaded\",c,!1),a.addEventListener(\"load\",c,!1)}(window,document);\n//--><!]]>\n</script><iframe sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://www.johndcook.com/blog/2018/08/27/pareto-80-20-rule/embed/\" width=\"600\" height=\"338\" title=\"&#8220;Pareto&#8217;s 80-20 rule&#8221; &#8212; John D. Cook\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" class=\"wp-embedded-content\"></iframe></figure><p></p><figure class=\"kg-card kg-embed-card\"><p>Earlier this week, I was at the <a href=\"https://www.evolutionmontpellier2018.org/\">Second Joint Congress on Evolutionary Biology</a> (Evol2018). It was overwhelming, but very educational. </p>\n<p>Many of the talks were about very specific evolutionary mechanisms in very specific model organisms. This diversity of questions and approaches to answers reminded me of the importance of bouquets of heuristic models in biology. But what made this particularly overwhelming for me as a non-biologist was the lack of unifying formal framework to make sense of what was happening. Without the encyclopedic knowledge of a good naturalist, I had a very difficult time linking topics to each other. I was experiencing the pluralistic nature of biology. This was stressed by <a href=\"https://lauranrg.wordpress.com/\">Laura Nuño De La Rosa</a>&#8216;s slide that contrasts the pluralism of biology with the theory reduction of physics:</p>\n<p><a href=\"https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg\"><img data-attachment-id=\"13821\" data-permalink=\"https://egtheory.wordpress.com/2018/08/25/hobbes-on-simulations/ndlr_slide/\" data-orig-file=\"https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg\" data-orig-size=\"1486,1218\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;2.4&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPad&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1534847086&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;4.28&quot;,&quot;iso&quot;:&quot;50&quot;,&quot;shutter_speed&quot;:&quot;0.033333333333333&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"NDLR_Slide\" data-image-description=\"\" data-medium-file=\"https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=300\" data-large-file=\"https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=1024\" src=\"https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=1024&#038;h=839\" alt=\"\" class=\"alignright size-large wp-image-13821\" srcset=\"https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=1024&amp;h=839 1024w, https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=150&amp;h=123 150w, https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=300&amp;h=246 300w, https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg?w=768&amp;h=629 768w, https://egtheory.files.wordpress.com/2018/08/ndlr_slide.jpg 1486w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></a></p>\n<p>That&#8217;s right, to highlight the pluralism, there were great talks from philosophers of biology along side all the experimental and theoretical biology at Evol2018.</p>\n<p>As I&#8217;ve discussed before, I think that <a href=\"https://egtheory.wordpress.com/2013/09/09/cstheory-of-biology/\">theoretical computer science can provide the unifying formal framework that biology needs</a>. In particular, the cstheory approach to reductions is the more robust (compared to physics) notion of &#8216;theory reduction&#8217; that a pluralistic discipline like evolutionary biology could benefit from. However, I still don&#8217;t have any idea of how such a formal framework would look in practice. Hence, throughout Evol2018 I needed refuge from the overwhelming overstimulation of organisms and mechanisms that were foreign to me. </p>\n<p>One of the places I sought refuge was in talks on computational studies. There, I heard speakers emphasize several times that they weren&#8217;t &#8220;just simulating evolution&#8221; but that their programs were evolution (or evolving) in a computer. Not only were they looking at evolution in a computer, but this model organism gave them an advantage over other systems because of its transparency: they could track every lineage, every offspring, every mutation, and every random event. Plus, computation is cheaper and easier than culturing E.coli, brewing yeast, or raising fruit flies. And just like those model organisms, computational models could test evolutionary hypotheses and generate new ones.</p>\n<p>This defensive emphasis surprised me. It suggested that these researchers have often been questioned on the usefulness of their simulations for the study of evolution. </p>\n<p>In this post, I want to reflect on some reasons for such questioning. </p>\n<p><!--more--></p>\n<p>Let&#8217;s rewind to a time before computers. To a time before Darwin&#8217;s evolution by natural selection. Just to stress that this debate could have been had (and to some extent, has been had) before either computers or evolution. Let&#8217;s rewind to the time of Thomas Hobbes. </p>\n<p>When Hobbes was writing, clocks and watches were some of the best examples of technology; and the hottest idea was the new science of mechanistic physics. Except Hobbes wanted to write about politics &#8212; more than that, he wanted to write a science of politics. The problem was that by looking at the commonwealth, he saw the importance of its form and the  relative unimportance of its matter. If he was a pure Aristotelian, this would be no issue, but he accepted the new science&#8217;s eliminate of form as an explanatory tool. For the mechanistic physics, formal cause was not seen as an acceptable mode of explanation. </p>\n<p>This forced Hobbes to distinguish between two kinds of knowledge. First, there was knowledge of things that we have made ourselves &#8212; for him, the central examples of this were geometry and the state. Second, there was knowledge of things that we did not make &#8212; i.e., the domain of mechanistic physics. In the case of physics, we could not deconstruct the machine because different mechanisms can produce the same effect. Thus, if we tried to reason from effects to causes, we could only arrive at reasonable conjectures and hypotheses. But for the state, we <i>could</i> know the causes because we had constructed them ourselves. With this move, Hobbes could avoid the problem of underdetermination.</p>\n<p>This is also the move that a computational modeler employs. By explicitly specifying all the rules that the digital organism follows, she is making its world. Thus, she can then dismantle the machine and understand all of its parts and how they contribute to the effect of interest. Unlike Hobbes, she has the extra advantage of not having had the State build around her and being able to dismantle her simulation at will. Of course, in practice, just like Hobbes, most computer modelers usually don&#8217;t fully understand the code they&#8217;ve written. Still, this powerful determination is the computational modeler&#8217;s cake.</p>\n<p>Unfortunately, the modeler wants to eat her cake, too. By appealing to multiple realizability, the modeler can claim that evolution does not need to be realized in DNA but can also be <i>in silico</i>. In other words, that evolution is underdetermined. She will usually proceed further by saying that a big advantage of a computational model is that it can be run in conditions that aren&#8217;t easily accessible to wet-lab experiments. In other words, she wants to assume a set of rules &#8212; which are underdetermined by a set of intuitions of real experiments &#8212; and then extrapolate their effects to carry out unreal experiments.</p>\n<p>I think it is this tension between having your cake and eating it that causes the criticisms of &#8220;just a simulation&#8221;. All the advantages of peering under-the-hood come from determination, but all the applicability to non-simulations comes from underdetermination. And since we don&#8217;t usually inherently care about <i>in silico</i> organisms, we have to embrace the underdeterminism for the sake of applicability. Once we do that, all the power of peering under-the-hood disappears: since the detailed mechanisms are just conjectural. This is made worse by the <a href=\"https://egtheory.wordpress.com/2013/05/14/curse-of-computing/\">curse of computing</a> in big simulations, where the modeler doesn&#8217;t actually understand all the details of the mechanism they implemented &#8212; for example, when the organisms are arbitrary programs in some simple specification language.</p>\n<p>Some of this critique can be avoided by replacing <i>in silico</i> with <i>in logico</i>. And I think computational modelers often offer this defence, too. For this, let&#8217;s turn again to Hobbes. </p>\n<p>After sidestepping the problem of underdetermination, Hobbes could imagine the State as a giant watch or more general automaton. But he did not see the gears of that watch as the humans that make up society. Instead he compares artificial constructs like &#8220;wealth of the population&#8221; to strength of the automaton, counselors to memory, and reward/punishment to nerves. In this way, he was not implementing the State through physical processes (which would then make its study the extension of physical mechanics) but through conceptual human-made processes.</p>\n<p>We can do a similar move with simulations. We can recognize that the physical world is separate from our descriptions of it. And that evolution is our way of making sense of the order and diversity in the physical world. As such, evolution is a concept which we can implement with other concepts. A computer simulation is then just the physical model of those concepts. Much like a clock was &#8212; for a long time &#8212; often used as a physical model of our astronomical hypotheses. This is the same sort of separation of theory and reality that I tried to do with <a href=\"https://egtheory.wordpress.com/2014/09/11/transcendental-idealism-and-posts-variant-of-the-church-turing-thesis/\">Post&#8217;s variant of the Church-Turing thesis</a>. And this provide a way to interpret evolutionary simulations as <a href=\"https://egtheory.wordpress.com/2018/07/14/heuristics-and-abstraction/\">implementations of theory</a>.</p>\n<p>I think that modelers make the above argument when they point out that what matters is not the DNA/RNA/squishy-stuff of biology, but some set of logical process-based rules that defines the applicability of evolution. However, I think that when we make this argument, we have to be mindful of the underdetermination of our theory. In particular, that our goal is to improve how the theory is determined. In practice, I think that this can only be done if we provide an opportunity to directly link to systems of interest. We want our processes to have operationalizations that apply both in our computational model and other model organisms or natural organisms. For me, this can mean giving up some of the peaking under the hood in favor of <a href=\"https://egtheory.wordpress.com/2018/07/17/jms-reductive-vs-effective/\">an effective theory rather than a reductive one</a>.</p>\n<p>Of course, the above considerations are not limited to computer models. Model organisms in conditions designed for the purpose of a particular experiment are both conceptual and physical systems. And although computer models are also both conceptual and physical systems, these two aspects of them are usually easier to disentangle than for model organisms. This means that the above considerations could be repeated for experimental systems, but more care would be required.</p>\n</figure><p></p><p></p><p><a href=\"https://www.oreilly.com/ideas/jupyter-notebooks-and-the-intersection-of-data-science-and-data-engineering\">https://www.oreilly.com/ideas/jupyter-notebooks-and-the-intersection-of-data-science-and-data-engineering</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-20th/","uuid":"9c5d96fa-9ba5-4f91-a03e-45e8d37bf6f2","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5ba1b7d178afd65c7f626dd0"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673702","title":"Lynx Roundup, September 19th","slug":"lynx-roundup-september-19th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/02/86-2@2x.jpg","excerpt":"Space shuttle software!  Serverless best practices!  A for-real new organ discovered!","custom_excerpt":"Space shuttle software!  Serverless best practices!  A for-real new organ discovered!","created_at_pretty":"19 September, 2018","published_at_pretty":"19 September, 2018","updated_at_pretty":"14 February, 2019","created_at":"2018-09-18T22:27:56.000-04:00","published_at":"2018-09-19T07:00:00.000-04:00","updated_at":"2019-02-14T05:15:40.000-05:00","meta_title":"Space shuttle software!  Serverless best practices!  A for-real new organ discovered! | Hackers And Slackers","meta_description":"Space shuttle software!  Serverless best practices!  A for-real new organ discovered!","og_description":"Space shuttle software!  Serverless best practices!  A for-real new organ discovered!","og_image":"https://hackersandslackers.com/content/images/2019/02/86-2@2x.jpg","og_title":"Lynx Roundup, September 19th","twitter_description":"Space shuttle software!  Serverless best practices!  A for-real new organ discovered!","twitter_image":"https://hackersandslackers.com/content/images/2019/02/86-2@2x.jpg","twitter_title":"Lynx Roundup, September 19th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"https://spaceflight.nasa.gov/shuttle/reference/shutref/orbiter/avionics/\n\n\n\n\n\nhttps://medium.com/@PaulDJohnston/serverless-best-practices-b3c97d551535\n\n\n\n\n\nhttps://www.newsweek.com/scientists-discover-new-micro-organ-hiding-our-immune-system-1086757\n\n\n\n\n\nhttps://www.oreilly.com/ideas/its-time-to-establish-big-data-standards\n\n\n\n\n\nhttps://discuss.ocaml.org/t/ocaml-mooc-third-edition/2458\n\n\n\n\n\nhttps://www.quora.com/When-is-it-most-appropriate-to-take-the-arithmetic-mean-vs-geometric-mean-vs-harmonic-mean","html":"<p></p><p></p><p><a href=\"https://spaceflight.nasa.gov/shuttle/reference/shutref/orbiter/avionics/\">https://spaceflight.nasa.gov/shuttle/reference/shutref/orbiter/avionics/</a></p><p></p><p></p><p><a href=\"https://medium.com/@PaulDJohnston/serverless-best-practices-b3c97d551535\">https://medium.com/@PaulDJohnston/serverless-best-practices-b3c97d551535</a></p><p></p><p></p><p><a href=\"https://www.newsweek.com/scientists-discover-new-micro-organ-hiding-our-immune-system-1086757\">https://www.newsweek.com/scientists-discover-new-micro-organ-hiding-our-immune-system-1086757</a></p><p></p><p></p><p><a href=\"https://www.oreilly.com/ideas/its-time-to-establish-big-data-standards\">https://www.oreilly.com/ideas/its-time-to-establish-big-data-standards</a></p><p></p><p></p><p><a href=\"https://discuss.ocaml.org/t/ocaml-mooc-third-edition/2458\">https://discuss.ocaml.org/t/ocaml-mooc-third-edition/2458</a></p><p></p><p></p><p><a href=\"https://www.quora.com/When-is-it-most-appropriate-to-take-the-arithmetic-mean-vs-geometric-mean-vs-harmonic-mean\">https://www.quora.com/When-is-it-most-appropriate-to-take-the-arithmetic-mean-vs-geometric-mean-vs-harmonic-mean</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-19th/","uuid":"3aa731ed-0fa6-40cd-9dc5-02175c4324f7","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5ba1b42c9ef94d562ceaf0ac"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb8673700","title":"Tuning Random Forests Hyperparameters with Binary Search Part III: min_samples_leaf","slug":"random-forests-hyperparameters-min_samples_leaf","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2018/09/codecorner2-1-1@2x.jpg","excerpt":"Tune the min_samples_leaf parameter in for a Random Forests classifier in scikit-learn in Python\n.","custom_excerpt":"Tune the min_samples_leaf parameter in for a Random Forests classifier in scikit-learn in Python\n.","created_at_pretty":"17 September, 2018","published_at_pretty":"17 September, 2018","updated_at_pretty":"19 February, 2019","created_at":"2018-09-16T21:33:48.000-04:00","published_at":"2018-09-17T07:30:00.000-04:00","updated_at":"2019-02-19T03:44:33.000-05:00","meta_title":"Tuning Random Forests Hyperparameters with Binary Search Part III: min_samples_leaf | Hackers and Slackers","meta_description":"Tune the min_samples_leaf parameter in for a Random Forests classifier in scikit-learn in Python\n","og_description":"Tuning Random Forests Hyperparameters with Binary Search Part III: min_samples_leaf","og_image":"https://hackersandslackers.com/content/images/2018/09/codecorner2-1-1@2x.jpg","og_title":"Tuning Random Forests Hyperparameters with Binary Search Part III: min_samples_leaf","twitter_description":"Tune the min_samples_leaf parameter in for a Random Forests classifier in scikit-learn in Python\n","twitter_image":"https://hackersandslackers.com/content/images/2018/09/codecorner2-1-1@2x.jpg","twitter_title":"Tuning Random Forests Hyperparameters with Binary Search Part III: min_samples_leaf","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},"tags":[{"name":"Code Snippet Corner","slug":"codesnippetcorner","description":"Real-world examples of Python being used to solve complex data problems, primarily using Jupyter notebooks.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o-1.jpg","meta_description":"Real-world examples of Python being used to solve complex data problems.","meta_title":"Python Code Snippet Corner","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"},{"name":"Machine Learning","slug":"machine-learning","description":"The latest developments in machine learning tools and technology available to data scientists.","feature_image":null,"meta_description":"The latest developments in machine learning tools and technology available to data scientists.","meta_title":"Machine Learning | Hackers and Slackers","visibility":"public"},{"name":"#Code Snippet Corner","slug":"code-snippet-corner","description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","feature_image":"https://hackers.nyc3.cdn.digitaloceanspaces.com/posts/2019/02/codecornerseries_o_o.jpg","meta_description":"Your weekly dose of Python tidbits and Jupyter notebooks to get you feeling saucy.","meta_title":"Python Code Snippet Corner","visibility":"internal"}],"plaintext":"Part 1 (n_estimators) here\n[https://hackersandslackers.com/code-snippet-corner-tuning-machine-learning-hyperparameters-with-binary-search/]\nPart 2 (max_depth) here\n[https://hackersandslackers.com/code-snippet-corner-tuning-random-learning-hyperparameters-with-binary-search/]\nNotebook here\n[https://github.com/mattalhonte/binary-grid-search/blob/master/Introspect%20Trees%20(Samples).ipynb]\n\n\n--------------------------------------------------------------------------------\n\nAnother parameter, another set of quirks!\n\nmin_samples_leaf  is sort of similar to max_depth.  It helps us avoid\noverfitting.  It's also non-obvious what you should use as your upper and lower\nlimits to search between.  Let's do what we did last week - build a forest with\nno parameters, see what it does, and use the upper and lower limits!\n\nimport pandas as pd\n\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import auc\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import load_breast_cancer\n\n\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\nrfArgs = {\"random_state\": 0,\n          \"n_jobs\": -1,\n          \"class_weight\": \"balanced\",\n         \"n_estimators\": 18,\n         \"oob_score\": True}\n\nclf = RandomForestClassifier(**rfArgs)\nclf.fit(X, y)\n\n\nLet's use the handy function from here\n[https://aysent.github.io/2015/11/08/random-forest-leaf-visualization.html]  to\ncrawl the number of samples in a tree's leaf nodes: \n\ndef leaf_samples(tree, node_id = 0):\n    left_child = tree.children_left[node_id]\n    right_child = tree.children_right[node_id]\n    \n    if left_child == _tree.TREE_LEAF:\n        samples = np.array([tree.n_node_samples[node_id]])\n        \n    else:\n        \n        left_samples = leaf_samples(tree, left_child)\n        right_samples = leaf_samples(tree, right_child)\n        \n        samples = np.append(left_samples, right_samples)\n        \n    return samples\n\n\nLast week we made a function to grab them for a whole forest - since this is the\nsecond time we're doing this, and we may do it again, let's make a modular\nlittle function that takes a crawler function as an argument!\n\ndef getForestParams(X, y, param, kwargs):\n    clf = RandomForestClassifier(**kwargs)\n    clf.fit(X, y)\n    params = np.hstack([param(estimator.tree_) \n                 for estimator in clf.estimators_])\n    return {\"min\": params.min(),\n           \"max\": params.max()}\n\n\nLet's see it in action!\n\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\nrfArgs = {\"random_state\": 0,\n          \"n_jobs\": -1,\n          \"class_weight\": \"balanced\",\n         \"n_estimators\": 18,\n         \"oob_score\": True}\n\ngetForestParams(X, y, leaf_samples, rfArgs)\n#> {'max': 199, 'min': 1}\n\n\nAlmost ready to start optimizing!  Since part of what we get out of optimizing \nmin_samples_leaf  is regularization (and because it's just good practice!),\nlet's make a metric with some cross-validation.  Luckily, Scikit  has a builtin \ncross_val_score  function.  We'll just need to do a teensy bit of tweaking to\nmake it use the area under a precision_recall_curve.\n\nfrom sklearn.model_selection import cross_val_score\n\ndef auc_prc(estimator, X, y):\n    estimator.fit(X, y)\n    y_pred = estimator.oob_decision_function_[:, 1]\n    precision, recall, _ = precision_recall_curve(y, y_pred)\n    return auc(recall, precision)\n\ndef getForestAccuracyCV(X, y, kwargs):\n    clf = RandomForestClassifier(**kwargs)\n    return np.mean(cross_val_score(clf, X, y, scoring=auc_prc, cv=5))\n\n\nAwesome, now we have a metric that can be fed into our binary search.\n\nmin_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    \"min_samples_leaf\", \n                    0, \n                    1, \n                    199)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n\n\nmin_samples_leaf\n score\n time\n 1\n 0.981662\n 1.402102\n 199\n 0.506455\n 1.416349\n 100\n 0.506455\n 1.401090\n 51\n 0.506455\n 1.394548\n 26\n 0.975894\n 1.396503\n 14\n 0.982954\n 1.398522\n 7\n 0.979888\n 1.398929\n 10\n 0.984789\n 1.404815\n 12\n 0.986302\n 1.391171\n \nmin_samples_leaf\n score\n time\n scoreTimeRatio\n 1\n 0.992414\n 0.473848\n 0.082938\n 199\n 0.002084\n 1.039718\n 0.000000\n 100\n 0.002084\n 0.433676\n 0.000111\n 51\n 0.002084\n 0.173824\n 0.000396\n 26\n 0.980393\n 0.251484\n 0.154448\n 14\n 0.995105\n 0.331692\n 0.118839\n 7\n 0.988716\n 0.347858\n 0.112585\n 10\n 0.998930\n 0.581632\n 0.067998\n 12\n 1.002084\n 0.039718\n 1.000000\n Looks like the action's between 1 and 51.  More than that, and the score goes\nwhile simultaneously increasing the runtime - the opposite of what we want!\n\nmin_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    \"min_samples_leaf\", \n                    0, \n                    1, \n                    14)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n\n\nmin_samples_leaf\n score\n time\n 1\n 0.981662\n 1.389387\n 51\n 0.506455\n 1.403807\n 26\n 0.975894\n 1.404517\n 14\n 0.982954\n 1.385420\n 7\n 0.979888\n 1.398840\n 10\n 0.984789\n 1.393863\n 12\n 0.986302\n 1.411774\n \nmin_samples_leaf\n score\n time\n scoreTimeRatio\n 1\n 0.992414\n 0.188492\n 0.200671\n 51\n 0.002084\n 0.735618\n 0.000000\n 26\n 0.980393\n 0.762561\n 0.048920\n 14\n 0.995105\n 0.037944\n 1.000000\n 7\n 0.988716\n 0.547179\n 0.068798\n 10\n 0.998930\n 0.358303\n 0.106209\n 12\n 1.002084\n 1.037944\n 0.036709\n Big drop-off after 26, it seems!\n\nmin_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    \"min_samples_leaf\", \n                    0, \n                    1, \n                    26)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n\n\nmin_samples_leaf\n score\n time\n 1\n 0.981662\n 1.407957\n 26\n 0.975894\n 1.398042\n 14\n 0.982954\n 1.396782\n 7\n 0.979888\n 1.396096\n 10\n 0.984789\n 1.402322\n 12\n 0.986302\n 1.401080\n \nmin_samples_leaf\n score\n time\n scoreTimeRatio\n 1\n 0.650270\n 1.084306\n 0.040144\n 26\n 0.096077\n 0.248406\n 0.000000\n 14\n 0.774346\n 0.142157\n 0.954016\n 7\n 0.479788\n 0.084306\n 1.000000\n 10\n 0.950677\n 0.609184\n 0.221294\n 12\n 1.096077\n 0.504512\n 0.336668\n One more with 14 as our upper limit!\n\nmin_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    \"min_samples_leaf\", \n                    0, \n                    1, \n                    14)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n\n\nmin_samples_leaf\n score\n time\n 1\n 0.981662\n 1.401341\n 14\n 0.982954\n 1.400361\n 7\n 0.979888\n 1.402408\n 4\n 0.981121\n 1.401396\n 3\n 0.983580\n 1.401332\n \nmin_samples_leaf\n score\n time\n scoreTimeRatio\n 1\n 0.992414\n 0.188492\n 0.200671\n 51\n 0.002084\n 0.735618\n 0.000000\n 26\n 0.980393\n 0.762561\n 0.048920\n 14\n 0.995105\n 0.037944\n 1.000000\n 7\n 0.988716\n 0.547179\n 0.068798\n 10\n 0.998930\n 0.358303\n 0.106209\n 12\n 1.002084\n 1.037944\n 0.036709\n 3 it is!I suppose when it gets this small we could use a regular Grid Search,\nbut...maybe next week!  Or maybe another variable!  Or maybe benchmarks vs \nGridSearchCV  and/or RandomizedSearchCV.  Who knows what the future holds?","html":"<p>Part 1 (n_estimators) <a href=\"https://hackersandslackers.com/code-snippet-corner-tuning-machine-learning-hyperparameters-with-binary-search/\">here</a><br>Part 2 (max_depth) <a href=\"https://hackersandslackers.com/code-snippet-corner-tuning-random-learning-hyperparameters-with-binary-search/\">here</a><br>Notebook <a href=\"https://github.com/mattalhonte/binary-grid-search/blob/master/Introspect%20Trees%20(Samples).ipynb\">here</a></p><hr><p>Another parameter, another set of quirks!</p><p><code>min_samples_leaf</code> is sort of similar to <code>max_depth</code>.  It helps us avoid overfitting.  It's also non-obvious what you should use as your upper and lower limits to search between.  Let's do what we did last week - build a forest with no parameters, see what it does, and use the upper and lower limits!</p><pre><code class=\"language-python\">import pandas as pd\n\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import auc\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import load_breast_cancer\n\n\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\nrfArgs = {&quot;random_state&quot;: 0,\n          &quot;n_jobs&quot;: -1,\n          &quot;class_weight&quot;: &quot;balanced&quot;,\n         &quot;n_estimators&quot;: 18,\n         &quot;oob_score&quot;: True}\n\nclf = RandomForestClassifier(**rfArgs)\nclf.fit(X, y)\n</code></pre>\n<p>Let's use the handy function from <a href=\"https://aysent.github.io/2015/11/08/random-forest-leaf-visualization.html\">here</a> to crawl the number of samples in a tree's leaf nodes: </p><pre><code class=\"language-python\">def leaf_samples(tree, node_id = 0):\n    left_child = tree.children_left[node_id]\n    right_child = tree.children_right[node_id]\n    \n    if left_child == _tree.TREE_LEAF:\n        samples = np.array([tree.n_node_samples[node_id]])\n        \n    else:\n        \n        left_samples = leaf_samples(tree, left_child)\n        right_samples = leaf_samples(tree, right_child)\n        \n        samples = np.append(left_samples, right_samples)\n        \n    return samples\n</code></pre>\n<p>Last week we made a function to grab them for a whole forest - since this is the second time we're doing this, and we may do it again, let's make a modular little function that takes a crawler function as an argument!</p><pre><code class=\"language-python\">def getForestParams(X, y, param, kwargs):\n    clf = RandomForestClassifier(**kwargs)\n    clf.fit(X, y)\n    params = np.hstack([param(estimator.tree_) \n                 for estimator in clf.estimators_])\n    return {&quot;min&quot;: params.min(),\n           &quot;max&quot;: params.max()}\n</code></pre>\n<p>Let's see it in action!</p><pre><code class=\"language-python\">data = load_breast_cancer()\nX, y = data.data, data.target\n\nrfArgs = {&quot;random_state&quot;: 0,\n          &quot;n_jobs&quot;: -1,\n          &quot;class_weight&quot;: &quot;balanced&quot;,\n         &quot;n_estimators&quot;: 18,\n         &quot;oob_score&quot;: True}\n\ngetForestParams(X, y, leaf_samples, rfArgs)\n#&gt; {'max': 199, 'min': 1}\n</code></pre>\n<p>Almost ready to start optimizing!  Since part of what we get out of optimizing <code>min_samples_leaf</code> is regularization (and because it's just good practice!), let's make a metric with some cross-validation.  Luckily, <strong>Scikit</strong> has a builtin <code>cross_val_score</code> function.  We'll just need to do a teensy bit of tweaking to make it use the area under a <code>precision_recall_curve</code>.</p><pre><code class=\"language-python\">from sklearn.model_selection import cross_val_score\n\ndef auc_prc(estimator, X, y):\n    estimator.fit(X, y)\n    y_pred = estimator.oob_decision_function_[:, 1]\n    precision, recall, _ = precision_recall_curve(y, y_pred)\n    return auc(recall, precision)\n\ndef getForestAccuracyCV(X, y, kwargs):\n    clf = RandomForestClassifier(**kwargs)\n    return np.mean(cross_val_score(clf, X, y, scoring=auc_prc, cv=5))\n</code></pre>\n<p>Awesome, now we have a metric that can be fed into our binary search.</p><pre><code class=\"language-python\">min_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    &quot;min_samples_leaf&quot;, \n                    0, \n                    1, \n                    199)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n</code></pre>\n<div class=\"tableContainer\">\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.981662</td>\n      <td>1.402102</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>0.506455</td>\n      <td>1.416349</td>\n    </tr>\n    <tr>\n      <th>100</th>\n      <td>0.506455</td>\n      <td>1.401090</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>0.506455</td>\n      <td>1.394548</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.975894</td>\n      <td>1.396503</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.982954</td>\n      <td>1.398522</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.979888</td>\n      <td>1.398929</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.984789</td>\n      <td>1.404815</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0.986302</td>\n      <td>1.391171</td>\n    </tr>\n  </tbody>\n</table>\n<br>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n      <th>scoreTimeRatio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.992414</td>\n      <td>0.473848</td>\n      <td>0.082938</td>\n    </tr>\n    <tr>\n      <th>199</th>\n      <td>0.002084</td>\n      <td>1.039718</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>100</th>\n      <td>0.002084</td>\n      <td>0.433676</td>\n      <td>0.000111</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>0.002084</td>\n      <td>0.173824</td>\n      <td>0.000396</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.980393</td>\n      <td>0.251484</td>\n      <td>0.154448</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.995105</td>\n      <td>0.331692</td>\n      <td>0.118839</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.988716</td>\n      <td>0.347858</td>\n      <td>0.112585</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.998930</td>\n      <td>0.581632</td>\n      <td>0.067998</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1.002084</td>\n      <td>0.039718</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/min_samples_leaf1.png\" class=\"kg-image\"></figure><p>Looks like the action's between 1 and 51.  More than that, and the score goes while simultaneously increasing the runtime - the opposite of what we want!</p><pre><code class=\"language-python\">min_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    &quot;min_samples_leaf&quot;, \n                    0, \n                    1, \n                    14)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n</code></pre>\n<div class=\"tableContainer\">\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.981662</td>\n      <td>1.389387</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>0.506455</td>\n      <td>1.403807</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.975894</td>\n      <td>1.404517</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.982954</td>\n      <td>1.385420</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.979888</td>\n      <td>1.398840</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.984789</td>\n      <td>1.393863</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0.986302</td>\n      <td>1.411774</td>\n    </tr>\n  </tbody>\n</table>\n<br>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n      <th>scoreTimeRatio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.992414</td>\n      <td>0.188492</td>\n      <td>0.200671</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>0.002084</td>\n      <td>0.735618</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.980393</td>\n      <td>0.762561</td>\n      <td>0.048920</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.995105</td>\n      <td>0.037944</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.988716</td>\n      <td>0.547179</td>\n      <td>0.068798</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.998930</td>\n      <td>0.358303</td>\n      <td>0.106209</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1.002084</td>\n      <td>1.037944</td>\n      <td>0.036709</td>\n    </tr>\n  </tbody>\n</table>\n</div><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/min_samples_leaf2.png\" class=\"kg-image\"></figure><p>Big drop-off after 26, it seems!</p><pre><code class=\"language-python\">min_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    &quot;min_samples_leaf&quot;, \n                    0, \n                    1, \n                    26)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n</code></pre>\n<div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.981662</td>\n      <td>1.407957</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.975894</td>\n      <td>1.398042</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.982954</td>\n      <td>1.396782</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.979888</td>\n      <td>1.396096</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.984789</td>\n      <td>1.402322</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0.986302</td>\n      <td>1.401080</td>\n    </tr>\n  </tbody>\n</table>\n<br>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n      <th>scoreTimeRatio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.650270</td>\n      <td>1.084306</td>\n      <td>0.040144</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.096077</td>\n      <td>0.248406</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.774346</td>\n      <td>0.142157</td>\n      <td>0.954016</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.479788</td>\n      <td>0.084306</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.950677</td>\n      <td>0.609184</td>\n      <td>0.221294</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1.096077</td>\n      <td>0.504512</td>\n      <td>0.336668</td>\n    </tr>\n  </tbody>\n</table>\n</div><figure class=\"kg-card kg-image-card\"><img src=\"https://res-4.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/min_samples_leaf3.png\" class=\"kg-image\"></figure><p>One more with 14 as our upper limit!</p><pre><code class=\"language-python\">min_samples_leaf = bgs.compareValsBaseCase(X, \n                    y, \n                    getForestAccuracyCV,        \n                    rfArgs, \n                    &quot;min_samples_leaf&quot;, \n                    0, \n                    1, \n                    14)\nbgs.showTimeScoreChartAndGraph(min_samples_leaf)\n</code></pre>\n<div class=\"tableContainer\">\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.981662</td>\n      <td>1.401341</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.982954</td>\n      <td>1.400361</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.979888</td>\n      <td>1.402408</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.981121</td>\n      <td>1.401396</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.983580</td>\n      <td>1.401332</td>\n    </tr>\n  </tbody>\n</table>\n<br>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>min_samples_leaf</th>\n      <th>score</th>\n      <th>time</th>\n      <th>scoreTimeRatio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.992414</td>\n      <td>0.188492</td>\n      <td>0.200671</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>0.002084</td>\n      <td>0.735618</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0.980393</td>\n      <td>0.762561</td>\n      <td>0.048920</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0.995105</td>\n      <td>0.037944</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.988716</td>\n      <td>0.547179</td>\n      <td>0.068798</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.998930</td>\n      <td>0.358303</td>\n      <td>0.106209</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1.002084</td>\n      <td>1.037944</td>\n      <td>0.036709</td>\n    </tr>\n  </tbody>\n</table>\n</div><figure class=\"kg-card kg-image-card\"><img src=\"https://res-1.cloudinary.com/hackers-and-slackers/image/upload/f_auto,q_auto/v1/images/min_samples_leaf4.png\" class=\"kg-image\"><figcaption>3 it is!</figcaption></figure><p>I suppose when it gets this small we could use a regular Grid Search, but...maybe next week!  Or maybe another variable!  Or maybe benchmarks vs <code>GridSearchCV</code> and/or <code>RandomizedSearchCV</code>.  Who knows what the future holds?</p>","url":"https://hackersandslackers.com/random-forests-hyperparameters-min_samples_leaf/","uuid":"766a3eb8-aacc-47c6-91a9-744b84613626","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5b9f047cab64c97c60f7be90"}},{"node":{"id":"Ghost__Post__5c12d7bfe875ad7bb86736fc","title":"Lynx Roundup, September 17th","slug":"lynx-roundup-september-17th","featured":false,"feature_image":"https://hackersandslackers.com/content/images/lynx/86@2x.jpg","excerpt":"Dealing with missing values in clinical machine learning!  Recursive SQL queries with CTEs!  SAT (NP stuff) in Python!","custom_excerpt":"Dealing with missing values in clinical machine learning!  Recursive SQL queries with CTEs!  SAT (NP stuff) in Python!","created_at_pretty":"05 September, 2018","published_at_pretty":"17 September, 2018","updated_at_pretty":"17 September, 2018","created_at":"2018-09-05T16:56:22.000-04:00","published_at":"2018-09-17T07:00:00.000-04:00","updated_at":"2018-09-17T07:00:00.000-04:00","meta_title":"Dealing with missing values in clinical machine learning!  Recursive SQL queries with CTEs!  SAT (NP stuff) in Python! | Hackers And Slackers","meta_description":"Dealing with missing values in clinical machine learning!  Recursive SQL queries with CTEs!  SAT (NP stuff) in Python!","og_description":"Dealing with missing values in clinical machine learning!  Recursive SQL queries with CTEs!  SAT (NP stuff) in Python!","og_image":"https://hackersandslackers.com/content/images/lynx/86@2x.jpg","og_title":"Lynx Roundup, September 17th","twitter_description":"Dealing with missing values in clinical machine learning!  Recursive SQL queries with CTEs!  SAT (NP stuff) in Python!","twitter_image":"https://hackersandslackers.com/content/images/lynx/86@2x.jpg","twitter_title":"Lynx Roundup, September 17th","authors":[{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null}],"primary_author":{"name":"Matthew Alhonte","slug":"matt","bio":"Super villain in somebody's action hero movie. Experienced a radioactive freak accident at a young age, which rendered him part-snake and strangely adept at Python.\n\n","profile_image":"https://hackersandslackers.com/content/images/2019/03/matt.jpg","twitter":"@MattAlhonte","facebook":null,"website":null},"primary_tag":{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Roundup","slug":"roundup","description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","feature_image":null,"meta_description":"Subscribe to our daily roundups of top data science news articles, slimmed down to only the good stuff.","meta_title":"Lynx Roundup | Hackers and Slackers","visibility":"public"}],"plaintext":"Efficient and effective machine learning on clinical data with missing\ninformation\n[https://static.epcc.ed.ac.uk/dissertations/hpc-msc/2016-2017/Adeyinka_Lipede-MSc-dissertation.pdf]\n\n\n\nhttps://haughtcodeworks.com/blog/software-development/recursive-sql-queries-using-ctes/\n\n\n\nhttps://www.quora.com/What-programming-language-that-has-appeared-recently-in-the-last-10-years-are-you-currently-interested-in-or-want-to-learn/answer/Phil-Jones\n\n\n\nhttps://sahandsaba.com/understanding-sat-by-implementing-a-simple-sat-solver-in-python.html\n\n\n\nhttp://web.stanford.edu/~ouster/cgi-bin/sayings.php\n\n\n\nhttps://www.ece.cmu.edu/news-and-events/story/2018/08/rethinking-social-networks.html\n\n\n\nhttps://blogs.scientificamerican.com/observations/how-can-we-promote-cooperation-in-an-uncooperative-society/","html":"<p></p><p><a href=\"https://static.epcc.ed.ac.uk/dissertations/hpc-msc/2016-2017/Adeyinka_Lipede-MSc-dissertation.pdf\">Efficient and effective machine learning on clinical data with missing information</a></p><p></p><p><a href=\"https://haughtcodeworks.com/blog/software-development/recursive-sql-queries-using-ctes/\">https://haughtcodeworks.com/blog/software-development/recursive-sql-queries-using-ctes/</a></p><p></p><p><a href=\"https://www.quora.com/What-programming-language-that-has-appeared-recently-in-the-last-10-years-are-you-currently-interested-in-or-want-to-learn/answer/Phil-Jones\">https://www.quora.com/What-programming-language-that-has-appeared-recently-in-the-last-10-years-are-you-currently-interested-in-or-want-to-learn/answer/Phil-Jones</a></p><p></p><p><a href=\"https://sahandsaba.com/understanding-sat-by-implementing-a-simple-sat-solver-in-python.html\">https://sahandsaba.com/understanding-sat-by-implementing-a-simple-sat-solver-in-python.html</a></p><p></p><p><a href=\"http://web.stanford.edu/~ouster/cgi-bin/sayings.php\">http://web.stanford.edu/~ouster/cgi-bin/sayings.php</a></p><p></p><p><a href=\"https://www.ece.cmu.edu/news-and-events/story/2018/08/rethinking-social-networks.html\">https://www.ece.cmu.edu/news-and-events/story/2018/08/rethinking-social-networks.html</a></p><p></p><p><a href=\"https://blogs.scientificamerican.com/observations/how-can-we-promote-cooperation-in-an-uncooperative-society/\">https://blogs.scientificamerican.com/observations/how-can-we-promote-cooperation-in-an-uncooperative-society/</a></p>","url":"https://hackersandslackers.com/lynx-roundup-september-17th/","uuid":"c0a3e578-feda-4e54-9ede-8cd8da5c69ac","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5b9042f61fc1fc7d92b5c501"}}]}},"pageContext":{"slug":"matt","limit":12,"skip":132,"numberOfPages":24,"humanPageNumber":12,"prevPageNumber":11,"nextPageNumber":13,"previousPagePath":"/author/matt/page/11/","nextPagePath":"/author/matt/page/13/"}}