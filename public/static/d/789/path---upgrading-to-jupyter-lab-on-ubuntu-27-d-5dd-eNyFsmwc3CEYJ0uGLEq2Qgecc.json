{"data":{"ghostPost":{"id":"Ghost__Post__5cacc6440a88d417374aaf43","title":"Upgrading to JupyterLab on Ubuntu","slug":"upgrading-to-jupyter-lab-on-ubuntu","featured":false,"feature_image":"https://hackersandslackers.com/content/images/2019/04/jupyterlab-1-1.jpg","excerpt":"Improve your Jupyter workflow with JupyterLab's powerful interface & customizations.","custom_excerpt":"Improve your Jupyter workflow with JupyterLab's powerful interface & customizations.","created_at_pretty":"09 April, 2019","published_at_pretty":"14 April, 2019","updated_at_pretty":"14 April, 2019","created_at":"2019-04-09T12:20:20.000-04:00","published_at":"2019-04-14T13:25:33.000-04:00","updated_at":"2019-04-14T13:25:33.000-04:00","meta_title":"Upgrading to Jupyter Lab on Ubuntu | Hackers and Slackers","meta_description":"Improve your Jupyter workflow with JupyterLab's powerful interface & customizations.","og_description":"Improve your Jupyter workflow with JupyterLab's powerful interface & customizations.","og_image":"https://hackersandslackers.com/content/images/2019/04/jupyterlab-1-3.jpg","og_title":"Upgrading to Jupyter Lab on Ubuntu","twitter_description":"Improve your Jupyter workflow with JupyterLab's powerful interface & customizations.","twitter_image":"https://hackersandslackers.com/content/images/2019/04/jupyterlab-1-2.jpg","twitter_title":"Upgrading to Jupyter Lab on Ubuntu","authors":[{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"}],"primary_author":{"name":"Todd Birchard","slug":"todd","bio":"Product manager turned engineer with an ongoing identity crisis. Breaks everything before learning best practices. Completely normal and emotionally stable.","profile_image":"https://hackersandslackers.com/content/images/2019/03/todd3.jpg","twitter":"@ToddRBirchard","facebook":null,"website":"https://toddbirchard.com"},"primary_tag":{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"},"tags":[{"name":"Data Science","slug":"datascience","description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","feature_image":null,"meta_description":"Watch as we attempt to maintain a delicate harmony of math, engineering, and intuition to solve larger-than-life problems.","meta_title":"Data Science | Hackers and Slackers","visibility":"public"},{"name":"Python","slug":"python","description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold.","feature_image":null,"meta_description":"Let us feed your endless Python addiction! Regardless of where you stand as a Pythonista, our team of pros are constantly teaching and sharing pythonic gold","meta_title":"Python Tricks, Hacks, and Snippets | Hackers and Slackers","visibility":"public"},{"name":"DevOps","slug":"devops","description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","feature_image":null,"meta_description":"Configuring server-side infrastructure, cloud architecture, and sometimes networking. Even automate your DevOps workflow with products from Hashicorp.","meta_title":"DevOps: Networking And Server Configuration | Hackers and Slackers","visibility":"public"}],"plaintext":"Last we chatted, we walked through the process of getting started with Jupyter\nnotebooks on a Ubuntu server\n[https://hackersandslackers.com/running-jupyter-notebooks-on-a-ubuntu-server/].\nThe classic Jupyter notebook interface is certainly well-suited to the job done.\nThat said, it only takes some time of getting lost in the interface to start\nthinking we can do better. That's where Jupyter Lab comes in.\n\nWhy JupyterLab?\nJupyterLab is sometimes referred to as \"the next generation of Jupyter\nnotebooks,\" which is a statement I can attest to. JupyterLab offers an improved\ninterface for Jupyter notebooks which is both available out of the box, as well\nas highly customizable for your workflow.\n\nOut of the box, the traditional Jupyter interface is extended to include a tree\nfile manager: similar to what you might expect from an IDE. This allows you to\neasily browse all  available notebooks on your server. In addition, the notebook\ninterface has been simplified to reduce noise brought on by (mostly useless)\ntoolbars and excessive buttons. Take a look at the interface prior to any\ncustomization:\n\nEven more appealing than an updated interface is JupyterLab's openness to \ncustomization. JupyterLab has a strongly growing ecosystem for extension\ndevelopment: we'll be getting a taste of some of those goodies in just a moment.\n\nGetting Started\nIf you're starting from scratch, go ahead and follow the same steps in the \nJupyter Notebook setup tutorial\n[https://hackersandslackers.com/running-jupyter-notebooks-on-a-ubuntu-server/] \nup until Conda is set up and activated. \n\nWith a Ubuntu server prepped and ready, install Jupyter Lab with the following\ncommand:\n\n$ conda install -c conda-forge jupyterlab\n\n\nBefore we go any further, make sure you're tunneled into your server - we need\nto do this in order to launch notebooks, remember?:\n\n$ ssh -L 8888:localhost:8888 myuser@your_server_ip\n\n\nStart up the Jupyter Lab environment like this:\n\n$ conda activate your_env\n$ jupyter lab\n\n\nIf everything went well, you should be greeted with a fancy Jupyter Lab loading\nscreen and then thrown into the Jupyer Lab environment.\n\nHome sweet home.Things are looking good right off the bat. Without any added\nlibraries, we've already beefed up our Jupyter Notebook workspace. The tree view\nis available, we can launch terminals, and don't forget: we can split screen by\ndragging snapping windows where we see fit. \n\nCustomizing Your Workspace\nJupyterLab uses NodeJS to enable some of its cooler functionality and\nextensions. Â Go ahead and install Node:\n\n$ cd /tmp\n$ curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\n$ sudo apt-get install -y nodejs\n\n\nNice! Now we have all we need to go nuts with extensions. Here are the ones I\nrecommend:\n\nStatus Bar\n\n--------------------------------------------------------------------------------\n\nKeep an eye on your environment's vitals.Repository found here [https://github.com/jupyterlab/jupyterlab-statusbar].\nInstallation steps:\n\n$ pip install nbresuse\n$ jupyter serverextension enable --py nbresuse\n$ jupyter labextension install @jupyterlab/statusbar\n\n\nTable of Contents\nAuto-generate table of contents to help navigate and organize your notebooks.\nRepository found here [https://github.com/jupyterlab/jupyterlab-toc].\nInstallation steps:\n\n$ jupyter labextension install @jupyterlab/toc\n\n\nVariable Inspector\n\n--------------------------------------------------------------------------------\n\nKeep tabs on every variable used in your notebook and their respective values.\nRepository found here [https://github.com/lckr/jupyterlab-variableInspector].\nInstallation steps:\n\n$ jupyter labextension install @lckr/jupyterlab_variableinspector\n\n\nGit Integration\n\n--------------------------------------------------------------------------------\n\nA visual approach to version control.Repository found here [https://github.com/jupyterlab/jupyterlab-git].\nInstallation steps:\n\n$ jupyter labextension install @jupyterlab/git\n$ pip install jupyterlab-git\n$ jupyter serverextension enable --py jupyterlab_git\n\n\nDraw.io\n\n--------------------------------------------------------------------------------\n\nCreate Draw.io diagrams right from your notebook.Repository found here [https://github.com/QuantStack/jupyterlab-drawio].\nInstallation steps:\n\n$ jupyter labextension install jupyterlab-drawio\n\n\nAdditional Resources\nYou have everything you need to go nuts from here forward. INSTALL ALL THE\nEXTENSIONS!\n\nIf you're looking for more extension goodness, I'd start with the Awesome\nJupyter [https://github.com/markusschanta/awesome-jupyter#jupyterlab-extensions] \n repo on Github- there's a section specifically for JupyterLab.\n\nIf you're totally into JupyterLab now and want to join a gang, the community\npage can be found here [https://github.com/topics/jupyterlab-extension].\n\nLastly, if you've gone totally off the deep end and already want to start\ncreating extensions of your own, check out the extension documentation\n[https://jupyterlab.readthedocs.io/en/stable/user/extensions.html]. That's all\nfolks!","html":"<p>Last we chatted, we walked through the process of getting started with <a href=\"https://hackersandslackers.com/running-jupyter-notebooks-on-a-ubuntu-server/\">Jupyter notebooks on a Ubuntu server</a>. The classic Jupyter notebook interface is certainly well-suited to the job done. That said, it only takes some time of getting lost in the interface to start thinking we can do better. That's where Jupyter Lab comes in.</p><h2 id=\"why-jupyterlab\">Why JupyterLab?</h2><p>JupyterLab is sometimes referred to as \"the next generation of Jupyter notebooks,\" which is a statement I can attest to. JupyterLab offers an improved interface for Jupyter notebooks which is both available out of the box, as well as highly customizable for your workflow.</p><p>Out of the box, the traditional Jupyter interface is extended to include a tree file manager: similar to what you might expect from an IDE. This allows you to easily browse <em>all</em> available notebooks on your server. In addition, the notebook interface has been simplified to reduce noise brought on by (mostly useless) toolbars and excessive buttons. Take a look at the interface prior to any customization:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://hackersandslackers.com/content/images/2019/04/jupyterlab-no-customization.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Even more appealing than an updated interface is JupyterLab's openness to <em>customization</em>. JupyterLab has a strongly growing ecosystem for extension development: we'll be getting a taste of some of those goodies in just a moment.</p><h2 id=\"getting-started\">Getting Started</h2><p>If you're starting from scratch, go ahead and follow the same steps in the <a href=\"https://hackersandslackers.com/running-jupyter-notebooks-on-a-ubuntu-server/\">Jupyter Notebook setup tutorial</a> up until Conda is set up and activated. </p><p>With a Ubuntu server prepped and ready, install Jupyter Lab with the following command:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ conda install -c conda-forge jupyterlab\n</code></pre>\n<!--kg-card-end: markdown--><p>Before we go any further, make sure you're tunneled into your server - we need to do this in order to launch notebooks, remember?:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ ssh -L 8888:localhost:8888 myuser@your_server_ip\n</code></pre>\n<!--kg-card-end: markdown--><p>Start up the Jupyter Lab environment like this:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ conda activate your_env\n$ jupyter lab\n</code></pre>\n<!--kg-card-end: markdown--><p>If everything went well, you should be greeted with a fancy Jupyter Lab loading screen and then thrown into the Jupyer Lab environment.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/04/jupyter-lab-home.png\" class=\"kg-image\"><figcaption>Home sweet home.</figcaption></figure><!--kg-card-end: image--><p>Things are looking good right off the bat. Without any added libraries, we've already beefed up our Jupyter Notebook workspace. The tree view is available, we can launch terminals, and don't forget: we can split screen by dragging snapping windows where we see fit. </p><h2 id=\"customizing-your-workspace\">Customizing Your Workspace</h2><p>JupyterLab uses NodeJS to enable some of its cooler functionality and extensions. Â Go ahead and install Node:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ cd /tmp\n$ curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\n$ sudo apt-get install -y nodejs\n</code></pre>\n<!--kg-card-end: markdown--><p>Nice! Now we have all we need to go nuts with extensions. Here are the ones I recommend:</p><h3 id=\"status-bar\">Status Bar</h3><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/04/jupyterlab-statusbar.gif\" class=\"kg-image\"><figcaption>Keep an eye on your environment's vitals.</figcaption></figure><!--kg-card-end: image--><p>Repository found <a href=\"https://github.com/jupyterlab/jupyterlab-statusbar\">here</a>. Installation steps:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ pip install nbresuse\n$ jupyter serverextension enable --py nbresuse\n$ jupyter labextension install @jupyterlab/statusbar\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"table-of-contents\">Table of Contents</h3><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/04/jupyterlab-toc.gif\" class=\"kg-image\"><figcaption>Auto-generate table of contents to help navigate and organize your notebooks.</figcaption></figure><!--kg-card-end: image--><p>Repository found <a href=\"https://github.com/jupyterlab/jupyterlab-toc\">here</a>. Installation steps:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ jupyter labextension install @jupyterlab/toc\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"variable-inspector\">Variable Inspector</h3><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/04/jupyterlab-vars.gif\" class=\"kg-image\"><figcaption>Keep tabs on every variable used in your notebook and their respective values.</figcaption></figure><!--kg-card-end: image--><p>Repository found <a href=\"https://github.com/lckr/jupyterlab-variableInspector\">here</a>. Installation steps:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ jupyter labextension install @lckr/jupyterlab_variableinspector\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"git-integration\">Git Integration</h3><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/04/jupyter-git.gif\" class=\"kg-image\"><figcaption>A visual approach to version control.</figcaption></figure><!--kg-card-end: image--><p>Repository found <a href=\"https://github.com/jupyterlab/jupyterlab-git\">here</a>. Installation steps:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ jupyter labextension install @jupyterlab/git\n$ pip install jupyterlab-git\n$ jupyter serverextension enable --py jupyterlab_git\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"draw-io\">Draw.io</h3><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://hackersandslackers.com/content/images/2019/04/drawio.gif\" class=\"kg-image\"><figcaption>Create Draw.io diagrams right from your notebook.</figcaption></figure><!--kg-card-end: image--><p>Repository found <a href=\"https://github.com/QuantStack/jupyterlab-drawio\">here</a>. Installation steps:</p><!--kg-card-begin: markdown--><pre><code class=\"language-shell\">$ jupyter labextension install jupyterlab-drawio\n</code></pre>\n<!--kg-card-end: markdown--><h2 id=\"additional-resources\">Additional Resources</h2><p>You have everything you need to go nuts from here forward. INSTALL ALL THE EXTENSIONS!</p><p>If you're looking for more extension goodness, I'd start with the <a href=\"https://github.com/markusschanta/awesome-jupyter#jupyterlab-extensions\">Awesome Jupyter</a> repo on Github- there's a section specifically for JupyterLab.</p><p>If you're totally into JupyterLab now and want to join a gang, the community page can be found <a href=\"https://github.com/topics/jupyterlab-extension\">here</a>.</p><p>Lastly, if you've gone totally off the deep end and already want to start creating extensions of your own, check out the <a href=\"https://jupyterlab.readthedocs.io/en/stable/user/extensions.html\">extension documentation</a>. That's all folks!</p><p></p>","url":"https://hackersandslackers.com/upgrading-to-jupyter-lab-on-ubuntu/","uuid":"58669f89-0b58-4689-bc6d-03f93d843919","page":false,"codeinjection_foot":null,"codeinjection_head":null,"comment_id":"5cacc6440a88d417374aaf43"}},"pageContext":{"slug":"upgrading-to-jupyter-lab-on-ubuntu"}}