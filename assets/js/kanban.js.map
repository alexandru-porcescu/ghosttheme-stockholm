{"version":3,"sources":["kanban.js"],"names":[],"mappings":"AAAA","sourcesContent":["/*const jiradb = client.getServiceClient(stitch.RemoteMongoClient.factory, 'mongodb-atlas').db('hackers');\n\n$(document).ready(function(){\n\n\n  function populateCards(cards, status) {\n      for (var i = 0; i < cards.length; i++) {\n        $('#' + status + ' .cards').append('<div class=\"card\"> \\n' +\n          '<h5>' + cards[i].summary + '</h5> \\n' +\n          //'<p>' + cards[i].description + '</p> \\n' +\n          '<div style=\"background-color:' + cards[i].issuetype_color + ';\" class=\"issuetype ' + cards[i].issuetype + '\"><img src=\"' + cards[i].issuetype_url + '\"></div> \\n' +\n          '<div class=\"info\"> \\n' +\n            '<div class=\"left\"> \\n' +\n              '<div class=\"avatar\"><img src=\"https://www.gravatar.com/avatar/9eb3868db428fb602e03b3059608199b?s=250&d=mm&r=x\"></div> \\n' +\n              '<div class=\"priority ' + cards[i].priority + '\"><i class=\"fas fa-arrow-up\"></i></div> \\n' +\n            '</div> \\n' +\n            '<div class=\"epic ' + cards[i].epic_name + '\"><span>' + cards[i].epic_name + '</span> <i class=\"fas fa-bolt\" style=color:' + cards[i].epic_color + ';\"></i></div> \\n' +\n          '</div> \\n' +\n        '</div>');\n      }\n      $('#' + status).append('<span class=\"count\"></span>');\n    }\n\n    const backlogColumn = document.getElementById(\"backlog\");\n    const todoColumn = document.getElementById(\"todo\");\n    const progressColumn = document.getElementById(\"inprogress\");\n    const doneColumn = document.getElementById(\"done\");\n\n\n\n    client.auth.loginWithCredential(new stitch.AnonymousCredential()).then(() =>\n      jiradb.collection('jira').find({status: 'Backlog', issuetype: { $in: ['Task', 'Story', 'Integrations', 'Bug']}, priority: { $in: ['Highest', 'High', 'Medium']}}, { limit: 6}).asArray()\n    ).then(docs => {\n        console.log(\"Found docs\", docs)\n        populateCards(docs, 'backlog')\n      }).catch(err => {\n      console.error(err)\n    });\n\n    client.auth.loginWithCredential(new stitch.AnonymousCredential()).then(() =>\n      jiradb.collection('jira').find({status: 'To Do', issuetype: { $in: ['Task', 'Story', 'Integration', 'Bug', 'Data', 'Content']}}, { limit: 6}).asArray()\n    ).then(docs => {\n        console.log(\"Found docs\", docs)\n        populateCards(docs, 'todo')\n      }).catch(err => {\n      console.error(err)\n    });\n\n    client.auth.loginWithCredential(new stitch.AnonymousCredential()).then(() =>\n      jiradb.collection('jira').find({status: 'In Progress', issuetype: { $in: ['Task', 'Story', 'Integration', 'Bug', 'Content', 'Data']}}, { limit: 6}).asArray()\n    ).then(docs => {\n        console.log(\"Found docs\", docs)\n        populateCards(docs, 'progress')\n      }).catch(err => {\n      console.error(err)\n    });\n\n    client.auth.loginWithCredential(new stitch.AnonymousCredential()).then(() =>\n      jiradb.collection('jira').find({status: 'Done', issuetype: { $in: ['Task', 'Story', 'Integrations', 'Bug']}}, { limit: 6}).asArray()\n    ).then(docs => {\n        console.log(\"Found docs\", docs)\n        populateCards(docs, 'done')\n      }).catch(err => {\n      console.error(err)\n    });\n\n    client.callFunction(\"numCards\", [\"Backlog\"]).then(result => {\n        $('#backlog .count').text(result + ' issues');\n    });\n\n    client.callFunction(\"numCards\", [\"To Do\"]).then(result => {\n        $('#todo .count').text(result + ' issues');\n    });\n\n    client.callFunction(\"numCards\", [\"In Progress\"]).then(result => {\n        $('#progress .count').text(result + ' issues');\n    });\n\n    client.callFunction(\"numCards\", [\"Done\"]).then(result => {\n        $('#done .count').text(result + ' issues');\n    });\n\n\n    var swiper = new Swiper('.swiper-container', {\n       height: 1000,\n       noSwiping: true,\n       spaceBetween: 8,\n       centeredSlides: false,\n       slidesPerView: 4,\n       grabCursor: false,\n       pagination: {\n          el: '.swiper-pagination',\n          type: 'bullets',\n        },\n       breakpoints: {\n      // when window width is <= 320px\n        1000: {\n          slidesPerView: 2,\n          noSwiping: false,\n          grabCursor: true,\n          initialSlide: 0,\n          centeredSlides:false\n        },\n        800: {\n          slidesPerView: 2,\n          noSwiping: false,\n          grabCursor: true,\n          //slidesOffsetBefore: 20,\n          //slidesOffsetAfter: 20,\n        },\n        600: {\n          slidesPerView: 1,\n          noSwiping: false,\n          slidesPerColumnFill: 'column',\n          grabCursor: true,\n          //slidesOffsetBefore: 20,\n          //slidesOffsetAfter: 20,\n        },\n        400: {\n          slidesPerView: 1,\n          noSwiping: false,\n          slidesPerColumnFill: 'column',\n          grabCursor: true,\n          //slidesOffsetBefore: 20,\n          //slidesOffsetAfter: 20,\n        }\n     }\n   });\n\n   swiper.pagination.render();\n\n   swiper.on('resize', function () {\n    swiper.slideTo(0, 300, false);\n    swiper.pagination.update();\n  });\n\n\n});\n*/\n"],"file":"kanban.js"}