{{!< default}}
{{! The tag above means - insert everything in this file into the {body} of the default.hbs template }}
<!-- start site's main content area -->
<script src="{{asset "/dist/resources.js"}}"></script>

<section class="content-wrap archive page-resources">
  <div class="container">
    <!-- start post -->
    {{#post}}
      <div class="main-content" style="width:100%;">
        {{#if feature_image}}
          <div class="featured-media" style="background-image: url({{feature_image}});">
          </div>
        {{/if}}
        <h1>{{{title}}}</h1>
        <p>{{content}}</p>
        <div id="tablewrapper">
        <table id="resources-table">
          <thead>

          </thead>
          <tbody>
          </tbody>
        </table>
      </div>
      </div>
  </div>
  {{/post}}
  </div>
  <!-- end main post area -->
</section>


<script>
  $(document).ready(function() {
    function populatePython(pythons, status) {
      $('#resources-table thead').append('<tr><th></th><th>summary</th><th>description</th><th>issuetype</th></tr>');
      for (var i = 0; i < pythons.length; i++) {
        $('#resources-table tbody').append('<tr class="' + pythons[i].issuetype + '"> \n ' +
          '<td class="icon"><img src="' + pythons[i].issuetype_icon + '"></td> \n' +
          '<td class="summary">' + pythons[i].summary + '</td> \n' +
          '<td><a href="' + pythons[i].description + '">' + pythons[i].description + '</a></td> \n' +
          '<td class="issuetype-name">' + pythons[i].issuetype + '</td> \n' +
          '</tr>');
      }
    }


    function python() {

      var slug = authorFunctions.current_author();
      var url = 'https://apisentris.com/api/v1/jira_python?select=issuetype_icon,summary,description,issuetype,updated&order_by=updated';
      var headers = {
        "Content-Type": "application/json",
        "client_id": "140000",
        "access_token": "6OMcDqLWFV7DuVnxAxJSmQ"
      }
      fetch(url, {
        method: 'GET',
        headers: headers
      }).then((res) => {
        console.log(res)
        return res.json()
      }).then((json) => {
        console.log(json);
        populatePython(json, 'resources-table');
      });


      $.ajax({
        method: "GET",
        url: "",
        headers: {
          client_id: "115000",
          access_token: "qWLp79NWuDtVxom5v6_h_g"
        },
        contentType: 'application/json'
      }).done(function(results) {

      });
    }

    python();
  });
</script>
